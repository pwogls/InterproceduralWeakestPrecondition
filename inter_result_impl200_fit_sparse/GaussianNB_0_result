>>> GaussianNB  ( classifier )
1000 trials: 0 passed, 1000 failed.
+-------------------+----------------+-----------------+----------------+-----------------+-----------+--------+
|       name        | true_positives | false_positives | true_negatives | false_negatives | precision | recall |
+-------------------+----------------+-----------------+----------------+-----------------+-----------+--------+
| handwritten_(0/0) |       0        |      1000       |       0        |        0        |    0.0    |  INF   |
| docstrings_(0/0)  |       0        |      1000       |       0        |        0        |    0.0    |  INF   |
| WPanalysis_(8/74) |       0        |        0        |      1000      |        0        |    INF    |  INF   |
+-------------------+----------------+-----------------+----------------+-----------------+-----------+--------+
Note:
	handwritten_(A/B) means there are B total constraints, A of which are good constraints (no TODO).
	WP aboved are interesting wp, ie. 2+ hp or 1 + X/y. For overall WP, there are 74 total, 8 are good. All WP constraints are at /output/JSS_all_exceptions/

> Hyperparams: 
 ['var_smoothing', 'priors']

> relevantToOptimizer:
 ['var_smoothing']

> handwritten
False Positives (1000):
	(1000) A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.
True Negatives (0):

> docstring
False Positives (1000):
	(1000) A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.
True Negatives (0):

> WPanalysis
False Positives (0):
True Negatives (1000):
	(1000) A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.

> Failed constraints stats:
handwritten:

docstring:

WPanalysis:
freq = 1000
{'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse "
                'matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy '
                "array.'     ) ",
 'type': 'object',
 'not': {}}
