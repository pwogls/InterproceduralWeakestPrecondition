{'allOf': [{'type': 'object',
            'required': ['n_components', 'density', 'eps', 'dense_output', 'random_state'],
            'relevantToOptimizer': ['n_components', 'density', 'eps', 'dense_output'],
            'additionalProperties': False,
            'properties': {'n_components': {'XXX TODO XXX': "int or 'auto', optional (default = 'auto')",
                                            'description': 'Dimensionality of the target projection space',
                                            'anyOf': [{'type': 'integer',
                                                       'minimumForOptimizer': 2,
                                                       'maximumForOptimizer': 256,
                                                       'distribution': 'uniform'},
                                                      {'enum': ['auto']}],
                                            'default': 'auto'},
                           'density': {'XXX TODO XXX': "float in range ]0, 1], optional (default='auto')",
                                       'description': 'Ratio of non-zero component in the random projection matrix',
                                       'anyOf': [{'enum': ['auto']},
                                                 {'type': 'number',
                                                  'minimumForOptimizer': 0,
                                                  'maximumForOptimizer': 1,
                                                  'distribution': 'uniform'}],
                                       'default': 'auto'},
                           'eps': {'XXX TODO XXX': 'strictly positive float, optional, (default=0.1)',
                                   'description': 'Parameter to control the quality of the embedding according to the '
                                                  "Johnson-Lindenstrauss lemma when n_components is set to 'auto'",
                                   'type': 'number',
                                   'minimumForOptimizer': 0.001,
                                   'maximumForOptimizer': 0.1,
                                   'distribution': 'loguniform',
                                   'default': 0.1},
                           'dense_output': {'type': 'boolean',
                                            'default': False,
                                            'description': 'If True, ensure that the output of the random projection '
                                                           'is a dense numpy array even if the input and random '
                                                           'projection matrix are both sparse'},
                           'random_state': {'anyOf': [{'type': 'integer'},
                                                      {'laleType': 'numpy.random.RandomState'},
                                                      {'enum': [None]}],
                                            'default': None,
                                            'description': 'Control the pseudo random number generator used to '
                                                           'generate the matrix at fit time'}}}]}
