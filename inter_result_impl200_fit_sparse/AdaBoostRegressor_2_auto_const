{'allOf': [{'type': 'object',
            'required': ['base_estimator', 'n_estimators', 'learning_rate', 'loss', 'random_state'],
            'relevantToOptimizer': ['learning_rate', 'loss', 'n_estimators'],
            'additionalProperties': False,
            'properties': {'base_estimator': {'anyOf': [{'laleType': 'operator'}, {'enum': [None]}],
                                              'default': None,
                                              'description': 'The base estimator from which the boosted ensemble is '
                                                             'built.'},
                           'n_estimators': {'type': 'integer',
                                            'minimumForOptimizer': 50,
                                            'maximumForOptimizer': 500,
                                            'distribution': 'uniform',
                                            'default': 50,
                                            'description': 'The maximum number of estimators at which boosting is '
                                                           'terminated.'},
                           'learning_rate': {'type': 'number',
                                             'minimumForOptimizer': 0.01,
                                             'maximumForOptimizer': 1.0,
                                             'distribution': 'loguniform',
                                             'default': 1.0,
                                             'description': 'Learning rate shrinks the contribution of each regressor '
                                                            'by'},
                           'loss': {'enum': ['linear', 'square', 'exponential'],
                                    'default': 'linear',
                                    'description': 'The loss function to use when updating the weights after each'},
                           'random_state': {'anyOf': [{'type': 'integer'},
                                                      {'laleType': 'numpy.random.RandomState'},
                                                      {'enum': [None]}],
                                            'default': None,
                                            'description': 'If int, random_state is the seed used by the random number '
                                                           'generator;'}}}]}
