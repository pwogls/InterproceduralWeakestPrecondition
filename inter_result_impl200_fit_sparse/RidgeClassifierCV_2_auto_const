{'allOf': [{'type': 'object',
            'required': ['alphas', 'fit_intercept', 'normalize', 'scoring', 'cv', 'class_weight', 'store_cv_values'],
            'relevantToOptimizer': ['fit_intercept', 'normalize', 'cv', 'class_weight', 'store_cv_values'],
            'additionalProperties': False,
            'properties': {'alphas': {'type': 'array',
                                      'items': {'type': 'number'},
                                      'default': [0.1, 1.0, 10.0],
                                      'description': 'Array of alpha values to try'},
                           'fit_intercept': {'type': 'boolean',
                                             'default': True,
                                             'description': 'Whether to calculate the intercept for this model'},
                           'normalize': {'type': 'boolean',
                                         'default': False,
                                         'description': 'This parameter is ignored when ``fit_intercept`` is set to '
                                                        'False'},
                           'scoring': {'anyOf': [{'laleType': 'callable', 'forOptimizer': False},
                                                 {'enum': ['accuracy', None]}],
                                       'default': None,
                                       'description': 'A string (see model evaluation documentation) or a scorer '
                                                      'callable object / function with signature ``scorer(estimator, '
                                                      'X, y)``.'},
                           'cv': {'description': 'Cross-validation as integer or as object that has a split function.\n'
                                                 '                        The fit method performs cross validation on '
                                                 'the input dataset for per\n'
                                                 '                        trial, and uses the mean cross validation '
                                                 'performance for optimization.\n'
                                                 '                        This behavior is also impacted by '
                                                 'handle_cv_failure flag.\n'
                                                 '                        If integer: number of folds in '
                                                 'sklearn.model_selection.StratifiedKFold.\n'
                                                 '                        If object with split function: generator '
                                                 'yielding (train, test) splits\n'
                                                 '                        as arrays of indices. Can use any of the '
                                                 'iterators from\n'
                                                 '                        '
                                                 'https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation-iterators.',
                                  'anyOf': [{'type': 'integer',
                                             'minimum': 1,
                                             'default': 5,
                                             'minimumForOptimizer': 3,
                                             'maximumForOptimizer': 4,
                                             'distribution': 'uniform'},
                                            {'laleType': 'Any', 'forOptimizer': False},
                                            {'enum': [None]}],
                                  'default': None},
                           'class_weight': {'XXX TODO XXX': "dict or 'balanced', optional",
                                            'description': 'Weights associated with classes in the form '
                                                           '``{class_label: weight}``',
                                            'anyOf': [{'enum': ['balanced']}, {'enum': [None]}],
                                            'default': None},
                           'store_cv_values': {'type': 'boolean',
                                               'default': False,
                                               'description': 'Flag indicating if the cross-validation values '
                                                              'corresponding to each alpha should be stored in the '
                                                              '``cv_values_`` attribute (see below)'}}},
           {'XXX TODO XXX': 'Parameter: store_cv_values > only compatible with cv=none (i'}]}
