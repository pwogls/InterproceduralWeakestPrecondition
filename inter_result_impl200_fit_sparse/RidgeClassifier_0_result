>>> RidgeClassifier  ( classifier )
1000 trials: 648 passed, 352 failed.
+--------------------+----------------+-----------------+----------------+-----------------+-----------+--------------------+
|        name        | true_positives | false_positives | true_negatives | false_negatives | precision |       recall       |
+--------------------+----------------+-----------------+----------------+-----------------+-----------+--------------------+
| handwritten_(0/0)  |      648       |       352       |       0        |        0        |   0.648   |        1.0         |
|  docstrings_(0/1)  |      648       |       352       |       0        |        0        |   0.648   |        1.0         |
| WPanalysis_(4/185) |      588       |        0        |      352       |       60        |    1.0    | 0.9074074074074074 |
+--------------------+----------------+-----------------+----------------+-----------------+-----------+--------------------+
Note:
	handwritten_(A/B) means there are B total constraints, A of which are good constraints (no TODO).
	WP aboved are interesting wp, ie. 2+ hp or 1 + X/y. For overall WP, there are 185 total, 4 are good. All WP constraints are at /output/JSS_all_exceptions/

> Hyperparams: 
 ['alpha', 'copy_X', 'fit_intercept', 'max_iter', 'normalize', 'solver', 'tol', 'class_weight', 'random_state']

> relevantToOptimizer:
 ['alpha', 'copy_X', 'fit_intercept', 'max_iter', 'normalize', 'solver', 'tol']

> handwritten
False Positives (352):
	(77) solver='svd' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(75) SVD solver does not support sparse inputs currently
	(69) solver='lsqr' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(66) solver='cholesky' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(65) solver='saga' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
True Negatives (0):

> docstring
False Positives (352):
	(77) solver='svd' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(75) SVD solver does not support sparse inputs currently
	(69) solver='lsqr' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(66) solver='cholesky' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(65) solver='saga' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
True Negatives (0):

> WPanalysis
False Positives (0):
True Negatives (352):
	(77) solver='svd' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(75) SVD solver does not support sparse inputs currently
	(69) solver='lsqr' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(66) solver='cholesky' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`
	(65) solver='saga' does not support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', or set `fit_intercept=False`

> Failed constraints stats:
handwritten:

docstring:

WPanalysis:
freq = 277
{'description': 'From /linear_model/_ridge.py:_BaseRidge:fit, Exception: raise ValueError(     "solver=\'{}\' does not '
                "support fitting the intercept on sparse data. Please set the solver to 'auto' or 'sparse_cg', 'sag', "
                'or set `fit_intercept=False`"     .format(self.solver)) ',
 'anyOf': [{'type': 'object', 'not': {}},
           {'type': 'object', 'properties': {'fit_intercept': {'enum': [False]}}},
           {'type': 'object', 'properties': {'solver': {'enum': ['auto', 'sparse_cg', 'sag']}}}]}
freq = 135
{'description': "From /linear_model/_ridge.py:None:_ridge_regression, Exception: raise TypeError('SVD solver does not "
                "support sparse inputs currently') ",
 'anyOf': [{'allOf': [{'XXX TODO XXX': 'sparse.issparse(X)'},
                      {'type': 'object', 'properties': {'fit_intercept': {'enum': [True]}}}]},
           {'allOf': [{'type': 'object', 'properties': {'solver': {'enum': ['sag']}}},
                      {'XXX TODO XXX': 'sparse.issparse(X)'},
                      {'type': 'object', 'properties': {'fit_intercept': {'enum': [True]}}}]},
           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['auto']}}}},
                                 {'XXX TODO XXX': 'sparse.issparse(X)'},
                                 {'type': 'object', 'not': {}}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['auto']}}},
                                 {'allOf': [{'anyOf': [{'type': 'object',
                                                        'properties': {'solver': {'not': {'enum': ['sparse_cg']}}}},
                                                       {'type': 'object',
                                                        'properties': {'solver': {'not': {'enum': ['svd']}}}},
                                                       {'type': 'object', 'not': {}}]},
                                            {'anyOf': [{'type': 'object',
                                                        'properties': {'solver': {'enum': ['sparse_cg']}}},
                                                       {'allOf': [{'anyOf': [{'type': 'object',
                                                                              'properties': {'solver': {'not': {'enum': ['lsqr']}}}},
                                                                             {'type': 'object',
                                                                              'properties': {'solver': {'not': {'enum': ['svd']}}}},
                                                                             {'type': 'object', 'not': {}}]},
                                                                  {'anyOf': [{'type': 'object',
                                                                              'properties': {'solver': {'enum': ['lsqr']}}},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'properties': {'solver': {'not': {'enum': ['cholesky']}}}},
                                                                                                   {'type': 'object',
                                                                                                    'not': {}}]},
                                                                                        {'anyOf': [{'type': 'object',
                                                                                                    'properties': {'solver': {'enum': ['cholesky']}}},
                                                                                                   {'type': 'object',
                                                                                                    'properties': {'solver': {'not': {'enum': ['svd']}}}},
                                                                                                   {'type': 'object',
                                                                                                    'not': {}}]}]}]}]}]}]}]}]}]}
