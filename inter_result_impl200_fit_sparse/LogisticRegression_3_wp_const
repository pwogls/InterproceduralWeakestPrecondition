{'allOf': [{'description': 'This first sub-object lists all constructor arguments with their types, one at a time, '
                           'omitting cross-argument constraints.',
            'type': 'object',
            'additionalProperties': False,
            'required': ['penalty',
                         'dual',
                         'tol',
                         'C',
                         'fit_intercept',
                         'intercept_scaling',
                         'class_weight',
                         'random_state',
                         'solver',
                         'max_iter',
                         'multi_class',
                         'verbose',
                         'warm_start',
                         'n_jobs'],
            'relevantToOptimizer': ['C',
                                    'dual',
                                    'fit_intercept',
                                    'intercept_scaling',
                                    'max_iter',
                                    'multi_class',
                                    'penalty',
                                    'solver',
                                    'tol',
                                    'warm_start',
                                    'l1_ratio'],
            'properties': {'solver': {'default': 'lbfgs',
                                      'description': 'Algorithm for optimization problem.',
                                      'enum': ['newton-cg', 'lbfgs', 'liblinear', 'sag', 'saga']},
                           'penalty': {'default': 'l2',
                                       'description': 'Norm used in the penalization.',
                                       'enum': ['l1', 'l2', 'elasticnet', 'none']},
                           'dual': {'description': 'Dual or primal formulation.\n'
                                                   'Dual formulation is only implemented for l2 penalty with liblinear '
                                                   'solver. Prefer dual=False when n_samples > n_features.',
                                    'type': 'boolean',
                                    'default': False},
                           'C': {'description': 'Inverse regularization strength. Smaller values specify stronger '
                                                'regularization.',
                                 'type': 'number',
                                 'distribution': 'loguniform',
                                 'minimum': 0.0,
                                 'exclusiveMinimum': True,
                                 'default': 1.0,
                                 'minimumForOptimizer': 0.03125,
                                 'maximumForOptimizer': 32768},
                           'tol': {'description': 'Tolerance for stopping criteria.',
                                   'type': 'number',
                                   'distribution': 'loguniform',
                                   'minimum': 0.0,
                                   'exclusiveMinimum': True,
                                   'default': 0.0001,
                                   'minimumForOptimizer': 1e-08,
                                   'maximumForOptimizer': 0.01},
                           'fit_intercept': {'description': 'Specifies whether a constant (bias or intercept) should '
                                                            'be added to the decision function.',
                                             'type': 'boolean',
                                             'default': True},
                           'intercept_scaling': {'description': "Useful only when the solver 'liblinear' is used\n"
                                                                'and self.fit_intercept is set to True. In this case, '
                                                                'X becomes\n'
                                                                '[X, self.intercept_scaling],\n'
                                                                'i.e. a "synthetic" feature with constant value equal '
                                                                'to\n'
                                                                'intercept_scaling is appended to the instance '
                                                                'vector.\n'
                                                                'The intercept becomes "intercept_scaling * '
                                                                'synthetic_feature_weight".\n'
                                                                'Note! the synthetic feature weight is subject to '
                                                                'l1/l2 regularization\n'
                                                                'as all other features.\n'
                                                                'To lessen the effect of regularization on synthetic '
                                                                'feature weight\n'
                                                                '(and therefore on the intercept) intercept_scaling '
                                                                'has to be increased.',
                                                 'type': 'number',
                                                 'distribution': 'uniform',
                                                 'minimum': 0.0,
                                                 'maximum': 1.0,
                                                 'default': 1.0},
                           'class_weight': {'anyOf': [{'description': 'By default, all classes have weight 1.',
                                                       'enum': [None]},
                                                      {'description': 'Uses the values of y to automatically adjust '
                                                                      'weights inversely\n'
                                                                      'proportional to class frequencies in the input '
                                                                      'data as "n_samples / (n_classes * '
                                                                      'np.bincount(y))".',
                                                       'enum': ['balanced']},
                                                      {'description': 'Weights associated with classes in the form '
                                                                      '"{class_label: weight}".',
                                                       'type': 'object',
                                                       'additionalProperties': {'type': 'number'},
                                                       'forOptimizer': False}],
                                            'default': None},
                           'random_state': {'description': 'Seed of pseudo-random number generator for shuffling data '
                                                           'when solver == ‘sag’, ‘saga’ or ‘liblinear’.',
                                            'anyOf': [{'description': 'RandomState used by np.random', 'enum': [None]},
                                                      {'description': 'Use the provided random state, only affecting '
                                                                      'other users of that same random state instance.',
                                                       'laleType': 'numpy.random.RandomState'},
                                                      {'description': 'Explicit seed.', 'type': 'integer'}],
                                            'default': None},
                           'max_iter': {'description': 'Maximum number of iterations for solvers to converge.',
                                        'type': 'integer',
                                        'distribution': 'uniform',
                                        'minimum': 1,
                                        'minimumForOptimizer': 10,
                                        'maximumForOptimizer': 1000,
                                        'default': 100},
                           'multi_class': {'default': 'auto',
                                           'description': 'If the option chosen is `ovr`, then a binary problem is fit '
                                                          'for each label. For `multinomial` the loss minimised is the '
                                                          'multinomial loss fit across the entire probability '
                                                          'distribution, even when the data is binary. `multinomial` '
                                                          'is unavailable when solver=`liblinear`. `auto` selects '
                                                          '`ovr` if the data is binary, or if solver=`liblinear`, and '
                                                          'otherwise selects `multinomial`.',
                                           'enum': ['auto', 'ovr', 'multinomial']},
                           'verbose': {'description': 'For the liblinear and lbfgs solvers set verbose to any positive '
                                                      'number for verbosity.',
                                       'type': 'integer',
                                       'default': 0},
                           'warm_start': {'description': 'When set to True, reuse the solution of the previous call to '
                                                         'fit as initialization, otherwise, just erase the previous '
                                                         'solution.\n'
                                                         'Useless for liblinear solver.',
                                          'type': 'boolean',
                                          'default': False},
                           'n_jobs': {'description': 'Number of CPU cores when parallelizing over classes if\n'
                                                     'multi_class is ovr.  This parameter is ignored when the "solver" '
                                                     'is\n'
                                                     "set to 'liblinear' regardless of whether 'multi_class' is "
                                                     'specified or\n'
                                                     'not.',
                                      'anyOf': [{'description': '1 unless in joblib.parallel_backend context.',
                                                 'enum': [None]},
                                                {'description': 'Use all processors.', 'enum': [-1]},
                                                {'description': 'Number of CPU cores.',
                                                 'type': 'integer',
                                                 'minimum': 1}],
                                      'default': None},
                           'l1_ratio': {'default': None,
                                        'description': 'The Elastic-Net mixing parameter.',
                                        'anyOf': [{'type': 'number', 'minimum': 0.0, 'maximum': 1.0},
                                                  {'enum': [None]}]}}},
           {'description': "From /linear_model/_logistic.py:None:_check_solver, Exception: raise ValueError('Logistic "
                           "Regression supports only solvers in %s, got %s.' %     (all_solvers, solver)) ",
            'type': 'object',
            'properties': {'solver': {'enum': ['liblinear', 'newton-cg', 'lbfgs', 'sag', 'saga']}}},
           {'description': 'From /linear_model/_logistic.py:None:_check_solver, Exception: raise ValueError(     '
                           "'Logistic Regression supports only penalties in %s, got %s.' % (     all_penalties, "
                           'penalty)) ',
            'type': 'object',
            'properties': {'penalty': {'enum': ['l1', 'l2', 'elasticnet', 'none']}}},
           {'description': 'From /linear_model/_logistic.py:None:_check_solver, Exception: raise ValueError(     '
                           '"Solver %s supports only \'l2\' or \'none\' penalties, got %s penalty." % (     solver, '
                           'penalty)) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['liblinear', 'saga']}}},
                      {'type': 'object', 'properties': {'penalty': {'enum': ['l2', 'none']}}}]},
           {'description': "From /linear_model/_logistic.py:None:_check_solver, Exception: raise ValueError('Solver %s "
                           "supports only dual=False, got dual=%s' % (     solver, dual)) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['liblinear']}}},
                      {'type': 'object', 'properties': {'dual': {'enum': [False]}}}]},
           {'description': 'From /linear_model/_logistic.py:None:_check_solver, Exception: raise ValueError(     "Only '
                           '\'saga\' solver supports elasticnet penalty, got solver={}.".format     (solver)) ',
            'anyOf': [{'type': 'object', 'properties': {'penalty': {'not': {'enum': ['elasticnet']}}}},
                      {'type': 'object', 'properties': {'solver': {'enum': ['saga']}}}]},
           {'description': 'From /linear_model/_logistic.py:None:_check_solver, Exception: raise '
                           'ValueError("penalty=\'none\' is not supported for the liblinear solver") ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'penalty': {'not': {'enum': ['none']}}}}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise '
                           'ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"},
                                            {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'},
                                            {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"},
                                            {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'XXX TODO XXX': "not hasattr(X, 'dtype')"},
                                            {'XXX TODO XXX': 'X.dtype is None'},
                                            {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"},
                                            {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise '
                           'ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                                          "'dtype', "
                                                                                                                                          'None) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'getattr(X, '
                                                                                                                                          "'dtype', "
                                                                                                                                          'None) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                                                     "'dtype', "
                                                                                                                                                     'None) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'getattr(X, '
                                                                                                                                                     "'dtype', "
                                                                                                                                                     'None) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                    "'dtype', "
                                                                                                                    'None) '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'getattr(X, '
                                                                                                                    "'dtype', "
                                                                                                                    'None) '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32]'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                               "'dtype', "
                                                                                                                               'None) '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'getattr(X, '
                                                                                                                               "'dtype', "
                                                                                                                               'None) '
                                                                                                                               'in '
                                                                                                                               '[np.float64, '
                                                                                                                               'np.float32]'}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_check_large_sparse, Exception: raise ValueError(     'Only "
                           "sparse matrices with 32-bit integer indices are accepted. Got %s indices.'      % "
                           'indices_datatype) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                 {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'type': 'object',
                                             'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.sparse.to_coo().getformat() != '
                                                                                   "'coo'"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['col',
                                                                                                           'row']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X.sparse.to_coo(), '
                                                                                   "key).dtype in ['int32']"}]},
                                                       {'anyOf': [{'XXX TODO XXX': 'X.sparse.to_coo().getformat() == '
                                                                                   "'coo'"},
                                                                  {'XXX TODO XXX': 'X.sparse.to_coo().getformat() not '
                                                                                   "in ['csr', 'csc', 'bsr']"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['indices',
                                                                                                           'indptr']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X.sparse.to_coo(), '
                                                                                   "key).dtype in ['int32']"}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'type': 'object',
                                             'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "X.getformat() != 'coo'"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['col',
                                                                                                           'row']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X, key).dtype in '
                                                                                   "['int32']"}]},
                                                       {'anyOf': [{'XXX TODO XXX': "X.getformat() == 'coo'"},
                                                                  {'XXX TODO XXX': "X.getformat() not in ['csr', "
                                                                                   "'csc', 'bsr']"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['indices',
                                                                                                           'indptr']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X, key).dtype in '
                                                                                   "['int32']"}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).fit)'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).fit)'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).fit)'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).fit)'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).fit)'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).fit)'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data '
                           'not supported {} """.format(array)     ) from complex_warning ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with "
                           "dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'XXX TODO XXX': 'np.asarray(X, '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'XXX TODO XXX': 'np.asarray(X, '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    "'iu'"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C').astype(dtype[0], "
                                                                                                                    "casting='unsafe', "
                                                                                                                    'False).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                               'in '
                                                                                                                               "'iu'"}]},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=dtype[0]).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    "'iu'"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C').astype(dtype[0], "
                                                                                                                    "casting='unsafe', "
                                                                                                                    'False).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                               'in '
                                                                                                                               "'iu'"}]},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=dtype[0]).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'None).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'None).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array "
                           "with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, "
                           'array.shape, ensure_min_samples, context)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0])) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0])) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False)) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0])) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False)) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0])) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array "
                           "with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, "
                           'array.shape, ensure_min_features, context)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise '
                           'ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"},
                                            {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'},
                                            {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"},
                                            {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'XXX TODO XXX': "not hasattr(X, 'dtype')"},
                                            {'XXX TODO XXX': 'X.dtype is None'},
                                            {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"},
                                            {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise '
                           'ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                                          "'dtype', "
                                                                                                                                          'None) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'getattr(X, '
                                                                                                                                          "'dtype', "
                                                                                                                                          'None) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                                                     "'dtype', "
                                                                                                                                                     'None) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'getattr(X, '
                                                                                                                                                     "'dtype', "
                                                                                                                                                     'None) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                    "'dtype', "
                                                                                                                    'None) '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'getattr(X, '
                                                                                                                    "'dtype', "
                                                                                                                    'None) '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32]'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                               "'dtype', "
                                                                                                                               'None) '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'getattr(X, '
                                                                                                                               "'dtype', "
                                                                                                                               'None) '
                                                                                                                               'in '
                                                                                                                               '[np.float64, '
                                                                                                                               'np.float32]'}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_check_large_sparse, Exception: raise ValueError(     'Only "
                           "sparse matrices with 32-bit integer indices are accepted. Got %s indices.'      % "
                           'indices_datatype) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                 {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'type': 'object',
                                             'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.sparse.to_coo().getformat() != '
                                                                                   "'coo'"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['col',
                                                                                                           'row']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X.sparse.to_coo(), '
                                                                                   "key).dtype in ['int32']"}]},
                                                       {'anyOf': [{'XXX TODO XXX': 'X.sparse.to_coo().getformat() == '
                                                                                   "'coo'"},
                                                                  {'XXX TODO XXX': 'X.sparse.to_coo().getformat() not '
                                                                                   "in ['csr', 'csc', 'bsr']"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['indices',
                                                                                                           'indptr']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X.sparse.to_coo(), '
                                                                                   "key).dtype in ['int32']"}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'type': 'object',
                                             'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "X.getformat() != 'coo'"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['col',
                                                                                                           'row']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X, key).dtype in '
                                                                                   "['int32']"}]},
                                                       {'anyOf': [{'XXX TODO XXX': "X.getformat() == 'coo'"},
                                                                  {'XXX TODO XXX': "X.getformat() not in ['csr', "
                                                                                   "'csc', 'bsr']"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['indices',
                                                                                                           'indptr']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X, key).dtype in '
                                                                                   "['int32']"}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).fit)'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).fit)'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).fit)'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).fit)'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).fit)'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).fit)'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data '
                           'not supported {} """.format(array)     ) from complex_warning ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with "
                           "dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'XXX TODO XXX': 'np.asarray(X, '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'XXX TODO XXX': 'np.asarray(X, '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    "'iu'"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C').astype(dtype[0], "
                                                                                                                    "casting='unsafe', "
                                                                                                                    'False).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                               'in '
                                                                                                                               "'iu'"}]},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=dtype[0]).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    "'iu'"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C').astype(dtype[0], "
                                                                                                                    "casting='unsafe', "
                                                                                                                    'False).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                               'in '
                                                                                                                               "'iu'"}]},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=dtype[0]).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'None).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'None).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array "
                           "with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, "
                           'array.shape, ensure_min_samples, context)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0])) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0])) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False)) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0])) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False)) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0])) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array "
                           "with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, "
                           'array.shape, ensure_min_features, context)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                 {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise '
                           'ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"},
                                            {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'},
                                            {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"},
                                            {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'XXX TODO XXX': "not hasattr(X, 'dtype')"},
                                            {'XXX TODO XXX': 'X.dtype is None'},
                                            {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"},
                                            {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise '
                           'ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    'np.float64 '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=np.float64).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'dtype')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype, '
                                                                                                                    "'kind')"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).dtype.kind '
                                                                                                                    '!= '
                                                                                                                    "'c'"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'dtypes')"},
                                                                             {'XXX TODO XXX': 'not hasattr(X.dtypes, '
                                                                                              "'__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False '
                                                                                                                    'for '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32] '
                                                                                                                    'in '
                                                                                                                    'list(X.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                                          "'dtype', "
                                                                                                                                          'None) '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'getattr(X, '
                                                                                                                                          "'dtype', "
                                                                                                                                          'None) '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          '[np.float64, '
                                                                                                                                          'np.float32]'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'None).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                                                     "'dtype', "
                                                                                                                                                     'None) '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'getattr(X, '
                                                                                                                                                     "'dtype', "
                                                                                                                                                     'None) '
                                                                                                                                                     'in '
                                                                                                                                                     '[np.float64, '
                                                                                                                                                     'np.float32]'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(X, '
                                                                                                                                                                "'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                '<= '
                                                                                                                                                                '1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                                           "'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                                           '> '
                                                                                                                                                                           '1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                      'not '
                                                                                                                                                                                      'in '
                                                                                                                                                                                      "'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C').astype(dtype[0], "
                                                                                                                                                                                      "casting='unsafe', "
                                                                                                                                                                                      'False).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                                                 'is '
                                                                                                                                                                                                 'not '
                                                                                                                                                                                                 'None'},
                                                                                                                                                                                {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                                                 'in '
                                                                                                                                                                                                 "'iu'"}]},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]), '
                                                                                                                                                                                      "'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype '
                                                                                                                                                                                      'is '
                                                                                                                                                                                      'None'},
                                                                                                                                                                     {'XXX TODO XXX': 'not '
                                                                                                                                                                                      'hasattr(np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype, '
                                                                                                                                                                                      "'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                                      "order='C', "
                                                                                                                                                                                      'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                                      '!= '
                                                                                                                                                                                      "'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'dtypes')"},
                                                                                        {'XXX TODO XXX': 'hasattr(X.dtypes, '
                                                                                                         "'__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                    "'dtype', "
                                                                                                                    'None) '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'getattr(X, '
                                                                                                                    "'dtype', "
                                                                                                                    'None) '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    '[np.float64, '
                                                                                                                    'np.float32]'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'dtype')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype, '
                                                                                                                                          "'kind')"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).dtype.kind '
                                                                                                                                          '!= '
                                                                                                                                          "'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                                               "'dtype', "
                                                                                                                               'None) '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'getattr(X, '
                                                                                                                               "'dtype', "
                                                                                                                               'None) '
                                                                                                                               'in '
                                                                                                                               '[np.float64, '
                                                                                                                               'np.float32]'}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(X, '
                                                                                                                                          "'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim '
                                                                                                                                          '<= '
                                                                                                                                          '1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                                                     "'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim '
                                                                                                                                                     '> '
                                                                                                                                                     '1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'dtype')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype, '
                                                                                                                                                                "'kind')"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).dtype.kind '
                                                                                                                                                                '!= '
                                                                                                                                                                "'c'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_check_large_sparse, Exception: raise ValueError(     'Only "
                           "sparse matrices with 32-bit integer indices are accepted. Got %s indices.'      % "
                           'indices_datatype) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                 {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'type': 'object',
                                             'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.sparse.to_coo().getformat() != '
                                                                                   "'coo'"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['col',
                                                                                                           'row']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X.sparse.to_coo(), '
                                                                                   "key).dtype in ['int32']"}]},
                                                       {'anyOf': [{'XXX TODO XXX': 'X.sparse.to_coo().getformat() == '
                                                                                   "'coo'"},
                                                                  {'XXX TODO XXX': 'X.sparse.to_coo().getformat() not '
                                                                                   "in ['csr', 'csc', 'bsr']"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['indices',
                                                                                                           'indptr']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X.sparse.to_coo(), '
                                                                                   "key).dtype in ['int32']"}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'type': 'object',
                                             'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "X.getformat() != 'coo'"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['col',
                                                                                                           'row']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X, key).dtype in '
                                                                                   "['int32']"}]},
                                                       {'anyOf': [{'XXX TODO XXX': "X.getformat() == 'coo'"},
                                                                  {'XXX TODO XXX': "X.getformat() not in ['csr', "
                                                                                   "'csc', 'bsr']"},
                                                                  {'type': 'object',
                                                                   'properties': {'key': {'not': {'enum': ['indices',
                                                                                                           'indptr']}}}},
                                                                  {'XXX TODO XXX': 'getattr(X, key).dtype in '
                                                                                   "['int32']"}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64), '
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).fit)'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear'), "
                                                                                                                    "'fit')"},
                                                                                                   {'XXX TODO XXX': 'not '
                                                                                                                    'callable(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).fit)'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).fit)'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None), '
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).fit)'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).fit)'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'hasattr(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear'), "
                                                                                                                                          "'fit')"},
                                                                                                                         {'XXX TODO XXX': 'not '
                                                                                                                                          'callable(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).fit)'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'hasattr(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]), '
                                                                                                                                                                "'fit')"},
                                                                                                                                               {'XXX TODO XXX': 'not '
                                                                                                                                                                'callable(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data '
                           'not supported {} """.format(array)     ) from complex_warning ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                            {'XXX TODO XXX': 'X.ndim <= 1'},
                                            {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"},
                                                       {'XXX TODO XXX': 'X.ndim > 1'}]},
                                            {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with "
                           "dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'XXX TODO XXX': 'np.asarray(X, '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'XXX TODO XXX': 'np.asarray(X, '
                                                                                              "order='C', "
                                                                                              'dtype=np.float64).ndim '
                                                                                              '< 3'}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    "'iu'"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C').astype(dtype[0], "
                                                                                                                    "casting='unsafe', "
                                                                                                                    'False).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                               'in '
                                                                                                                               "'iu'"}]},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=dtype[0]).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                    'is '
                                                                                                                    'None'},
                                                                                                   {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                    'not '
                                                                                                                    'in '
                                                                                                                    "'iu'"},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C').astype(dtype[0], "
                                                                                                                    "casting='unsafe', "
                                                                                                                    'False).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                               'is '
                                                                                                                               'not '
                                                                                                                               'None'},
                                                                                                              {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                               'in '
                                                                                                                               "'iu'"}]},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=dtype[0]).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'None).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'None).ndim '
                                                                                                                    '< '
                                                                                                                    '3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '< '
                                                                                                                                          '3'}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array "
                           "with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, "
                           'array.shape, ensure_min_samples, context)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64)) '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0])) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear')) "
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0])) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None)) '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False)) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0])) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear')) "
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False)) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': '_num_samples(np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0])) '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array "
                           "with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, "
                           'array.shape, ensure_min_features, context)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['lbfgs']}}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=np.float64, '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                    "order='C', "
                                                                                                                    'dtype=np.float64).ndim '
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['lbfgs']}}},
                                 {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                            {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(X, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                         "'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim > '
                                                                                                         '1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                    'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                    "accept_sparse='csr', "
                                                                                                                    'dtype=dtype[0], '
                                                                                                                    'False, '
                                                                                                                    'True, '
                                                                                                                    'accept_large_sparse=self.solver '
                                                                                                                    '!= '
                                                                                                                    "'liblinear').ndim "
                                                                                                                    '!= '
                                                                                                                    '2'},
                                                                                                   {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                    '>= '
                                                                                                                    '1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                          'is '
                                                                                                                                          'None'},
                                                                                                                         {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                          'not '
                                                                                                                                          'in '
                                                                                                                                          "'iu'"},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C').astype(dtype[0], "
                                                                                                                                          "casting='unsafe', "
                                                                                                                                          'False).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                     'is '
                                                                                                                                                     'not '
                                                                                                                                                     'None'},
                                                                                                                                    {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                     'in '
                                                                                                                                                     "'iu'"}]},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'dtype=dtype[0]).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), "
                                                                        "'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) is None'},
                                                                             {'XXX TODO XXX': "getattr(X, 'dtype', "
                                                                                              'None) not in '
                                                                                              '[np.float64, '
                                                                                              'np.float32]'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'None, '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                          "order='C', "
                                                                                                                                          'None).ndim '
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) is not '
                                                                                                         'None'},
                                                                                        {'XXX TODO XXX': 'getattr(X, '
                                                                                                         "'dtype', "
                                                                                                         'None) in '
                                                                                                         '[np.float64, '
                                                                                                         'np.float32]'}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not '
                                                                                                                    'hasattr(X, '
                                                                                                                    "'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim '
                                                                                                                    '<= '
                                                                                                                    '1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(X, '
                                                                                                                               "'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim '
                                                                                                                               '> '
                                                                                                                               '1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object',
                                                                                                                          'laleNot': 'X/isSparse'},
                                                                                                                         {'XXX TODO XXX': '_ensure_sparse_format(X, '
                                                                                                                                          "accept_sparse='csr', "
                                                                                                                                          'dtype=dtype[0], '
                                                                                                                                          'False, '
                                                                                                                                          'True, '
                                                                                                                                          'accept_large_sparse=self.solver '
                                                                                                                                          '!= '
                                                                                                                                          "'liblinear').ndim "
                                                                                                                                          '!= '
                                                                                                                                          '2'},
                                                                                                                         {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                          '>= '
                                                                                                                                          '1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                'is '
                                                                                                                                                                'None'},
                                                                                                                                               {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                'not '
                                                                                                                                                                'in '
                                                                                                                                                                "'iu'"},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C').astype(dtype[0], "
                                                                                                                                                                "casting='unsafe', "
                                                                                                                                                                'False).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] '
                                                                                                                                                                           'is '
                                                                                                                                                                           'not '
                                                                                                                                                                           'None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.dtype(dtype[0]).kind '
                                                                                                                                                                           'in '
                                                                                                                                                                           "'iu'"}]},
                                                                                                                                               {'XXX TODO XXX': 'np.asarray(X, '
                                                                                                                                                                "order='C', "
                                                                                                                                                                'dtype=dtype[0]).ndim '
                                                                                                                                                                '!= '
                                                                                                                                                                '2'},
                                                                                                                                               {'XXX TODO XXX': 'array.shape[1] '
                                                                                                                                                                '>= '
                                                                                                                                                                '1'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_assert_all_finite, Exception: raise '
                           'ValueError(msg_err.format(type_err, msg_dtype if msg_dtype is not     None else X.dtype)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'XXX TODO XXX': "_get_config()['assume_finite']"},
                      {'allOf': [{'XXX TODO XXX': "y.dtype.kind in 'fc'"},
                                 {'XXX TODO XXX': 'np.isfinite(_safe_accumulator_op(np.sum, y))'}]},
                      {'XXX TODO XXX': "y.dtype.kind not in 'fc'"},
                      {'XXX TODO XXX': 'np.isfinite(y).all()'}]},
           {'description': "From /utils/validation.py:None:_assert_all_finite, Exception: raise ValueError('Input "
                           "contains NaN') ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'XXX TODO XXX': "_get_config()['assume_finite']"},
                      {'allOf': [{'XXX TODO XXX': "y.dtype.kind in 'fc'"},
                                 {'XXX TODO XXX': 'np.isfinite(_safe_accumulator_op(np.sum, y))'}]},
                      {'XXX TODO XXX': "y.dtype.kind in 'fc'"},
                      {'XXX TODO XXX': "y.dtype != np.dtype('object')"},
                      {'XXX TODO XXX': 'not _object_dtype_isnan(y).any()'}]},
           {'description': "From /utils/validation.py:None:column_or_1d, Exception: raise ValueError('y should be a 1d "
                           "array, got an array of shape {} instead.'     .format(shape)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'XXX TODO XXX': "not hasattr(X, 'fit')"},
                      {'XXX TODO XXX': 'not callable(X.fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'XXX TODO XXX': "hasattr(X, '__len__')"},
                      {'XXX TODO XXX': "hasattr(X, 'shape')"},
                      {'XXX TODO XXX': "hasattr(X, '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton "
                           "array %r cannot be considered a valid collection.' % x) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"},
                                            {'XXX TODO XXX': "hasattr(X, 'shape')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"},
                                                                  {'XXX TODO XXX': 'not hasattr(np.asarray(X), '
                                                                                   "'shape')"},
                                                                  {'XXX TODO XXX': 'np.asarray(X).shape is None'},
                                                                  {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]},
                                                       {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"},
                                                                  {'XXX TODO XXX': "not hasattr(X, 'shape')"},
                                                                  {'XXX TODO XXX': 'X.shape is None'},
                                                                  {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"},
                                                       {'XXX TODO XXX': "not hasattr(X, 'shape')"}]},
                                            {'XXX TODO XXX': "not hasattr(X, 'shape')"},
                                            {'XXX TODO XXX': 'X.shape is None'},
                                            {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from '
                           'type_error ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"},
                                            {'XXX TODO XXX': "hasattr(X, 'shape')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"},
                                                                  {'allOf': [{'XXX TODO XXX': 'hasattr(np.asarray(X), '
                                                                                              "'shape')"},
                                                                             {'XXX TODO XXX': 'np.asarray(X).shape is '
                                                                                              'not None'}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"},
                                                                             {'XXX TODO XXX': 'X.shape is not '
                                                                                              'None'}]}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"},
                                                       {'XXX TODO XXX': "not hasattr(X, 'shape')"}]},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"},
                                                       {'XXX TODO XXX': 'X.shape is not None'}]}]},
                                 {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
           {'description': "From /utils/validation.py:None:check_X_y, Exception: raise ValueError('y cannot be None') ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}},
                                 {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}]},
           {'description': "From /base.py:BaseEstimator:_validate_data, Exception: raise ValueError(     f'This "
                           '{self.__class__.__name__} estimator requires y to be passed, but the target y is '
                           "None.'     ) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'XXX TODO XXX': "not self._get_tags()['requires_y']"}]},
           {'description': 'From /utils/validation.py:None:_assert_all_finite, Exception: raise '
                           'ValueError(msg_err.format(type_err, msg_dtype if msg_dtype is not     None else X.dtype)) ',
            'anyOf': [{'XXX TODO XXX': 'is_multilabel(y)'},
                      {'XXX TODO XXX': 'y.ndim > 2'},
                      {'allOf': [{'XXX TODO XXX': 'y.dtype == object'},
                                 {'XXX TODO XXX': 'len(y)'},
                                 {'XXX TODO XXX': 'isinstance(y.flat[0], str)'}]},
                      {'allOf': [{'XXX TODO XXX': 'y.ndim == 2'}, {'XXX TODO XXX': 'y.shape[1] == 0'}]},
                      {'XXX TODO XXX': "y.dtype.kind != 'f'"},
                      {'XXX TODO XXX': 'not np.any(y != y.astype(int))'},
                      {'XXX TODO XXX': "_get_config()['assume_finite']"},
                      {'allOf': [{'XXX TODO XXX': "y.dtype.kind in 'fc'"},
                                 {'XXX TODO XXX': 'np.isfinite(_safe_accumulator_op(np.sum, y))'}]},
                      {'XXX TODO XXX': "y.dtype.kind not in 'fc'"},
                      {'XXX TODO XXX': 'np.isfinite(y).all()'}]},
           {'description': "From /utils/validation.py:None:_assert_all_finite, Exception: raise ValueError('Input "
                           "contains NaN') ",
            'anyOf': [{'XXX TODO XXX': 'is_multilabel(y)'},
                      {'XXX TODO XXX': 'y.ndim > 2'},
                      {'allOf': [{'XXX TODO XXX': 'y.dtype == object'},
                                 {'XXX TODO XXX': 'len(y)'},
                                 {'XXX TODO XXX': 'isinstance(y.flat[0], str)'}]},
                      {'allOf': [{'XXX TODO XXX': 'y.ndim == 2'}, {'XXX TODO XXX': 'y.shape[1] == 0'}]},
                      {'XXX TODO XXX': "y.dtype.kind != 'f'"},
                      {'XXX TODO XXX': 'not np.any(y != y.astype(int))'},
                      {'XXX TODO XXX': "_get_config()['assume_finite']"},
                      {'allOf': [{'XXX TODO XXX': "y.dtype.kind in 'fc'"},
                                 {'XXX TODO XXX': 'np.isfinite(_safe_accumulator_op(np.sum, y))'}]},
                      {'XXX TODO XXX': "y.dtype.kind in 'fc'"},
                      {'XXX TODO XXX': "y.dtype != np.dtype('object')"},
                      {'XXX TODO XXX': 'not _object_dtype_isnan(y).any()'}]},
           {'description': "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(     'Expected "
                           "array-like (array or non-string sequence), got %r' % y) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(y, [Sequence, spmatrix])'},
                                 {'XXX TODO XXX': "hasattr(y, '__array__')"}]},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}}]},
           {'description': 'From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError("y cannot be '
                           'class \'SparseSeries\' or \'SparseArray\'") ',
            'XXX TODO XXX': "y.__class__.__name__ not in ['SparseSeries', 'SparseArray']"},
           {'description': "From /utils/multiclass.py:None:type_of_target, Exception: raise ValueError(     'You "
                           'appear to be using a legacy multi-label data representation. Sequence of sequences are no '
                           'longer supported; use a binary array or sparse matrix instead - the MultiLabelBinarizer '
                           "transformer can convert to this format.'     ) ",
            'anyOf': [{'XXX TODO XXX': 'is_multilabel(y)'},
                      {'XXX TODO XXX': "hasattr(y[0], '__array__')"},
                      {'XXX TODO XXX': 'isinstance(y[0], Sequence)'},
                      {'XXX TODO XXX': 'isinstance(y[0], str)'}]},
           {'description': 'From /utils/multiclass.py:None:check_classification_targets, Exception: raise '
                           "ValueError('Unknown label type: %r' % y_type) ",
            'XXX TODO XXX': "type_of_target(y) in ['binary', 'multiclass', 'multiclass-multioutput', "
                            "'multilabel-indicator', 'multilabel-sequences']"},
           {'description': 'From /linear_model/_logistic.py:None:_check_multi_class, Exception: raise ValueError(     '
                           '"multi_class should be \'multinomial\', \'ovr\' or \'auto\'. Got %s." %     multi_class) ',
            'anyOf': [{'type': 'object', 'properties': {'multi_class': {'enum': ['auto']}}},
                      {'type': 'object', 'properties': {'multi_class': {'enum': ['multinomial', 'ovr']}}}]},
           {'description': 'From /linear_model/_logistic.py:None:_check_multi_class, Exception: raise '
                           "ValueError('Solver %s does not support a multinomial backend.' % solver) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'multi_class': {'not': {'enum': ['auto']}}}},
                                 {'type': 'object', 'properties': {'solver': {'enum': ['liblinear']}}},
                                 {'XXX TODO XXX': 'len(np.unique(y)) <= 2'},
                                 {'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}}]},
                      {'anyOf': [{'type': 'object', 'properties': {'multi_class': {'enum': ['auto']}}},
                                 {'type': 'object', 'properties': {'multi_class': {'not': {'enum': ['multinomial']}}}},
                                 {'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}}]}]},
           {'description': 'From /utils/class_weight.py:None:compute_class_weight, Exception: raise '
                           "ValueError('classes should include all valid labels that can be in y') ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'XXX TODO XXX': 'not set(y) - set(LabelEncoder().classes_)'}]},
           {'description': 'From /utils/class_weight.py:None:compute_class_weight, Exception: raise '
                           "ValueError('classes should have valid labels that are in y') ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'class_weight': {'enum': [None]}}},
                      {'XXX TODO XXX': 'len(self.class_weight) == 0'},
                      {'type': 'object', 'properties': {'class_weight': {'not': {'enum': ['balanced']}}}},
                      {'XXX TODO XXX': 'all(np.in1d(LabelEncoder().classes_, LabelEncoder().classes_))'}]},
           {'description': 'From /utils/class_weight.py:None:compute_class_weight, Exception: raise '
                           'ValueError("class_weight must be dict, \'balanced\', or None, got: %r" %     '
                           'class_weight) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'class_weight': {'enum': [None]}}},
                      {'XXX TODO XXX': 'len(self.class_weight) == 0'},
                      {'type': 'object', 'properties': {'class_weight': {'enum': ['balanced']}}},
                      {'XXX TODO XXX': 'isinstance(self.class_weight, dict)'}]},
           {'description': "From /utils/class_weight.py:None:compute_class_weight, Exception: raise ValueError('Class "
                           "label {} not present.'.format(c)) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'class_weight': {'enum': [None]}}},
                      {'XXX TODO XXX': 'len(self.class_weight) == 0'},
                      {'type': 'object', 'properties': {'class_weight': {'enum': ['balanced']}}},
                      {'XXX TODO XXX': 'c not in self.class_weight'},
                      {'allOf': [{'XXX TODO XXX': 'np.searchsorted(LabelEncoder().classes_, c) < '
                                                  'len(LabelEncoder().classes_)'},
                                 {'XXX TODO XXX': 'classes[i] == c'}]}]},
           {'description': "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r "
                           "cannot be used to seed a numpy.random.RandomState instance' % seed) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'random_state': {'enum': [None]}}},
                      {'XXX TODO XXX': 'self.random_state is np.random'},
                      {'XXX TODO XXX': 'isinstance(self.random_state, np.random.RandomState)'}]},
           {'description': "From /utils/validation.py:None:_check_large_sparse, Exception: raise ValueError(     'Only "
                           "sparse matrices with 32-bit integer indices are accepted. Got %s indices.'      % "
                           'indices_datatype) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'laleNot': 'X/isSparse'},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "X.getformat() != 'coo'"},
                                            {'type': 'object',
                                             'properties': {'key': {'not': {'enum': ['col', 'row']}}}},
                                            {'XXX TODO XXX': "getattr(X, key).dtype in ['int32']"}]},
                                 {'anyOf': [{'XXX TODO XXX': "X.getformat() == 'coo'"},
                                            {'XXX TODO XXX': "X.getformat() not in ['csr', 'csc', 'bsr']"},
                                            {'type': 'object',
                                             'properties': {'key': {'not': {'enum': ['indices', 'indptr']}}}},
                                            {'XXX TODO XXX': "getattr(X, key).dtype in ['int32']"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise '
                           'ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                            {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo(), 'dtype')"},
                                            {'XXX TODO XXX': 'sample_weight.sparse.to_coo().dtype is None'},
                                            {'XXX TODO XXX': 'not hasattr(sample_weight.sparse.to_coo().dtype, '
                                                             "'kind')"},
                                            {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype.kind != 'c'"}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"},
                                                       {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                            {'type': 'object', 'laleNot': 'X/isSparse'},
                                            {'XXX TODO XXX': "not hasattr(sample_weight, 'dtype')"},
                                            {'XXX TODO XXX': 'sample_weight.dtype is None'},
                                            {'XXX TODO XXX': "not hasattr(sample_weight.dtype, 'kind')"},
                                            {'XXX TODO XXX': "sample_weight.dtype.kind != 'c'"}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A "
                           'sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a '
                           "dense numpy array.'     ) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'type': 'object', 'laleNot': 'X/isSparse'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"},
                                                       {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(sample_weight, '
                                                                                   "'sparse')"},
                                                                  {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                  {'allOf': [{'anyOf': [{'type': 'object',
                                                                                         'laleNot': 'X/isSparse'},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True), '
                                                                                                         "'fit')"},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True).fit)'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'hasattr(np.asarray(sample_weight.sparse.to_coo(), '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64), '
                                                                                                         "'fit')"},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'callable(np.asarray(sample_weight.sparse.to_coo(), '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64).fit)'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(sample_weight, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'sample_weight.ndim > '
                                                                                              '1'}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object',
                                                                                         'laleNot': 'X/isSparse'},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'hasattr(_ensure_sparse_format(sample_weight, '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True), '
                                                                                                         "'fit')"},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'callable(_ensure_sparse_format(sample_weight, '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True).fit)'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'hasattr(np.asarray(sample_weight, '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64), '
                                                                                                         "'fit')"},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'callable(np.asarray(sample_weight, '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64).fit)'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), "
                                                             "'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"},
                                                       {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(sample_weight, '
                                                                                   "'sparse')"},
                                                                  {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                  {'allOf': [{'anyOf': [{'type': 'object',
                                                                                         'laleNot': 'X/isSparse'},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True), '
                                                                                                         "'fit')"},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True).fit)'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'hasattr(np.asarray(sample_weight.sparse.to_coo(), '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64), '
                                                                                                         "'fit')"},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'callable(np.asarray(sample_weight.sparse.to_coo(), '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64).fit)'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(sample_weight, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'sample_weight.ndim > '
                                                                                              '1'}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object',
                                                                                         'laleNot': 'X/isSparse'},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'hasattr(_ensure_sparse_format(sample_weight, '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True), '
                                                                                                         "'fit')"},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'callable(_ensure_sparse_format(sample_weight, '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True).fit)'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'hasattr(np.asarray(sample_weight, '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64), '
                                                                                                         "'fit')"},
                                                                                        {'XXX TODO XXX': 'not '
                                                                                                         'callable(np.asarray(sample_weight, '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64).fit)'}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data '
                           'not supported {} """.format(array)     ) from complex_warning ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                            {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                            {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"},
                                                       {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                            {'XXX TODO XXX': 'sp.issparse(sample_weight)'}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with "
                           "dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"},
                                                       {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(sample_weight, '
                                                                                   "'sparse')"},
                                                                  {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                  {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                  {'XXX TODO XXX': 'np.asarray(sample_weight.sparse.to_coo(), '
                                                                                   "order='C', dtype=np.float64).ndim "
                                                                                   '< 3'}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(sample_weight, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'sample_weight.ndim > '
                                                                                              '1'}]},
                                                                  {'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                  {'XXX TODO XXX': 'np.asarray(sample_weight, '
                                                                                   "order='C', dtype=np.float64).ndim "
                                                                                   '< 3'}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), "
                                                             "'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"},
                                                       {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(sample_weight, '
                                                                                   "'sparse')"},
                                                                  {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                  {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                  {'XXX TODO XXX': 'np.asarray(sample_weight.sparse.to_coo(), '
                                                                                   "order='C', dtype=np.float64).ndim "
                                                                                   '< 3'}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(sample_weight, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'sample_weight.ndim > '
                                                                                              '1'}]},
                                                                  {'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                  {'XXX TODO XXX': 'np.asarray(sample_weight, '
                                                                                   "order='C', dtype=np.float64).ndim "
                                                                                   '< 3'}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array "
                           "with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, "
                           'array.shape, ensure_min_samples, context)) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"},
                                                       {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(sample_weight, '
                                                                                   "'sparse')"},
                                                                  {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                  {'allOf': [{'anyOf': [{'type': 'object',
                                                                                         'laleNot': 'X/isSparse'},
                                                                                        {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True)) >= '
                                                                                                         '1'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                        {'XXX TODO XXX': '_num_samples(np.asarray(sample_weight.sparse.to_coo(), '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64)) '
                                                                                                         '>= 1'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(sample_weight, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'sample_weight.ndim > '
                                                                                              '1'}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object',
                                                                                         'laleNot': 'X/isSparse'},
                                                                                        {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True)) >= '
                                                                                                         '1'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                        {'XXX TODO XXX': '_num_samples(np.asarray(sample_weight, '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64)) '
                                                                                                         '>= '
                                                                                                         '1'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), "
                                                             "'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"},
                                                       {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not hasattr(sample_weight, '
                                                                                   "'sparse')"},
                                                                  {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                  {'allOf': [{'anyOf': [{'type': 'object',
                                                                                         'laleNot': 'X/isSparse'},
                                                                                        {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True)) >= '
                                                                                                         '1'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                        {'XXX TODO XXX': '_num_samples(np.asarray(sample_weight.sparse.to_coo(), '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64)) '
                                                                                                         '>= 1'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': 'hasattr(sample_weight, '
                                                                                              "'sparse')"},
                                                                             {'XXX TODO XXX': 'sample_weight.ndim > '
                                                                                              '1'}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object',
                                                                                         'laleNot': 'X/isSparse'},
                                                                                        {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, '
                                                                                                         'False, '
                                                                                                         'dtype=np.float64, '
                                                                                                         'False, True, '
                                                                                                         'True)) >= '
                                                                                                         '1'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                        {'XXX TODO XXX': '_num_samples(np.asarray(sample_weight, '
                                                                                                         "order='C', "
                                                                                                         'dtype=np.float64)) '
                                                                                                         '>= '
                                                                                                         '1'}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'XXX TODO XXX': "not hasattr(X, 'fit')"},
                      {'XXX TODO XXX': 'not callable(X.fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'XXX TODO XXX': "hasattr(X, '__len__')"},
                      {'XXX TODO XXX': "hasattr(X, 'shape')"},
                      {'XXX TODO XXX': "hasattr(X, '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton "
                           "array %r cannot be considered a valid collection.' % x) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"},
                                            {'XXX TODO XXX': "hasattr(X, 'shape')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"},
                                                                  {'XXX TODO XXX': 'not hasattr(np.asarray(X), '
                                                                                   "'shape')"},
                                                                  {'XXX TODO XXX': 'np.asarray(X).shape is None'},
                                                                  {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]},
                                                       {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"},
                                                                  {'XXX TODO XXX': "not hasattr(X, 'shape')"},
                                                                  {'XXX TODO XXX': 'X.shape is None'},
                                                                  {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"},
                                                       {'XXX TODO XXX': "not hasattr(X, 'shape')"}]},
                                            {'XXX TODO XXX': "not hasattr(X, 'shape')"},
                                            {'XXX TODO XXX': 'X.shape is None'},
                                            {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from '
                           'type_error ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"},
                                            {'XXX TODO XXX': "hasattr(X, 'shape')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"},
                                                                  {'allOf': [{'XXX TODO XXX': 'hasattr(np.asarray(X), '
                                                                                              "'shape')"},
                                                                             {'XXX TODO XXX': 'np.asarray(X).shape is '
                                                                                              'not None'}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"},
                                                                             {'XXX TODO XXX': 'X.shape is not '
                                                                                              'None'}]}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"},
                                                       {'XXX TODO XXX': "not hasattr(X, 'shape')"}]},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"},
                                                       {'XXX TODO XXX': 'X.shape is not None'}]}]},
                                 {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('Sample "
                           "weights must be 1D array or scalar') ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'XXX TODO XXX': 'check_array(sample_weight, False, False, dtype=[np.float64, np.float32], '
                                       "order='C', False).ndim == 1"}]},
           {'description': 'From /utils/validation.py:None:_check_sample_weight, Exception: raise '
                           "ValueError('sample_weight.shape == {}, expected {}!'.format(     sample_weight.shape, "
                           '(n_samples,))) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'XXX TODO XXX': 'check_array(sample_weight, False, False, dtype=[np.float64, np.float32], '
                                       "order='C', False).shape == [_num_samples(X)]"}]},
           {'description': 'From /svm/_base.py:None:_get_liblinear_solver_type, Exception: raise ValueError(     '
                           "'Unsupported set of arguments: %s, Parameters: penalty=%r, loss=%r, dual=%r'      % "
                           '(error_string, penalty, loss, dual)) ',
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'allOf': [{'type': 'object', 'properties': {'penalty': {'enum': ['l1']}}},
                                 {'type': 'object', 'properties': {'dual': {'enum': [False]}}}]},
                      {'type': 'object', 'properties': {'penalty': {'enum': ['l2']}}}]},
           {'description': "From /svm/_base.py:None:_fit_liblinear, Exception: raise ValueError(     'This solver "
                           'needs samples of at least 2 classes in the data, but the data contains only one class: '
                           "%r'      % classes_[0]) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'XXX TODO XXX': 'len(LabelEncoder().classes_) >= 2'}]},
           {'description': "From /svm/_base.py:None:_fit_liblinear, Exception: raise ValueError(     'Intercept "
                           'scaling is %r but needs to be greater than 0. To disable fitting an intercept, set '
                           "fit_intercept=False.'      % intercept_scaling) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'not': {'enum': ['liblinear']}}}},
                      {'type': 'object', 'properties': {'fit_intercept': {'enum': [False]}}},
                      {'type': 'object',
                       'properties': {'intercept_scaling': {'type': 'number',
                                                            'minimum': 0,
                                                            'exclusiveMinimum': True}}}]},
           {'description': "From /utils/fixes.py:None:_joblib_parallel_args, Exception: raise ValueError('prefer=%s is "
                           "not supported' % prefer) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['liblinear']}}},
                      {'XXX TODO XXX': "parse_version(joblib.__version__) >= parse_version('0.12')"},
                      {'XXX TODO XXX': "kwargs['prefer'] in ['threads', 'processes', None]"}]},
           {'description': 'From /linear_model/_logistic.py:LogisticRegression:fit, Exception: raise '
                           "ValueError('Penalty term must be positive; got (C=%r)' % self.C) ",
            'allOf': [{'type': 'object', 'properties': {'C': {'type': 'number'}}},
                      {'type': 'object', 'properties': {'C': {'type': 'number', 'minimum': 0}}}]},
           {'description': 'From /linear_model/_logistic.py:LogisticRegression:fit, Exception: raise '
                           "ValueError('l1_ratio must be between 0 and 1; got (l1_ratio=%r)' %     self.l1_ratio) ",
            'anyOf': [{'type': 'object', 'properties': {'penalty': {'not': {'enum': ['elasticnet']}}}},
                      {'allOf': [{'type': 'object', 'properties': {'l1_ratio': {'type': 'number'}}},
                                 {'type': 'object', 'properties': {'l1_ratio': {'type': 'number', 'minimum': 0}}},
                                 {'type': 'object', 'properties': {'l1_ratio': {'type': 'number', 'maximum': 1}}}]}]},
           {'description': 'From /linear_model/_logistic.py:LogisticRegression:fit, Exception: raise ValueError(     '
                           "'Maximum number of iteration must be positive; got (max_iter=%r)' %     self.max_iter) ",
            'allOf': [{'type': 'object', 'properties': {'max_iter': {'type': 'number'}}},
                      {'type': 'object', 'properties': {'max_iter': {'type': 'number', 'minimum': 0}}}]},
           {'description': 'From /linear_model/_logistic.py:LogisticRegression:fit, Exception: raise ValueError(     '
                           "'Tolerance for stopping criteria must be positive; got (tol=%r)' % self.tol     ) ",
            'allOf': [{'type': 'object', 'properties': {'tol': {'type': 'number'}}},
                      {'type': 'object', 'properties': {'tol': {'type': 'number', 'minimum': 0}}}]},
           {'description': 'From /linear_model/_logistic.py:LogisticRegression:fit, Exception: raise ValueError(     '
                           "'This solver needs samples of at least 2 classes in the data, but the data contains only "
                           "one class: %r'      % classes_[0]) ",
            'anyOf': [{'type': 'object', 'properties': {'solver': {'enum': ['liblinear']}}},
                      {'XXX TODO XXX': 'len(np.unique(y)) >= 2'}]}]}
