{'description': 'Passive Aggressive Classifier',
 'allOf': [{'type': 'object',
            'additionalProperties': False,
            'required': ['C', 'fit_intercept', 'max_iter', 'tol', 'early_stopping', 'shuffle', 'loss', 'average'],
            'relevantToOptimizer': ['C',
                                    'fit_intercept',
                                    'max_iter',
                                    'tol',
                                    'early_stopping',
                                    'shuffle',
                                    'loss',
                                    'average'],
            'properties': {'C': {'type': 'number',
                                 'description': 'Maximum step size (regularization). Defaults to 1.0.',
                                 'default': 1.0,
                                 'distribution': 'loguniform',
                                 'minimumForOptimizer': 1e-05,
                                 'maximumForOptimizer': 10},
                           'fit_intercept': {'type': 'boolean',
                                             'default': False,
                                             'description': 'Whether the intercept should be estimated or not. If '
                                                            'False, thethe data is assumed to be already centered.'},
                           'max_iter': {'default': 1000,
                                        'description': 'The maximum number of passes over the training data (aka '
                                                       'epochs).',
                                        'type': 'integer',
                                        'minimumForOptimizer': 5,
                                        'maximumForOptimizer': 1000,
                                        'distribution': 'uniform'},
                           'tol': {'anyOf': [{'type': 'number',
                                              'minimumForOptimizer': 1e-08,
                                              'maximumForOptimizer': 0.01,
                                              'distribution': 'loguniform'},
                                             {'enum': [None]}],
                                   'default': None,
                                   'description': 'The stopping criterion. If it is not None, the iterations will '
                                                  'stop'},
                           'early_stopping': {'type': 'boolean',
                                              'default': False,
                                              'description': 'Whether to use early stopping to terminate training when '
                                                             'validation.'},
                           'validation_fraction': {'type': 'number',
                                                   'minimum': 0,
                                                   'maximum': 1,
                                                   'default': 0.1,
                                                   'description': 'The proportion of training data to set aside as '
                                                                  'validation set for early stopping.'},
                           'n_iter_no_change': {'type': 'integer',
                                                'minimumForOptimizer': 5,
                                                'maximumForOptimizer': 10,
                                                'default': 5,
                                                'description': 'Number of iterations with no improvement to wait '
                                                               'before early stopping.'},
                           'shuffle': {'type': 'boolean',
                                       'default': True,
                                       'description': 'Whether or not the training data should be shuffled after each '
                                                      'epoch.'},
                           'verbose': {'anyOf': [{'type': 'integer'}, {'enum': [None]}],
                                       'default': 0,
                                       'description': 'The verbosity level'},
                           'loss': {'enum': ['hinge', 'squared_hinge'],
                                    'default': 'hinge',
                                    'description': 'The loss function to be used:'},
                           'n_jobs': {'anyOf': [{'type': 'integer'}, {'enum': [None]}],
                                      'default': None,
                                      'description': 'The number of CPUs to use to do the OVA (One Versus All, for'},
                           'random_state': {'anyOf': [{'type': 'integer'},
                                                      {'laleType': 'numpy.random.RandomState'},
                                                      {'enum': [None]}],
                                            'default': None,
                                            'description': 'The seed of the pseudo random number generator to use when '
                                                           'shuffling'},
                           'warm_start': {'type': 'boolean',
                                          'default': False,
                                          'description': 'When set to True, reuse the solution of the previous call to '
                                                         'fit as initialization, otherwise, just erase the previous '
                                                         'solution.'},
                           'class_weight': {'anyOf': [{'type': 'object'}, {'enum': ['balanced', None]}],
                                            'default': None,
                                            'description': 'Preset for the class_weight fit parameter.'},
                           'average': {'anyOf': [{'type': 'boolean'}, {'type': 'integer', 'forOptimizer': False}],
                                       'default': False,
                                       'description': 'When set to True, computes the averaged SGD weights and stores '
                                                      'the result in the ``coef_`` attribute.'}}}]}
