{'description': 'Hyperparameter schema for the KNeighborsClassifier model from scikit-learn.',
 'allOf': [{'description': 'This first sub-object lists all constructor arguments with their types, one at a time, '
                           'omitting cross-argument constraints.',
            'type': 'object',
            'additionalProperties': False,
            'required': ['n_neighbors', 'weights', 'algorithm', 'leaf_size', 'p', 'metric', 'metric_params', 'n_jobs'],
            'relevantToOptimizer': ['n_neighbors', 'weights', 'algorithm', 'p', 'metric'],
            'properties': {'n_neighbors': {'description': 'Number of neighbors to use by default for kneighbors '
                                                          'queries.',
                                           'type': 'integer',
                                           'distribution': 'uniform',
                                           'minimum': 1,
                                           'laleMaximum': 'X/maxItems',
                                           'default': 5,
                                           'maximumForOptimizer': 100},
                           'weights': {'description': 'Weight function used in prediction.',
                                       'enum': ['uniform', 'distance'],
                                       'default': 'uniform'},
                           'algorithm': {'description': 'Algorithm used to compute the nearest neighbors.',
                                         'enum': ['ball_tree', 'kd_tree', 'brute', 'auto'],
                                         'default': 'auto'},
                           'leaf_size': {'description': 'Leaf size passed to BallTree or KDTree.',
                                         'type': 'integer',
                                         'distribution': 'uniform',
                                         'minimum': 1,
                                         'default': 30,
                                         'maximumForOptimizer': 100},
                           'p': {'description': 'Power parameter for the Minkowski metric.',
                                 'type': 'integer',
                                 'distribution': 'uniform',
                                 'minimum': 1,
                                 'default': 2,
                                 'maximumForOptimizer': 3},
                           'metric': {'description': 'The distance metric to use for the tree.',
                                      'enum': ['euclidean', 'manhattan', 'minkowski'],
                                      'default': 'minkowski'},
                           'metric_params': {'description': 'Additional keyword arguments for the metric function.',
                                             'anyOf': [{'enum': [None]},
                                                       {'type': 'object',
                                                        'propertyNames': {'pattern': '[_a-zA-Z][_a-zA-Z0-9]*'}}],
                                             'default': None},
                           'n_jobs': {'description': 'Number of parallel jobs to run for the neighbor search.',
                                      'anyOf': [{'description': '1 unless in joblib.parallel_backend context.',
                                                 'enum': [None]},
                                                {'description': 'Use all processors.', 'enum': [-1]},
                                                {'description': 'Number of CPU cores.',
                                                 'type': 'integer',
                                                 'minimum': 1}],
                                      'default': None}}},
           {'description': 'The leaf size only matters for tree algorithms.',
            'anyOf': [{'type': 'object', 'properties': {'algorithm': {'enum': ['ball_tree', 'kd_tree']}}},
                      {'type': 'object', 'properties': {'leaf_size': {'enum': [30]}}}]},
           {'description': 'The power parameter is specific to the minkowski metric.',
            'anyOf': [{'type': 'object', 'properties': {'metric': {'enum': ['minkowski']}}},
                      {'type': 'object', 'properties': {'p': {'enum': [2]}}}]}]}
