{'allOf': [{'type': 'object',
            'required': ['n_components',
                         'algorithm',
                         'whiten',
                         'fun',
                         'fun_args',
                         'max_iter',
                         'tol',
                         'w_init',
                         'random_state'],
            'relevantToOptimizer': ['algorithm', 'whiten', 'fun', 'tol'],
            'additionalProperties': False,
            'properties': {'n_components': {'anyOf': [{'type': 'integer',
                                                       'minimumForOptimizer': 2,
                                                       'maximumForOptimizer': 256,
                                                       'distribution': 'uniform'},
                                                      {'enum': [None]}],
                                            'default': None,
                                            'description': 'Number of components to use'},
                           'algorithm': {'enum': ['parallel', 'deflation'],
                                         'default': 'parallel',
                                         'description': 'Apply parallel or deflational algorithm for FastICA.'},
                           'whiten': {'type': 'boolean',
                                      'default': True,
                                      'description': 'If whiten is false, the data is already considered to be '
                                                     'whitened, and no whitening is performed.'},
                           'fun': {'XXX TODO XXX': "string or function, optional. Default: 'logcosh'",
                                   'description': 'The functional form of the G function used in the approximation to '
                                                  'neg-entropy',
                                   'enum': ['cube', 'exp', 'logcosh'],
                                   'default': 'logcosh'},
                           'fun_args': {'XXX TODO XXX': 'dictionary, optional',
                                        'description': 'Arguments to send to the functional form',
                                        'enum': [None],
                                        'default': None},
                           'max_iter': {'type': 'integer',
                                        'minimumForOptimizer': 10,
                                        'maximumForOptimizer': 1000,
                                        'distribution': 'uniform',
                                        'default': 200,
                                        'description': 'Maximum number of iterations during fit.'},
                           'tol': {'type': 'number',
                                   'minimumForOptimizer': 1e-08,
                                   'maximumForOptimizer': 0.01,
                                   'distribution': 'loguniform',
                                   'default': 0.0001,
                                   'description': 'Tolerance on update at each iteration.'},
                           'w_init': {'XXX TODO XXX': 'None of an (n_components, n_components) ndarray',
                                      'description': 'The mixing matrix to be used to initialize the algorithm.',
                                      'enum': [None],
                                      'default': None},
                           'random_state': {'anyOf': [{'type': 'integer'},
                                                      {'laleType': 'numpy.random.RandomState'},
                                                      {'enum': [None]}],
                                            'default': None,
                                            'description': 'If int, random_state is the seed used by the random number '
                                                           'generator; If RandomState instance, random_state is the '
                                                           'random number generator; If None, the random number '
                                                           'generator is the RandomState instance used by '
                                                           '`np.random`.'}}}]}
