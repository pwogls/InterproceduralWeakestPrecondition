>>> KNeighborsClassifier  ( classifier )
1000 trials: 1000 passed, 0 failed.
+-------------------+----------------+-----------------+----------------+-----------------+-----------+--------+
|       name        | true_positives | false_positives | true_negatives | false_negatives | precision | recall |
+-------------------+----------------+-----------------+----------------+-----------------+-----------+--------+
| handwritten_(2/2) |      327       |        0        |       0        |       673       |    1.0    | 0.327  |
| docstrings_(0/0)  |      1000      |        0        |       0        |        0        |    1.0    |  1.0   |
| WPanalysis_(1/87) |      1000      |        0        |       0        |        0        |    1.0    |  1.0   |
+-------------------+----------------+-----------------+----------------+-----------------+-----------+--------+
Note:
	handwritten_(A/B) means there are B total constraints, A of which are good constraints (no TODO).
	WP aboved are interesting wp, ie. 2+ hp or 1 + X/y. For overall WP, there are 87 total, 1 are good. All WP constraints are at /output/JSS_all_exceptions/

> Hyperparams: 
 ['algorithm', 'leaf_size', 'metric', 'n_neighbors', 'p', 'weights', 'metric_params', 'n_jobs']

> relevantToOptimizer:
 ['algorithm', 'leaf_size', 'metric', 'n_neighbors', 'p']

> handwritten
False Positives (0):
True Negatives (0):

> docstring
False Positives (0):
True Negatives (0):

> WPanalysis
False Positives (0):
True Negatives (0):

> # of time they appear in failed validations:
handwritten: 
 {'learning_rate': 0, 'loss': 0, 'n_estimators': 0, 'base_estimator': 0, 'random_state': 0, 'bootstrap': 0, 'criterion': 0, 'max_depth': 0, 'max_features': 0, 'max_leaf_nodes': 0, 'min_impurity_decrease': 0, 'min_samples_leaf': 0, 'min_samples_split': 0, 'min_weight_fraction_leaf': 0, 'oob_score': 0, 'warm_start': 0, 'min_impurity_split': 0, 'n_jobs': 0, 'verbose': 0, 'class_weight': 0, 'ccp_alpha': 0, 'max_samples': 0, 'affinity': 0, 'compute_full_tree': 0, 'linkage': 0, 'n_clusters': 0, 'memory': 0, 'connectivity': 0, 'pooling_func': 0, 'distance_threshold': 0, 'compute_distances': 0, 'accept_sparse': 0, 'check_inverse': 0, 'validate': 0, 'func': 0, 'inverse_func': 0, 'kw_args': 0, 'inv_kw_args': 0, 'var_smoothing': 0, 'priors': 0, 'n_iter_no_change': 0, 'subsample': 0, 'tol': 0, 'validation_fraction': 0, 'init': 0, 'alpha': 0, 'algorithm': 0, 'leaf_size': 0, 'metric': 0, 'n_neighbors': 0, 'p': 0, 'weights': 0, 'metric_params': 0}
docstring: 
 {'learning_rate': 0, 'loss': 0, 'n_estimators': 0, 'base_estimator': 0, 'random_state': 0, 'bootstrap': 0, 'criterion': 0, 'max_depth': 0, 'max_features': 0, 'max_leaf_nodes': 0, 'min_impurity_decrease': 0, 'min_samples_leaf': 0, 'min_samples_split': 0, 'min_weight_fraction_leaf': 0, 'oob_score': 0, 'warm_start': 0, 'min_impurity_split': 0, 'n_jobs': 0, 'verbose': 0, 'class_weight': 0, 'ccp_alpha': 0, 'max_samples': 0, 'affinity': 0, 'compute_full_tree': 0, 'linkage': 0, 'n_clusters': 0, 'memory': 0, 'connectivity': 0, 'pooling_func': 0, 'distance_threshold': 0, 'compute_distances': 0, 'accept_sparse': 0, 'check_inverse': 0, 'validate': 0, 'func': 0, 'inverse_func': 0, 'kw_args': 0, 'inv_kw_args': 0, 'var_smoothing': 0, 'priors': 0, 'n_iter_no_change': 0, 'subsample': 0, 'tol': 0, 'validation_fraction': 0, 'init': 0, 'alpha': 0, 'algorithm': 0, 'leaf_size': 0, 'metric': 0, 'n_neighbors': 0, 'p': 0, 'weights': 0, 'metric_params': 0}
WPanalysis: 
 {'learning_rate': 0, 'loss': 0, 'n_estimators': 0, 'base_estimator': 0, 'random_state': 0, 'bootstrap': 0, 'criterion': 0, 'max_depth': 0, 'max_features': 0, 'max_leaf_nodes': 0, 'min_impurity_decrease': 0, 'min_samples_leaf': 0, 'min_samples_split': 0, 'min_weight_fraction_leaf': 0, 'oob_score': 0, 'warm_start': 0, 'min_impurity_split': 0, 'n_jobs': 0, 'verbose': 0, 'class_weight': 0, 'ccp_alpha': 0, 'max_samples': 0, 'affinity': 0, 'compute_full_tree': 0, 'linkage': 0, 'n_clusters': 0, 'memory': 0, 'connectivity': 0, 'pooling_func': 0, 'distance_threshold': 0, 'compute_distances': 0, 'accept_sparse': 0, 'check_inverse': 0, 'validate': 0, 'func': 0, 'inverse_func': 0, 'kw_args': 0, 'inv_kw_args': 0, 'var_smoothing': 0, 'priors': 0, 'n_iter_no_change': 0, 'subsample': 0, 'tol': 0, 'validation_fraction': 0, 'init': 0, 'alpha': 0, 'algorithm': 0, 'leaf_size': 0, 'metric': 0, 'n_neighbors': 0, 'p': 0, 'weights': 0, 'metric_params': 0}

> Failed constraints stats:
handwritten:
freq = 488
{'description': 'The leaf size only matters for tree algorithms.',
 'anyOf': [{'type': 'object', 'properties': {'algorithm': {'enum': ['ball_tree', 'kd_tree']}}},
           {'type': 'object', 'properties': {'leaf_size': {'enum': [30]}}}]}
freq = 185
{'description': 'The power parameter is specific to the minkowski metric.',
 'anyOf': [{'type': 'object', 'properties': {'metric': {'enum': ['minkowski']}}},
           {'type': 'object', 'properties': {'p': {'enum': [2]}}}]}

docstring:

WPanalysis:
