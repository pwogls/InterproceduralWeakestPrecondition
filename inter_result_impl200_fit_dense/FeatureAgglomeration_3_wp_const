{'allOf': [{'type': 'object',
            'required': ['memory', 'compute_full_tree', 'pooling_func'],
            'relevantToOptimizer': ['affinity', 'compute_full_tree', 'linkage', 'n_clusters'],
            'additionalProperties': False,
            'properties': {'n_clusters': {'default': 2, 'description': 'The number of clusters to find.', 'forOptimizer': False, 'anyOf': [{'type': 'integer', 'minimumForOptimizer': 2, 'maximumForOptimizer': 8, 'laleMaximum': 'X/maxItems'}, {'forOptimizer': False, 'enum': [None]}]},
                           'affinity': {'anyOf': [{'enum': ['euclidean', 'l1', 'l2', 'manhattan', 'cosine', 'precomputed']}, {'forOptimizer': False, 'laleType': 'callable'}], 'default': 'euclidean', 'description': 'Metric used to compute the linkage.'},
                           'memory': {'anyOf': [{'description': 'Path to the caching directory.', 'type': 'string'}, {'description': 'Object with the joblib.Memory interface', 'type': 'object', 'forOptimizer': False}, {'description': 'No caching.', 'enum': [None]}], 'default': None, 'description': 'Used to cache the output of the computation of the tree.'},
                           'connectivity': {'anyOf': [{'type': 'array', 'items': {'type': 'array', 'items': {'type': 'number'}}}, {'laleType': 'callable', 'forOptimizer': False, 'description': 'A callable that transforms the data into a connectivity matrix, such as derived from kneighbors_graph.'}, {'enum': [None]}], 'default': None, 'description': 'Connectivity matrix. Defines for each feature the neighboring features following a given structure of the data.'},
                           'compute_full_tree': {'anyOf': [{'type': 'boolean'}, {'enum': ['auto']}], 'default': 'auto', 'description': 'Stop early the construction of the tree at n_clusters.'},
                           'linkage': {'enum': ['ward', 'complete', 'average', 'single'], 'default': 'ward', 'description': 'Which linkage criterion to use. The linkage criterion determines which distance to use between sets of features.'},
                           'pooling_func': {'description': 'This combines the values of agglomerated features into a single value, and should accept an array of shape [M, N] and the keyword argument axis=1, and reduce it to an array of size [M].', 'laleType': 'callable', 'default': <function mean at 0x000002345F2D30D0>},
                           'distance_threshold': {'default': None, 'description': 'The linkage distance threshold above which, clusters will not be merged.', 'anyOf': [{'type': 'number'}, {'enum': [None]}]},
                           'compute_distances': {'default': False, 'description': 'Computes distances between clusters even if distance_threshold is not used. This can be used to make dendrogram visualization, but introduces a computational and memory overhead.', 'forOptimizer': False, 'type': 'boolean'}}},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=numeric, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'self.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(self.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "self.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self, 'dtype')"}, {'type': 'object', 'properties': {'dtype': {'enum': [None]}}}, {'XXX TODO XXX': "not hasattr(self.dtype, 'kind')"}, {'XXX TODO XXX': "self.dtype.kind != 'c'"}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(self.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(self.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) is None'},
                                                                                                                                               {'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) not in numeric'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                                                     {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                               {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(self.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                               {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                               {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(self.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(self.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) is None'},
                                                                                                                                               {'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) not in numeric'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                                                     {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                               {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(self.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"},
                                                                                                                                               {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                                                     {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                               {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"},
                                                                                                                         {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                                               {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ", 'type': 'object', 'laleNot': 'X/isSparse'},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                             {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self, False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self, False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=numeric, False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self, False, dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self, False, dtype=numeric, False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                             {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self, False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.sparse.to_coo(), False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self.sparse.to_coo(), False, None, False, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self, False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self, False, None, False, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self, False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=numeric, False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self, False, dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(self, False, dtype=numeric, False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(self, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(self, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"},
                                                                             {'XXX TODO XXX': "getattr(self, 'dtype', None).kind != 'O'"},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None).kind == 'O'"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                                                              {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                                                              {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': "self.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in self.dtypes])) <= 1'}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(self.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(self.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(self.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(self.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(self.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(self.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(self.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}}, {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, None).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                             {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=np.float64)) >= 2'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self, False, dtype=np.float64, False, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=np.float64).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=np.float64)) >= 2'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0])) >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self, False, dtype=dtype[0], False, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(self, None).astype(dtype[0], casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=dtype[0]).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=dtype[0])) >= 2'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=numeric, False, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=numeric)) >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self, False, dtype=numeric, False, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(self, None).astype(numeric, casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=numeric).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=numeric)) >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                             {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=np.float64)) >= 2'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self, False, dtype=np.float64, False, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=np.float64).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=np.float64)) >= 2'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self.sparse.to_coo(), False, None, False, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, None).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, None)) >= 2'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self, False, None, False, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, None).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, None)) >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 2'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=dtype[0])) >= 2'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self, False, dtype=dtype[0], False, True, True)) >= 2'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(self, None).astype(dtype[0], casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=dtype[0]).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=dtype[0])) >= 2'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self.sparse.to_coo(), False, dtype=numeric, False, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self.sparse.to_coo(), None, dtype=numeric)) >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(self, False, dtype=numeric, False, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(self, None).astype(numeric, casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=numeric).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(self, None, dtype=numeric)) >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                             {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self.sparse.to_coo(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self, False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self.sparse.to_coo(), False, dtype=dtype[0], False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self, False, dtype=dtype[0], False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self.sparse.to_coo(), False, dtype=numeric, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self, False, dtype=numeric, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(self, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                             {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self.sparse.to_coo(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self, False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(self, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self.sparse.to_coo(), False, None, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self, False, None, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(self, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(self, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                                         {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self.sparse.to_coo(), False, dtype=dtype[0], False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self, False, dtype=dtype[0], False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'sparse')"},
                                                                                                   {'type': 'object', 'properties': {'ndim': {'type': 'number', 'maximum': 1}}},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self.sparse.to_coo(), False, dtype=numeric, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self, 'sparse')"}, {'type': 'object', 'properties': {'ndim': {'type': 'number', 'minimum': 1, 'exclusiveMinimum': True}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(self, False, dtype=numeric, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(self, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(self, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(self, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not callable(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.connectivity(self).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'self.connectivity(self).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(self.connectivity(self).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "self.connectivity(self).sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.connectivity(self), 'dtype')"}, {'XXX TODO XXX': 'self.connectivity(self).dtype is None'}, {'XXX TODO XXX': "not hasattr(self.connectivity(self).dtype, 'kind')"}, {'XXX TODO XXX': "self.connectivity(self).dtype.kind != 'c'"}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': 'callable(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.connectivity.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'self.connectivity.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(self.connectivity.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "self.connectivity.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.connectivity, 'dtype')"}, {'XXX TODO XXX': 'self.connectivity.dtype is None'}, {'XXX TODO XXX': "not hasattr(self.connectivity.dtype, 'kind')"}, {'XXX TODO XXX': "self.connectivity.dtype.kind != 'c'"}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'dtypes')"},
                                                                                        {'XXX TODO XXX': "not hasattr(self.connectivity(self).dtypes, '__array__')"},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.connectivity(self).dtypes)))"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.connectivity(self).dtypes)))"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'dtypes')"},
                                                                                        {'XXX TODO XXX': "not hasattr(self.connectivity(self).dtypes, '__array__')"},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.connectivity(self).dtypes)))"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.connectivity(self).dtypes)))"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': 'callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'dtypes')"},
                                                                                        {'XXX TODO XXX': "not hasattr(self.connectivity.dtypes, '__array__')"},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.connectivity.dtypes)))"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.connectivity.dtypes)))"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'dtypes')"},
                                                                                        {'XXX TODO XXX': "not hasattr(self.connectivity.dtypes, '__array__')"},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.connectivity.dtypes)))"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.connectivity.dtypes)))"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"},
                                                                                        {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.connectivity(self).sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.connectivity(self).sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.connectivity(self), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.connectivity(self), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity(self), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"},
                                                                                        {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.connectivity(self).sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.connectivity(self).sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.connectivity(self), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.connectivity(self), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity(self), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity(self), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': 'callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'self.connectivity.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.connectivity.sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.connectivity.sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.connectivity, accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.connectivity, accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'self.connectivity.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.connectivity.sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.connectivity.sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.connectivity, accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.connectivity, accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.connectivity, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.connectivity, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not callable(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'callable(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'dtypes')"},
                                                                                        {'XXX TODO XXX': "not hasattr(self.connectivity(self).dtypes, '__array__')"},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.connectivity(self).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.connectivity(self).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'dtypes')"},
                                                                                        {'XXX TODO XXX': "not hasattr(self.connectivity(self).dtypes, '__array__')"},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.connectivity(self).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.connectivity(self).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': 'callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'dtypes')"},
                                                                                        {'XXX TODO XXX': "not hasattr(self.connectivity.dtypes, '__array__')"},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.connectivity.dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.connectivity.dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'dtypes')"},
                                                                                        {'XXX TODO XXX': "not hasattr(self.connectivity.dtypes, '__array__')"},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.connectivity.dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.connectivity.dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).ndim < 3'}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': 'callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).ndim < 3'}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.connectivity(self).sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.connectivity(self), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity(self), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.connectivity(self).sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.connectivity(self), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity(self), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': 'callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.connectivity.sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.connectivity, accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.connectivity.sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.connectivity, accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.connectivity, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(self.connectivity(self).sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(self.connectivity(self), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity(self), 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity(self).dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(self.connectivity(self).sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self).sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity(self), 'sparse')"}, {'XXX TODO XXX': 'self.connectivity(self).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(self.connectivity(self), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity(self))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity(self), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity(self), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': 'callable(self.connectivity)'},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(self.connectivity.sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(self.connectivity, accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.connectivity, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.connectivity.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(self.connectivity.sparse.to_coo(), accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.connectivity, 'sparse')"}, {'XXX TODO XXX': 'self.connectivity.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(self.connectivity, accept_sparse=['csr', 'coo', 'lil'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.connectivity)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.connectivity, None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.connectivity, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_memory, Exception: raise ValueError(     "\'memory\' should be None, a string or have the same interface as joblib.Memory. Got memory=\'{}\' instead."     .format(memory)) ', 'anyOf': [{'type': 'object', 'properties': {'memory': {'enum': [None]}}}, {'type': 'object', 'properties': {'memory': {'type': 'string'}}}, {'XXX TODO XXX': "hasattr(self.memory, 'cache')"}]},
           {'description': "From /cluster/_agglomerative.py:None:_hc_cut, Exception: raise ValueError(     'Cannot extract more clusters than samples: %s clusters where given for a tree with %s leaves.'      % (n_clusters, n_leaves)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'connectivity': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'allOf': [{'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'type': 'object', 'properties': {'compute_distances': {'enum': [False]}}}]}, {'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'XXX TODO XXX': 'np.count_nonzero(out[-1] >= self.distance_threshold) + 1 <= out[:4][2]'}]}, {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}}, {'type': 'object', 'properties': {'compute_distances': {'enum': [True]}}}, {'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'XXX TODO XXX': 'np.count_nonzero(self.distances_ >= self.distance_threshold) + 1 <= out[:4][2]'}]}, {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': 'self.n_clusters <= out[:4][2]'}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'connectivity': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'compute_full_tree': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'allOf': [{'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'type': 'object', 'properties': {'compute_distances': {'enum': [False]}}}]}, {'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'XXX TODO XXX': 'np.count_nonzero(out[-1] >= self.distance_threshold) + 1 <= out[:4][2]'}]}, {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}}, {'type': 'object', 'properties': {'compute_distances': {'enum': [True]}}}, {'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'XXX TODO XXX': 'np.count_nonzero(self.distances_ >= self.distance_threshold) + 1 <= out[:4][2]'}]}, {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': 'self.n_clusters <= out[:4][2]'}]}]}]},
                                                                  {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}},
                                                                             {'allOf': [{'anyOf': [{'allOf': [{'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'type': 'object', 'properties': {'compute_distances': {'enum': [False]}}}]}, {'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'n_clusters': {'type': 'number', 'minimum': 100}}}, {'XXX TODO XXX': 'self.n_clusters >= 0.02 * len(self)'}]}, {'XXX TODO XXX': 'np.count_nonzero(out[-1] >= self.distance_threshold) + 1 <= out[:4][2]'}]},
                                                                                        {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}}, {'type': 'object', 'properties': {'compute_distances': {'enum': [True]}}}, {'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'n_clusters': {'type': 'number', 'minimum': 100}}}, {'XXX TODO XXX': 'self.n_clusters >= 0.02 * len(self)'}]}, {'XXX TODO XXX': 'np.count_nonzero(self.distances_ >= self.distance_threshold) + 1 <= out[:4][2]'}]},
                                                                                        {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}}, {'allOf': [{'type': 'object', 'properties': {'n_clusters': {'type': 'number', 'minimum': 100}}}, {'XXX TODO XXX': 'self.n_clusters >= 0.02 * len(self)'}]}, {'XXX TODO XXX': 'self.n_clusters <= out[:4][2]'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'compute_full_tree': {'enum': ['auto']}}},
                                                       {'allOf': [{'anyOf': [{'allOf': [{'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'type': 'object', 'properties': {'compute_distances': {'enum': [False]}}}]}, {'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'type': 'object', 'properties': {'compute_full_tree': {'enum': [False]}}}, {'XXX TODO XXX': 'np.count_nonzero(out[-1] >= self.distance_threshold) + 1 <= out[:4][2]'}]}, {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}}, {'type': 'object', 'properties': {'compute_distances': {'enum': [True]}}}, {'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'type': 'object', 'properties': {'compute_full_tree': {'enum': [False]}}}, {'XXX TODO XXX': 'np.count_nonzero(self.distances_ >= self.distance_threshold) + 1 <= out[:4][2]'}]}, {'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'not': {'enum': [None]}}}}, {'type': 'object', 'properties': {'compute_full_tree': {'enum': [False]}}}, {'XXX TODO XXX': 'self.n_clusters <= out[:4][2]'}]}]}]}]}]}]},
           {'description': "From /cluster/_agglomerative.py:AgglomerativeClustering:fit, Exception: raise ValueError(     'n_clusters should be an integer greater than 0. %s was provided.' %     str(self.n_clusters)) ", 'anyOf': [{'type': 'object', 'properties': {'n_clusters': {'enum': [None]}}}, {'type': 'object', 'properties': {'n_clusters': {'type': 'number', 'minimum': 0, 'exclusiveMinimum': True}}}]},
           {'description': "From /cluster/_agglomerative.py:AgglomerativeClustering:fit, Exception: raise ValueError('compute_full_tree must be True if distance_threshold is set.'     ) ", 'anyOf': [{'type': 'object', 'properties': {'distance_threshold': {'enum': [None]}}}, {'type': 'object', 'properties': {'compute_full_tree': {'enum': [True]}}}]},
           {'description': "From /cluster/_agglomerative.py:AgglomerativeClustering:fit, Exception: raise ValueError(     '%s was provided as affinity. Ward can only work with euclidean distances.'      % (self.affinity,)) ", 'anyOf': [{'type': 'object', 'properties': {'linkage': {'not': {'enum': ['ward']}}}}, {'type': 'object', 'properties': {'affinity': {'enum': ['euclidean']}}}]},
           {'description': "From /cluster/_agglomerative.py:AgglomerativeClustering:fit, Exception: raise ValueError('Unknown linkage type %s. Valid options are %s' % (self.     linkage, _TREE_BUILDERS.keys())) ", 'XXX TODO XXX': 'self.linkage in _TREE_BUILDERS'}]}
