{'allOf': [{'type': 'object',
            'required': ['init'],
            'relevantToOptimizer': ['alpha', 'criterion', 'learning_rate', 'loss', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_iter_no_change', 'subsample', 'tol', 'validation_fraction', 'warm_start'],
            'additionalProperties': False,
            'properties': {'loss': {'enum': ['ls', 'lad', 'huber', 'quantile'], 'default': 'ls', 'description': "The loss function to be optimized. 'deviance' refers to deviance (= logistic regression) for classification with probabilistic outputs. For loss 'exponential' gradient boosting recovers the AdaBoost algorithm."},
                           'learning_rate': {'type': 'number', 'minimumForOptimizer': 0.01, 'maximumForOptimizer': 1.0, 'distribution': 'loguniform', 'default': 0.1, 'description': 'learning rate shrinks the contribution of each tree by `learning_rate`.'},
                           'n_estimators': {'type': 'integer', 'minimum': 1, 'minimumForOptimizer': 10, 'maximumForOptimizer': 100, 'distribution': 'uniform', 'default': 100, 'description': 'The number of boosting stages to perform. Gradient boosting'},
                           'subsample': {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True, 'maximum': 1.0, 'minimumForOptimizer': 0.01, 'maximumForOptimizer': 1.0, 'distribution': 'uniform', 'default': 1.0, 'description': 'The fraction of samples to be used for fitting the individual base'},
                           'criterion': {'description': 'Function to measure the quality of a split.', 'anyOf': [{'enum': ['mse', 'friedman_mse']}, {'description': 'Deprecated since version 0.24.', 'enum': ['mae'], 'forOptimizer': False}], 'default': 'friedman_mse'},
                           'min_samples_split': {'anyOf': [{'type': 'integer', 'minimum': 2, 'forOptimizer': False, 'distribution': 'uniform'}, {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True, 'maximum': 1.0, 'minimumForOptimizer': 0.01, 'maximumForOptimizer': 0.5, 'default': 0.05}], 'default': 2, 'description': 'The minimum number of samples required to split an internal node:'},
                           'min_samples_leaf': {'anyOf': [{'type': 'integer', 'minimum': 1, 'forOptimizer': False}, {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True, 'maximum': 0.5, 'minimumForOptimizer': 0.01, 'default': 0.05}], 'default': 1, 'description': 'The minimum number of samples required to be at a leaf node.'},
                           'min_weight_fraction_leaf': {'type': 'number', 'minimum': 0.0, 'maximum': 0.5, 'default': 0.0, 'description': 'The minimum weighted fraction of the sum total of weights (of all the input samples) required to be at a leaf node. Samples have equal weight when sample_weight is not provided.'},
                           'max_depth': {'type': 'integer', 'minimumForOptimizer': 3, 'maximumForOptimizer': 5, 'default': 3, 'description': 'maximum depth of the individual regression estimators.'},
                           'min_impurity_decrease': {'type': 'number', 'minimum': 0.0, 'maximumForOptimizer': 10.0, 'default': 0.0, 'description': 'A node will be split if this split induces a decrease of the impurity greater than or equal to this value.'},
                           'min_impurity_split': {'anyOf': [{'type': 'number'}, {'enum': [None]}], 'default': None, 'description': 'Threshold for early stopping in tree growth.'},
                           'init': {'anyOf': [{'laleType': 'operator'}, {'enum': ['zero', None]}], 'default': None, 'description': 'An estimator object that is used to compute the initial predictions.'},
                           'random_state': {'anyOf': [{'type': 'integer'}, {'laleType': 'numpy.random.RandomState'}, {'enum': [None]}], 'default': None, 'description': 'If int, random_state is the seed used by the random number generator;'},
                           'max_features': {'anyOf': [{'type': 'integer', 'minimum': 2, 'laleMaximum': 'X/items/maxItems', 'forOptimizer': False, 'description': 'Consider max_features features at each split.'}, {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True, 'maximum': 1.0, 'exclusiveMaximum': True, 'minimumForOptimizer': 0.01, 'default': 0.5, 'distribution': 'uniform'}, {'enum': ['auto', 'sqrt', 'log2', None]}], 'default': None, 'description': 'The number of features to consider when looking for the best split.'},
                           'alpha': {'type': 'number', 'minimumForOptimizer': 1e-10, 'maximumForOptimizer': 0.9999999999, 'distribution': 'loguniform', 'default': 0.9, 'description': 'The alpha-quantile of the huber loss function and the quantile'},
                           'verbose': {'type': 'integer', 'default': 0, 'description': 'Enable verbose output. If 1 then it prints progress and performance'},
                           'max_leaf_nodes': {'anyOf': [{'type': 'integer', 'minimum': 1, 'minimumForOptimizer': 3, 'maximumForOptimizer': 1000}, {'enum': [None], 'description': 'Unlimited number of leaf nodes.'}], 'default': None, 'description': 'Grow trees with ``max_leaf_nodes`` in best-first fashion.'},
                           'warm_start': {'type': 'boolean', 'default': False, 'description': 'When set to ``True``, reuse the solution of the previous call to fit'},
                           'validation_fraction': {'type': 'number', 'minimum': 0.0, 'maximum': 1.0, 'default': 0.1, 'description': 'The proportion of training data to set aside as validation set for early stopping.'},
                           'n_iter_no_change': {'anyOf': [{'type': 'integer', 'minimumForOptimizer': 5, 'maximumForOptimizer': 10}, {'enum': [None]}], 'default': None, 'description': '``n_iter_no_change`` is used to decide if early stopping will be used'},
                           'tol': {'type': 'number', 'minimumForOptimizer': 1e-08, 'maximumForOptimizer': 0.01, 'distribution': 'loguniform', 'default': 0.0001, 'description': 'Tolerance for the early stopping. When the loss is not improving'},
                           'ccp_alpha': {'default': 0.0, 'description': 'Complexity parameter used for Minimal Cost-Complexity Pruning. The subtree with the largest cost complexity that is smaller than ccp_alpha will be chosen. By default, no pruning is performed.', 'forOptimizer': False, 'type': 'number', 'minimum': 0.0, 'maximumForOptimizer': 0.1}}},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'criterion': {'not': {'enum': ['mae']}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}},
                                                       {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                                       {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}},
                                                       {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                                       {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'criterion': {'enum': ['mae']}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}},
                                                       {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                                       {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}},
                                                       {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                                       {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=DTYPE).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=DTYPE)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=DTYPE).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(y.sparse.to_coo(), None, None).fit)'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(y, None, None).fit)'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(y.sparse.to_coo(), None, None).fit)'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(y, None, None).fit)'}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(y.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'y.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(y.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "y.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(y, 'dtype')"}, {'XXX TODO XXX': 'y.dtype is None'}, {'XXX TODO XXX': "not hasattr(y.dtype, 'kind')"}, {'XXX TODO XXX': "y.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(y.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for None in list(y.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((False for None in list(y.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(y.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for None in list(y.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((False for None in list(y.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'criterion': {'not': {'enum': ['mae']}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}},
                                                       {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                                       {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}},
                                                       {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                                       {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'criterion': {'enum': ['mae']}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}},
                                                       {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                                       {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}},
                                                       {'type': 'object', 'properties': {'y': {'enum': [None]}}},
                                                       {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).ndim < 3'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': 'np.asarray(y, None, None).ndim < 3'}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).ndim < 3'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': 'np.asarray(y, None, None).ndim < 3'}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': '_num_samples(np.asarray(y.sparse.to_coo(), None, None)) >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': '_num_samples(np.asarray(y, None, None)) >= 1'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': '_num_samples(np.asarray(y.sparse.to_coo(), None, None)) >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': '_num_samples(np.asarray(y, None, None)) >= 1'}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': 'np.asarray(y, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': 'np.asarray(y, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'XXX TODO XXX': "not hasattr(X, 'fit')"}, {'XXX TODO XXX': 'not callable(X.fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': "hasattr(X, '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ", 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
           {'description': "From /utils/validation.py:None:check_consistent_length, Exception: raise ValueError(     'Found input variables with inconsistent numbers of samples: %r' % [int     (l) for l in lengths]) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'criterion': {'not': {'enum': ['mae']}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}}, {'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}}, {'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'criterion': {'enum': ['mae']}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}}, {'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}}, {'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_X_y, Exception: raise ValueError('y cannot be None') ", 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}]},
           {'description': "From /base.py:BaseEstimator:_validate_data, Exception: raise ValueError(     f'This {self.__class__.__name__} estimator requires y to be passed, but the target y is None.'     ) ", 'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not self._get_tags()['requires_y']"}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                  {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"},
                                                                  {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', None).fit)"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, None, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', None).fit)"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'sample_weight.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(sample_weight, 'dtype')"}, {'XXX TODO XXX': 'sample_weight.dtype is None'}, {'XXX TODO XXX': "not hasattr(sample_weight.dtype, 'kind')"}, {'XXX TODO XXX': "sample_weight.dtype.kind != 'c'"}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ", 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'type': 'object', 'laleNot': 'X/isSparse'}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'criterion': {'not': {'enum': ['mae']}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}},
                                                       {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                                       {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}},
                                                       {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                                       {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'criterion': {'enum': ['mae']}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}},
                                                       {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                                       {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}},
                                                       {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                                       {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).ndim < 3"}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', None)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', None)) >= 1"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'fit')"}, {'XXX TODO XXX': 'not callable(X.fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': "hasattr(X, '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ", 'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('Sample weights must be 1D array or scalar') ", 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'XXX TODO XXX': "check_array(sample_weight, False, False, dtype=[np.float64, np.float32], order='C', False).ndim == 1"}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('sample_weight.shape == {}, expected {}!'.format(     sample_weight.shape, (n_samples,))) ", 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'XXX TODO XXX': "check_array(sample_weight, False, False, dtype=[np.float64, np.float32], order='C', False).shape == [_num_samples(X)]"}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': "not hasattr(arrays[0], 'fit')"}, {'XXX TODO XXX': 'not callable(arrays[0].fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': "hasattr(arrays[0], '__len__')"}, {'XXX TODO XXX': "hasattr(arrays[0], 'shape')"}, {'XXX TODO XXX': "hasattr(arrays[0], '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(arrays[0], '__len__')"}, {'XXX TODO XXX': "hasattr(arrays[0], 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(arrays[0], '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(arrays[0]), 'shape')"}, {'XXX TODO XXX': 'np.asarray(arrays[0]).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(arrays[0]).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(arrays[0], '__array__')"}, {'XXX TODO XXX': "not hasattr(arrays[0], 'shape')"}, {'XXX TODO XXX': 'arrays[0].shape is None'}, {'XXX TODO XXX': 'len(arrays[0].shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(arrays[0], '__len__')"}, {'XXX TODO XXX': "not hasattr(arrays[0], 'shape')"}]}, {'XXX TODO XXX': "not hasattr(arrays[0], 'shape')"}, {'XXX TODO XXX': 'arrays[0].shape is None'}, {'XXX TODO XXX': 'len(arrays[0].shape) != 0'}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(arrays[0], '__len__')"}, {'XXX TODO XXX': "hasattr(arrays[0], 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(arrays[0], '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(arrays[0]), 'shape')"}, {'XXX TODO XXX': 'np.asarray(arrays[0]).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(arrays[0], '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(arrays[0], 'shape')"}, {'XXX TODO XXX': 'arrays[0].shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(arrays[0], '__len__')"}, {'XXX TODO XXX': "not hasattr(arrays[0], 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(arrays[0], 'shape')"}, {'XXX TODO XXX': 'arrays[0].shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': "not hasattr(X, 'fit')"}, {'XXX TODO XXX': 'not callable(X.fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': "hasattr(X, '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
           {'description': "From /utils/validation.py:None:check_consistent_length, Exception: raise ValueError(     'Found input variables with inconsistent numbers of samples: %r' % [int     (l) for l in lengths]) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'criterion': {'not': {'enum': ['mae']}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not is_classifier(self)'}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'len(arrays) != 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'len(arrays) == 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'is_classifier(self)'}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'len(arrays) != 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'len(arrays) == 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not is_classifier(self)'}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'len(arrays) != 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'len(arrays) == 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'is_classifier(self)'}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'len(arrays) != 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'len(arrays) == 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'criterion': {'enum': ['mae']}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [True]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not is_classifier(self)'}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'len(arrays) != 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'len(arrays) == 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'is_classifier(self)'}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'len(arrays) != 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'len(arrays) == 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'warm_start': {'enum': [False]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not is_classifier(self)'}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'len(arrays) != 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'len(arrays) == 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'is_classifier(self)'}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'len(arrays) != 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'len(arrays) == 0'}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]}]}]}]}]}]},
           {'description': "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'test_size={0} should be either positive and smaller than the number of samples {1} or a float in the (0, 1) range'     .format(test_size, n_samples)) ",
            'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'validation_fraction': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "0.25.dtype.kind != 'i'"}, {'XXX TODO XXX': '0.25 < _num_samples(arrays[0])'}]}, {'anyOf': [{'type': 'object', 'properties': {'validation_fraction': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.validation_fraction).dtype.kind != 'i'"}, {'allOf': [{'XXX TODO XXX': 'self.validation_fraction < _num_samples(arrays[0])'}, {'type': 'object', 'properties': {'validation_fraction': {'type': 'number', 'minimum': 0, 'exclusiveMinimum': True}}}]}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.validation_fraction).dtype.kind != 'f'"}, {'allOf': [{'type': 'object', 'properties': {'validation_fraction': {'type': 'number', 'minimum': 0, 'exclusiveMinimum': True}}}, {'type': 'object', 'properties': {'validation_fraction': {'type': 'number', 'maximum': 1, 'exclusiveMaximum': True}}}]}]}]}]}]}]},
           {'description': "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'train_size={0} should be either positive and smaller than the number of samples {1} or a float in the (0, 1) range'     .format(train_size, n_samples)) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "None.dtype.kind != 'i'"}, {'allOf': [{'XXX TODO XXX': 'None < _num_samples(arrays[0])'}, {'XXX TODO XXX': 'None > 0'}]}]}, {'anyOf': [{'XXX TODO XXX': "None.dtype.kind != 'f'"}, {'allOf': [{'XXX TODO XXX': 'None > 0'}, {'XXX TODO XXX': 'None < 1'}]}]}]}]},
           {'description': "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError('Invalid value for test_size: {}'.format(test_size)) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'validation_fraction': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "0.25.dtype.kind in ['i', 'f']"}]}, {'anyOf': [{'type': 'object', 'properties': {'validation_fraction': {'enum': [None]}}}, {'type': 'object', 'properties': {'validation_fraction': {'enum': [None]}}}, {'XXX TODO XXX': "np.asarray(self.validation_fraction).dtype.kind in ['i', 'f']"}]}]}]},
           {'description': "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'The sum of test_size and train_size = {}, should be in the (0, 1) range. Reduce test_size and/or train_size.'     .format(train_size + test_size)) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'validation_fraction': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "None.dtype.kind != 'f'"}, {'XXX TODO XXX': "0.25.dtype.kind != 'f'"}, {'XXX TODO XXX': 'None + 0.25 <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'validation_fraction': {'enum': [None]}}}, {'XXX TODO XXX': "None.dtype.kind != 'f'"}, {'XXX TODO XXX': "np.asarray(self.validation_fraction).dtype.kind != 'f'"}, {'XXX TODO XXX': 'None + self.validation_fraction <= 1'}]}]}]},
           {'description': "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'The sum of train_size and test_size = %d, should be smaller than the number of samples %d. Reduce test_size and/or train_size.'      % (n_train + n_test, n_samples)) ",
            'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'validation_fraction': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "0.25.dtype.kind != 'f'"}, {'XXX TODO XXX': '_num_samples(arrays[0]) - ceil(0.25 * _num_samples(arrays[0])) + ceil(0.25 * _num_samples(arrays[0])) <= _num_samples(arrays[0])'}]}, {'anyOf': [{'XXX TODO XXX': "0.25.dtype.kind == 'f'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "0.25.dtype.kind != 'i'"}, {'XXX TODO XXX': '_num_samples(arrays[0]) - 0.25 + 0.25 <= _num_samples(arrays[0])'}]}, {'anyOf': [{'XXX TODO XXX': "0.25.dtype.kind == 'i'"}, {'XXX TODO XXX': '_num_samples(arrays[0]) - n_test + n_test <= _num_samples(arrays[0])'}]}]}]}]}]},
                                 {'anyOf': [{'type': 'object', 'properties': {'validation_fraction': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.validation_fraction).dtype.kind != 'f'"}, {'XXX TODO XXX': '_num_samples(arrays[0]) - ceil(self.validation_fraction * _num_samples(arrays[0])) + ceil(self.validation_fraction * _num_samples(arrays[0])) <= _num_samples(arrays[0])'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.validation_fraction).dtype.kind == 'f'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.validation_fraction).dtype.kind != 'i'"}, {'XXX TODO XXX': '_num_samples(arrays[0]) - float(self.validation_fraction) + float(self.validation_fraction) <= _num_samples(arrays[0])'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.validation_fraction).dtype.kind == 'i'"}, {'XXX TODO XXX': '_num_samples(arrays[0]) - n_test + n_test <= _num_samples(arrays[0])'}]}]}]}]}]}]}]},
           {'description': "From /model_selection/_split.py:None:_validate_shuffle_split, Exception: raise ValueError(     'With n_samples={}, test_size={} and train_size={}, the resulting train set will be empty. Adjust any of the aforementioned parameters.'     .format(n_samples, test_size, train_size)) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': '[int(n_train), int(n_test)][0] != 0'}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], slice)'}, {'allOf': [{'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0].start is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0].stop is None'}]}, {'XXX TODO XXX': '_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0].start) is None'}, {'XXX TODO XXX': '_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0].stop) is None'}, {'XXX TODO XXX': '_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0].start) == _determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0].stop)'}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], slice)'}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])'}, {'XXX TODO XXX': 'not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[0])}'}, {'XXX TODO XXX': 'len({_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[0])}) == 1'}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], slice)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])'}, {'XXX TODO XXX': 'not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[0])}'}, {'XXX TODO XXX': "not hasattr(next(cv.split(X=arrays[0], y=stratify))[0], 'dtype')"}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])'}, {'XXX TODO XXX': "not hasattr(next(cv.split(X=arrays[0], y=stratify))[0], 'dtype')"}]}]}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[0], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], slice)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])'}, {'XXX TODO XXX': 'not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[0])}'}, {'XXX TODO XXX': "hasattr(next(cv.split(X=arrays[0], y=stratify))[0], 'dtype')"}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[0], [list, tuple])'}, {'XXX TODO XXX': "hasattr(next(cv.split(X=arrays[0], y=stratify))[0], 'dtype')"}]}]}]},
           {'description': 'From /utils/__init__.py:None:_safe_indexing, Exception: raise ValueError("String indexing is not supported with \'axis=0\'") ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[0] is None'}, {'XXX TODO XXX': "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[0]) != 'str'"}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], slice)'}, {'allOf': [{'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1].start is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1].stop is None'}]}, {'XXX TODO XXX': '_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1].start) is None'}, {'XXX TODO XXX': '_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1].stop) is None'}, {'XXX TODO XXX': '_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1].start) == _determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1].stop)'}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], slice)'}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])'}, {'XXX TODO XXX': 'not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[1])}'}, {'XXX TODO XXX': 'len({_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[1])}) == 1'}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], slice)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])'}, {'XXX TODO XXX': 'not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[1])}'}, {'XXX TODO XXX': "not hasattr(next(cv.split(X=arrays[0], y=stratify))[1], 'dtype')"}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])'}, {'XXX TODO XXX': "not hasattr(next(cv.split(X=arrays[0], y=stratify))[1], 'dtype')"}]}]}]},
           {'description': 'From /utils/__init__.py:None:_determine_key_type, Exception: raise ValueError(err_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': "isinstance(next(cv.split(X=arrays[0], y=stratify))[1], tuple({int: 'int', str: 'str', bool: 'bool', np.bool_: 'bool'}.keys()))"}, {'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], slice)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])'}, {'XXX TODO XXX': 'not {_determine_key_type(elt) for elt in set(next(cv.split(X=arrays[0], y=stratify))[1])}'}, {'XXX TODO XXX': "hasattr(next(cv.split(X=arrays[0], y=stratify))[1], 'dtype')"}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(next(cv.split(X=arrays[0], y=stratify))[1], [list, tuple])'}, {'XXX TODO XXX': "hasattr(next(cv.split(X=arrays[0], y=stratify))[1], 'dtype')"}]}]}]},
           {'description': 'From /utils/__init__.py:None:_safe_indexing, Exception: raise ValueError("String indexing is not supported with \'axis=0\'") ', 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'next(cv.split(X=arrays[0], y=stratify))[1] is None'}, {'XXX TODO XXX': "_determine_key_type(next(cv.split(X=arrays[0], y=stratify))[1]) != 'str'"}]},
           {'description': "From /model_selection/_split.py:None:train_test_split, Exception: raise ValueError('At least one array required as input') ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'len(arrays) != 0'}]},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError('n_estimators must be greater than 0 but was %r' % self.     n_estimators) ", 'type': 'object', 'properties': {'n_estimators': {'type': 'number', 'minimum': 0, 'exclusiveMinimum': True}}},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError('learning_rate must be greater than 0 but was %r' % self.     learning_rate) ", 'type': 'object', 'properties': {'learning_rate': {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True}}},
           {'description': 'From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError("Loss \'{0:s}\' not supported. ".format(self.loss)) ', 'allOf': [{'XXX TODO XXX': 'self.loss in self._SUPPORTED_LOSS'}, {'XXX TODO XXX': 'self.loss in _gb_losses.LOSS_FUNCTIONS'}]},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError('subsample must be in (0,1] but was %r' % self.subsample) ", 'allOf': [{'type': 'object', 'properties': {'subsample': {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True}}}, {'type': 'object', 'properties': {'subsample': {'type': 'number', 'maximum': 1.0}}}]},
           {'description': 'From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError(     "The init parameter must be an estimator or \'zero\'. Got init={}".format     (self.init)) ', 'anyOf': [{'type': 'object', 'properties': {'init': {'enum': [None]}}}, {'XXX TODO XXX': 'isinstance(self.init, BaseEstimator)'}, {'allOf': [{'type': 'object', 'properties': {'init': {'type': 'string'}}}, {'type': 'object', 'properties': {'init': {'enum': ['zero']}}}]}]},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError('alpha must be in (0.0, 1.0) but was %r' % self.alpha) ", 'allOf': [{'type': 'object', 'properties': {'alpha': {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True}}}, {'type': 'object', 'properties': {'alpha': {'type': 'number', 'maximum': 1.0, 'exclusiveMaximum': True}}}]},
           {'description': 'From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError(     "Invalid value for max_features: %r. Allowed string values are \'auto\', \'sqrt\' or \'log2\'."      % self.max_features) ', 'anyOf': [{'type': 'object', 'properties': {'max_features': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'max_features': {'enum': ['auto']}}}, {'type': 'object', 'properties': {'max_features': {'enum': ['sqrt']}}}, {'type': 'object', 'properties': {'max_features': {'enum': ['log2']}}}]},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError('max_features must be in (0, n_features]') ", 'anyOf': [{'type': 'object', 'properties': {'max_features': {'type': 'string'}}}, {'type': 'object', 'properties': {'max_features': {'enum': [None]}}}, {'type': 'object', 'properties': {'max_features': {'type': 'integer'}}}, {'allOf': [{'type': 'object', 'properties': {'max_features': {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True}}}, {'type': 'object', 'properties': {'max_features': {'type': 'number', 'maximum': 1.0}}}]}]},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:_check_params, Exception: raise ValueError(     'n_iter_no_change should either be None or an integer. %r was passed' %     self.n_iter_no_change) ", 'XXX TODO XXX': 'isinstance(self.n_iter_no_change, [numbers.Integral, type(None)])'},
           {'description': "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ", 'anyOf': [{'XXX TODO XXX': 'self._is_initialized()'}, {'type': 'object', 'properties': {'random_state': {'enum': [None]}}}, {'XXX TODO XXX': 'self.random_state is np.random'}, {'XXX TODO XXX': 'isinstance(self.random_state, np.random.RandomState)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=DTYPE).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', None, False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', None).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', None).fit)"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csr', None, False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', None).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', None).fit)"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=DTYPE).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'},
                                                                                                                                                          {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                                                                          {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in DTYPE'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in DTYPE'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', None).ndim < 3"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', None).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', None)) >= 1"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', None).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', None)) >= 1"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csr', dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csr', dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csr', dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csr', dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in DTYPE"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', None).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', None).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', None).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in DTYPE"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=dtype[0]).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csr', dtype=dtype[0], False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=dtype[0]).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), order='C', dtype=DTYPE).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csr', dtype=DTYPE, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C').astype(DTYPE, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, order='C', dtype=DTYPE).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_is_fitted, Exception: raise TypeError('{} is a class, not an instance.'.format(estimator)) ", 'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'}, {'XXX TODO XXX': 'not isclass(self)'}]},
           {'description': "From /utils/validation.py:None:check_is_fitted, Exception: raise TypeError('%s is not an estimator instance.' % estimator) ", 'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'}, {'XXX TODO XXX': "hasattr(self, 'fit')"}]},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:_resize_state, Exception: raise ValueError('resize with smaller n_estimators %d < %d' % (     total_n_estimators, self.estimators_[0])) ", 'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'}, {'XXX TODO XXX': 'self.n_estimators >= self.estimators_.shape[0]'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).fit)"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).astype(np.float64).fit)"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).fit)"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).astype(np.float64).fit)"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"},
                                                                                                                         {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in DTYPE"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', None, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).fit)"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', None, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).fit)"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in DTYPE"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).fit)"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).astype(np.float64).fit)"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(None, accept_sparse='csr', dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(None, accept_sparse='csr', dtype=np.float64, False, True, True).fit)"}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(None, accept_sparse='csr', dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(None, accept_sparse='csr', dtype=dtype[0], False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(None)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(None.astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(None.astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(None.astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(None.astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(None, order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(None, order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(None, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(None, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(None, accept_sparse='csr', dtype=DTYPE, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(None, accept_sparse='csr', dtype=DTYPE, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(None)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(None.astype(DTYPE, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(None.astype(DTYPE, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(None.astype(DTYPE, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(None.astype(DTYPE, casting='unsafe', False).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(None, order='C', dtype=DTYPE).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(None, order='C', dtype=DTYPE).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(None, order='C', dtype=DTYPE), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(None, order='C', dtype=DTYPE).fit)"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo().dtype.kind != 'c'"}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtype is None'}, {'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtype, 'kind')"}, {'XXX TODO XXX': "train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                                         {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype is None"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64), 'dtype')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype is None"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) not in DTYPE'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) in DTYPE'}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                                         {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype is None"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64), 'dtype')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype is None"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"},
                                                                                                                         {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype is None"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                         {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64), 'dtype')"},
                                                                                                                         {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype is None"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                         {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                                         {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype is None"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64), 'dtype')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype is None"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) not in DTYPE'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) in DTYPE'}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                                         {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype is None"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64), 'dtype')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype is None"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                                               {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"},
                                                                                                                                                                     {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in DTYPE"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in DTYPE"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                                                 {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"},
                                                                                                                         {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype is None"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                         {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64), 'dtype')"},
                                                                                                                         {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype is None"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype, 'kind')"},
                                                                                                                         {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"},
                                                                                                                                               {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in DTYPE"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None), 'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype is None"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype, 'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None), 'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype is None"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype, 'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in DTYPE"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False), 'dtype')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype is None"},
                                                                                                                                                                                           {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                                           {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False), 'dtype')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype is None"},
                                                                                                                                                                     {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype, 'kind')"},
                                                                                                                                                                     {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': 'sp.issparse(None)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(None.astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(None.astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(None, order='C', dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(None, order='C', dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': 'sp.issparse(None)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(None.astype(DTYPE, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(None.astype(DTYPE, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(None, order='C', dtype=DTYPE), 'dtype')"}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(None, order='C', dtype=DTYPE).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype.kind != 'c'"}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'not': {'enum': [None]}}}}, {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                                         {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) not in DTYPE'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) in DTYPE'}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                                         {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(DTYPE, np.dtype) for DTYPE in list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                                         {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is None'},
                                                                                                                                                                     {'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) not in DTYPE'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)) in DTYPE'}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((isinstance(DTYPE, np.dtype) for DTYPE in list(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                                         {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"},
                                                                                                                                                                     {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in DTYPE"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in DTYPE"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                                           {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                                           {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"},
                                                                                                                                               {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in DTYPE"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in DTYPE"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': 'sp.issparse(None)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'}, {'XXX TODO XXX': 'sp.issparse(None)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"},
                                                                                                                         {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in DTYPE"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).ndim < 3"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in DTYPE"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                       {'XXX TODO XXX': 'sp.issparse(None)'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                       {'XXX TODO XXX': 'sp.issparse(None)'},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).ndim < 3"}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).astype(np.float64)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtypes')"}, {'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).astype(np.float64)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is None"},
                                                                                                                         {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) not in DTYPE"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', None, False, True, True)) >= 1"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', None)) >= 1"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', None, False, True, True)) >= 1"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', None)) >= 1"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'dtype', None) in DTYPE"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                           {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                           {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C').astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].sparse.to_coo(), order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], 'sparse')"}, {'XXX TODO XXX': 'train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1].ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1])'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C').astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(train_test_split(X, y, sample_weight, random_state=self.random_state, test_size=self.validation_fraction, stratify=stratify)[1], order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(None, accept_sparse='csr', dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(None)'}, {'XXX TODO XXX': "_num_samples(np.asarray(None, order='C', dtype=np.float64)) >= 1"}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(None, accept_sparse='csr', dtype=dtype[0], False, True, True)) >= 1"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(None)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(None.astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "None.astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(None.astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(None, order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(None, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(DTYPE, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(None, accept_sparse='csr', dtype=DTYPE, False, True, True)) >= 1"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(None)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(None.astype(DTYPE, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "None.astype(DTYPE, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(None.astype(DTYPE, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(DTYPE).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'DTYPE': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'DTYPE': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(None, order='C', dtype=DTYPE).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'DTYPE': {'type': 'string'}}}, {'type': 'object', 'properties': {'DTYPE': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(None, order='C', dtype=DTYPE).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(None, order='C', dtype=DTYPE)) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_is_fitted, Exception: raise TypeError('{} is a class, not an instance.'.format(estimator)) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'not isclass(self)'}]},
           {'description': "From /utils/validation.py:None:check_is_fitted, Exception: raise TypeError('%s is not an estimator instance.' % estimator) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': "hasattr(self, 'fit')"}]},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:fit, Exception: raise ValueError(     'The training data after the early stopping split is missing some classes. Try using another random seed.'     ) ", 'anyOf': [{'type': 'object', 'properties': {'n_iter_no_change': {'enum': [None]}}}, {'XXX TODO XXX': 'not is_classifier(self)'}, {'XXX TODO XXX': 'self._n_classes == np.unique(y).shape[0]'}]},
           {'description': 'From /ensemble/_gb.py:BaseGradientBoosting:fit, Exception: raise ValueError(msg) from e ', 'anyOf': [{'XXX TODO XXX': 'self._is_initialized()'}, {'type': 'object', 'properties': {'init_': {'enum': ['zero']}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}]},
           {'description': 'From /ensemble/_gb.py:BaseGradientBoosting:fit, Exception: raise ValueError(msg) from e ', 'anyOf': [{'XXX TODO XXX': 'self._is_initialized()'}, {'type': 'object', 'properties': {'init_': {'enum': ['zero']}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'XXX TODO XXX': "'pass parameters to specific steps of your pipeline using the stepname__parameter' not in str(e)"}]},
           {'description': 'From /ensemble/_gb.py:BaseGradientBoosting:fit, Exception: raise ', 'anyOf': [{'XXX TODO XXX': 'self._is_initialized()'}, {'type': 'object', 'properties': {'init_': {'enum': ['zero']}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'XXX TODO XXX': "'pass parameters to specific steps of your pipeline using the stepname__parameter' in str(e)"}]},
           {'description': "From /ensemble/_gb.py:BaseGradientBoosting:fit, Exception: raise ValueError(     'n_estimators=%d must be larger or equal to estimators_.shape[0]=%d when warm_start==True'      % (self.n_estimators, self.estimators_.shape[0])) ", 'anyOf': [{'XXX TODO XXX': 'not self._is_initialized()'}, {'XXX TODO XXX': 'self.n_estimators >= self.estimators_.shape[0]'}]}]}
