{'allOf': [{'description': 'This first object lists all constructor arguments with their types, but omits constraints '
                           'for conditional hyperparameters.',
            'type': 'object',
            'additionalProperties': False,
            'required': ['kernel', 'gamma', 'coef0', 'degree', 'n_components', 'random_state'],
            'relevantToOptimizer': ['coef0', 'degree', 'gamma', 'kernel', 'n_components'],
            'properties': {'kernel': {'description': 'Kernel map to be approximated.',
                                      'anyOf': [{'description': 'keys of sklearn.metrics.pairwise.KERNEL_PARAMS',
                                                 'enum': ['additive_chi2',
                                                          'chi2',
                                                          'cosine',
                                                          'linear',
                                                          'poly',
                                                          'polynomial',
                                                          'rbf',
                                                          'laplacian',
                                                          'sigmoid']},
                                                {'laleType': 'callable', 'forOptimizer': False}],
                                      'default': 'rbf'},
                           'gamma': {'description': 'Gamma parameter.',
                                     'anyOf': [{'enum': [None]},
                                               {'type': 'number',
                                                'distribution': 'loguniform',
                                                'minimumForOptimizer': 3.0517578125e-05,
                                                'maximumForOptimizer': 8}],
                                     'default': None},
                           'coef0': {'description': 'Zero coefficient.',
                                     'anyOf': [{'enum': [None]},
                                               {'type': 'number',
                                                'minimum': -1,
                                                'distribution': 'uniform',
                                                'maximumForOptimizer': 1}],
                                     'default': None},
                           'degree': {'description': 'Degree of the polynomial kernel.',
                                      'anyOf': [{'enum': [None]},
                                                {'type': 'integer',
                                                 'minimumForOptimizer': 2,
                                                 'maximumForOptimizer': 5}],
                                      'default': None},
                           'kernel_params': {'description': 'Additional parameters (keyword arguments) for kernel '
                                                            'function passed as callable object.',
                                             'anyOf': [{'type': 'object'}, {'enum': [None]}],
                                             'default': None},
                           'n_components': {'description': 'Number of features to construct. How many data points will '
                                                           'be used to construct the mapping.',
                                            'type': 'integer',
                                            'default': 100,
                                            'minimum': 1,
                                            'distribution': 'uniform',
                                            'minimumForOptimizer': 10,
                                            'maximumForOptimizer': 256},
                           'random_state': {'description': 'Seed of pseudo-random number generator.',
                                            'anyOf': [{'type': 'integer'},
                                                      {'laleType': 'numpy.random.RandomState'},
                                                      {'enum': [None]}],
                                            'default': None},
                           'n_jobs': {'anyOf': [{'description': '1 unless in joblib.parallel_backend context.',
                                                 'enum': [None]},
                                                {'description': 'Use all processors.', 'enum': [-1]},
                                                {'description': 'Number of CPU cores.',
                                                 'type': 'integer',
                                                 'minimum': 1}],
                                      'default': None,
                                      'description': 'The number of jobs to use for the computation.'}}}]}
