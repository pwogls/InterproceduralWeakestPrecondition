{'allOf': [{'type': 'object',
            'required': ['n_components', 'alpha', 'ridge_alpha', 'n_iter', 'callback', 'batch_size', 'verbose', 'shuffle', 'n_jobs', 'method', 'random_state'],
            'relevantToOptimizer': ['n_components', 'alpha', 'n_iter', 'batch_size', 'shuffle', 'method'],
            'additionalProperties': False,
            'properties': {'n_components': {'anyOf': [{'type': 'integer', 'minimumForOptimizer': 2, 'maximumForOptimizer': 256, 'distribution': 'uniform'}, {'enum': [None]}], 'default': None, 'description': 'number of sparse atoms to extract'},
                           'alpha': {'type': 'integer', 'minimumForOptimizer': 1, 'maximumForOptimizer': 2, 'distribution': 'uniform', 'default': 1, 'description': 'Sparsity controlling parameter'},
                           'ridge_alpha': {'type': 'number', 'default': 0.01, 'description': 'Amount of ridge shrinkage to apply in order to improve conditioning when calling the transform method.'},
                           'n_iter': {'type': 'integer', 'minimumForOptimizer': 5, 'maximumForOptimizer': 1000, 'distribution': 'uniform', 'default': 100, 'description': 'number of iterations to perform for each mini batch'},
                           'callback': {'anyOf': [{'laleType': 'callable'}, {'enum': [None]}], 'default': None, 'description': 'callable that gets invoked every five iterations'},
                           'batch_size': {'type': 'integer', 'minimumForOptimizer': 3, 'maximumForOptimizer': 128, 'distribution': 'uniform', 'default': 3, 'description': 'the number of features to take in each mini batch'},
                           'verbose': {'anyOf': [{'type': 'integer'}, {'type': 'boolean'}], 'default': False, 'description': 'Controls the verbosity; the higher, the more messages'},
                           'shuffle': {'type': 'boolean', 'default': True, 'description': 'whether to shuffle the data before splitting it in batches'},
                           'n_jobs': {'anyOf': [{'type': 'integer'}, {'enum': [None]}], 'default': 1, 'description': 'Number of parallel jobs to run'},
                           'method': {'enum': ['lars', 'cd'], 'default': 'lars', 'description': 'lars: uses the least angle regression method to solve the lasso problem (linear_model.lars_path) cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso)'},
                           'random_state': {'anyOf': [{'type': 'integer'}, {'laleType': 'numpy.random.RandomState'}, {'enum': [None]}], 'default': None, 'description': 'If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by `np.random`.'}}},
           {'description': "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ", 'anyOf': [{'type': 'object', 'properties': {'random_state': {'enum': [None]}}}, {'XXX TODO XXX': 'self.random_state is np.random'}, {'XXX TODO XXX': 'isinstance(self.random_state, np.random.RandomState)'}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ", 'type': 'object', 'laleNot': 'X/isSparse'},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=numeric, False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=numeric, False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, None, False, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, None, False, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=numeric, False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=numeric, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=numeric, False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=dtype[0], False, True, True)) >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=numeric, False, True, True)) >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=numeric, False, True, True)) >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=dtype[0], False, True, True)) >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=numeric, False, True, True)) >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=numeric, False, True, True)) >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=dtype[0], False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=numeric, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=numeric, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, None, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, None, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=dtype[0], False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=numeric, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=numeric, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ", 'anyOf': [{'XXX TODO XXX': 'check_random_state(self.random_state) is None'}, {'XXX TODO XXX': 'check_random_state(self.random_state) is np.random'}, {'XXX TODO XXX': 'isinstance(check_random_state(self.random_state), np.random.RandomState)'}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "dictionary[[:n_components, :]].T.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'dtype')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.dtype is None'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.dtype, 'kind')"}, {'XXX TODO XXX': "dictionary[[:n_components, :]].T.dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype is None'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype, 'kind')"}, {'XXX TODO XXX': "np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "dictionary[[:n_components, :]].T.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'dtype')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.dtype is None'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.dtype, 'kind')"}, {'XXX TODO XXX': "dictionary[[:n_components, :]].T.dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype is None'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype, 'kind')"}, {'XXX TODO XXX': "np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype.kind != 'c'"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "dictionary[[:n_components, :]].T.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'dtype')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.dtype is None'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.dtype, 'kind')"}, {'XXX TODO XXX': "dictionary[[:n_components, :]].T.dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype is None'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype, 'kind')"}, {'XXX TODO XXX': "np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "dictionary[[:n_components, :]].T.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'dtype')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.dtype is None'}, {'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T.dtype, 'kind')"}, {'XXX TODO XXX': "dictionary[[:n_components, :]].T.dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype is None'}, {'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype, 'kind')"}, {'XXX TODO XXX': "np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtype.kind != 'c'"}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).fit)"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).fit)"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64).ndim < 3"}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(dictionary[[:n_components, :]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(dictionary[[:n_components, :]].T, 'sparse')"}, {'XXX TODO XXX': 'dictionary[[:n_components, :]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(dictionary[[:n_components, :]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(dictionary[[:n_components, :]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(dictionary[[:n_components, :]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.sparse.to_coo(), order='F', dtype=np.float64)) >= 1"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, 'sparse')"}, {'XXX TODO XXX': 'np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [False]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.T.copy().sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.T.copy().sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.T.copy().sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.T.copy().sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.T.copy(), 'dtype')"}, {'XXX TODO XXX': 'X.T.copy().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.T.copy().dtype, 'kind')"}, {'XXX TODO XXX': "X.T.copy().dtype.kind != 'c'"}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [True]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.T.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.T.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.T.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.T.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.T, 'dtype')"}, {'XXX TODO XXX': 'X.T.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.T.dtype, 'kind')"}, {'XXX TODO XXX': "X.T.dtype.kind != 'c'"}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [False]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(X.T.copy().dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for np.float64 in list(X.T.copy().dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False for np.float64 in list(X.T.copy().dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(X.T.copy().dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for np.float64 in list(X.T.copy().dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False for np.float64 in list(X.T.copy().dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [True]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(X.T.dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for np.float64 in list(X.T.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False for np.float64 in list(X.T.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(X.T.dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for np.float64 in list(X.T.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'all((False for np.float64 in list(X.T.dtypes)))'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ", 'allOf': [{'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [False]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [True]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [False]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.T.copy().sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.T.copy().sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.T.copy(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.T.copy(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.T.copy(), order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.T.copy().sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.T.copy().sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.T.copy(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.T.copy(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.copy(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.T.copy(), order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [True]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.T, order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.T.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.T.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.T, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.T, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.T, order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.T, order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'allOf': [{'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [False]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [True]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [False]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [True]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [False]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.T.copy().sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.T.copy(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "_num_samples(np.asarray(X.T.copy(), order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.T.copy().sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.T.copy(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "_num_samples(np.asarray(X.T.copy(), order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [True]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(X.T, order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.T.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.T, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "_num_samples(np.asarray(X.T, order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [False]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.T.copy().sparse.to_coo(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.T.copy(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T.copy(), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.copy().dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.T.copy().sparse.to_coo(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy().sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(X.T.copy().sparse.to_coo(), order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T.copy(), 'sparse')"}, {'XXX TODO XXX': 'X.T.copy().ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.T.copy(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.copy())'}, {'XXX TODO XXX': "np.asarray(X.T.copy(), order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'shuffle': {'enum': [True]}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X.T, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.T.sparse.to_coo(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.T, False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X.T, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.T.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.T.sparse.to_coo(), False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(X.T.sparse.to_coo(), order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X.T, 'sparse')"}, {'XXX TODO XXX': 'X.T.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.T, False, dtype=np.float64, False, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.T)'}, {'XXX TODO XXX': "np.asarray(X.T, order='C', dtype=np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ", 'anyOf': [{'XXX TODO XXX': 'check_random_state(check_random_state(self.random_state)) is None'}, {'XXX TODO XXX': 'check_random_state(check_random_state(self.random_state)) is np.random'}, {'XXX TODO XXX': 'isinstance(check_random_state(check_random_state(self.random_state)), np.random.RandomState)'}]},
           {'description': "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ", 'anyOf': [{'XXX TODO XXX': 'check_random_state(check_random_state(check_random_state(self.random_state))) is None'}, {'XXX TODO XXX': 'check_random_state(check_random_state(check_random_state(self.random_state))) is np.random'}, {'XXX TODO XXX': 'isinstance(check_random_state(check_random_state(check_random_state(self.random_state))), np.random.RandomState)'}]},
           {'description': "From /utils/__init__.py:None:gen_batches, Exception: raise TypeError('gen_batches got batch_size=%s, must be an integer' %     batch_size) ", 'type': 'object', 'properties': {'batch_size': {'type': 'integer'}}},
           {'description': "From /utils/__init__.py:None:gen_batches, Exception: raise ValueError('gen_batches got batch_size=%s, must be positive' % batch_size     ) ", 'type': 'object', 'properties': {'batch_size': {'type': 'number', 'minimum': 0, 'exclusiveMinimum': True}}},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                                         {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                                         {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                                         {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                                         {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]}]}]}]}]}]},
           {'description': "From /decomposition/_dict_learning.py:None:_sparse_encode, Exception: raise ValueError(     'Dictionary and X have different numbers of features:dictionary.shape: {} X.shape{}'     .format(dictionary.shape, X.shape)) ", 'anyOf': [{'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': 'dictionary.shape[1] == X.shape[1]'}]},
           {'description': 'From /decomposition/_dict_learning.py:None:_sparse_encode, Exception: raise ValueError(     \'Sparse coding method must be "lasso_lars" "lasso_cd", "lasso", "threshold" or "omp", got %s.\'      % algorithm) ', 'anyOf': [{'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'omp'"}]},
           {'description': "From /utils/__init__.py:None:gen_even_slices, Exception: raise ValueError('gen_even_slices got n_packs=%s, must be >=1' % n_packs) ", 'anyOf': [{'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'}, {'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) == 1'}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) >= 1'}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                             {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo(), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]},
                                                                                                   {'type': 'object', 'laleNot': 'X/isSparse'},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'dtype')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype is None"},
                                                                                                   {'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype, 'kind')"},
                                                                                                   {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).dtype.kind != 'c'"}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] is not None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                                         {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'X.shape[1] is None'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                                         {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.shape[1] > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'X.shape[1] <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                                         {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'self.n_components > len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(dictionary[[:n_components, :]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'self.n_components <= len(S[[:, np.newaxis]] * randomized_svd(X, n_components, random_state=random_state)[2])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"},
                                                                                                   {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim <= 1"},
                                                                                                                         {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).sparse.to_coo())"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T), 'sparse')"}, {'XXX TODO XXX': "np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(np.dot(np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T, np.require(check_array(np.r_[[dictionary, np.zeros([n_components - r, dictionary.shape[1]])]].T, order='F', dtype=np.float64, False), requirements='W').T.T))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}, {'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method != 'omp'"}, {'XXX TODO XXX': 'sp.issparse(None)'}]}]}]}]}]}]}]}]},
           {'description': "From /decomposition/_dict_learning.py:None:_sparse_encode, Exception: raise ValueError(     'Dictionary and X have different numbers of features:dictionary.shape: {} X.shape{}'     .format(dictionary.shape, X.shape)) ", 'anyOf': [{'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': 'dictionary.shape[1] == X.shape[1]'}]},
           {'description': 'From /decomposition/_dict_learning.py:None:_sparse_encode, Exception: raise ValueError(     \'Sparse coding method must be "lasso_lars" "lasso_cd", "lasso", "threshold" or "omp", got %s.\'      % algorithm) ', 'anyOf': [{'allOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) != 1'}, {'XXX TODO XXX': "'lasso_' + self.method != 'threshold'"}]}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lasso_cd'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'lars'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': "'lasso_' + self.method == 'omp'"}]},
           {'description': "From /utils/__init__.py:None:gen_even_slices, Exception: raise ValueError('gen_even_slices got n_packs=%s, must be >=1' % n_packs) ", 'anyOf': [{'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) == 1'}, {'XXX TODO XXX': "'lasso_' + self.method == 'threshold'"}, {'XXX TODO XXX': 'effective_n_jobs(self.n_jobs) >= 1'}]},
           {'description': "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ", 'anyOf': [{'XXX TODO XXX': '[0 - 1, batch] not in zip(range(0, self.n_iter), itertools.cycle(gen_batches(X.shape[0], self.batch_size)))'}, {'XXX TODO XXX': 'check_random_state(check_random_state(self.random_state)) is None'}, {'XXX TODO XXX': 'check_random_state(check_random_state(self.random_state)) is np.random'}, {'XXX TODO XXX': 'isinstance(check_random_state(check_random_state(self.random_state)), np.random.RandomState)'}]},
           {'description': "From /decomposition/_dict_learning.py:None:dict_learning_online, Exception: raise ValueError('Coding method not supported as a fit algorithm.') ", 'type': 'object', 'properties': {'method': {'enum': ['lars', 'cd']}}}]}
