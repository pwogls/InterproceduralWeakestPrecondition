{'allOf': [{'type': 'object',
            'required': ['estimator', 'n_features_to_select', 'step', 'verbose'],
            'relevantToOptimizer': ['n_features_to_select', 'step'],
            'additionalProperties': False,
            'properties': {'estimator': {'description': 'A supervised learning estimator with a fit method that provides information about feature importance either through a `coef_` attribute or through a `feature_importances_` attribute.', 'laleType': 'operator'},
                           'n_features_to_select': {'anyOf': [{'description': 'Half of the features are selected.', 'enum': [None]}, {'description': 'Absolute number of features to select.', 'type': 'integer', 'minimum': 1, 'laleMaximum': 'X/items/maxItems', 'forOptimizer': False}, {'description': 'Fraction of features to select', 'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True, 'maximum': 1.0, 'exclusiveMaximum': True}], 'default': None},
                           'step': {'description': 'If greater than or equal to 1, then step corresponds to the (integer) number of features to remove at each iteration. If within (0.0, 1.0), then step corresponds to the percentage (rounded down) of features to remove at each iteration.', 'anyOf': [{'type': 'integer', 'minimum': 1, 'forOptimizer': False}, {'type': 'number', 'minimum': 0, 'exclusiveMinimum': True, 'maximum': 1, 'exclusiveMaximum': True, 'maximumForOptimizer': 0.5}], 'default': 1},
                           'verbose': {'anyOf': [{'type': 'boolean'}, {'type': 'integer'}], 'default': 0, 'description': 'Controls verbosity of output.'},
                           'importance_getter': {'anyOf': [{'description': 'Use the feature importance either through a `coef_` or `feature_importances_` attributes of estimator.', 'enum': ['auto']}, {'description': 'Attribute name/path for extracting feature importance (implemented with attrgetter).', 'type': 'string'}, {'description': 'The callable is passed with the fitted estimator and it should return importance for each feature.', 'laleType': 'callable'}], 'default': 'auto'}}},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     \'force_all_finite should be a bool or "allow-nan". Got {!r} instead\'.     format(force_all_finite)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "not self._get_tags()['requires_y']"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "self._get_tags()['requires_y']"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     \'force_all_finite should be a bool or "allow-nan". Got {!r} instead\'.     format(force_all_finite)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}}, {'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) not in [True, False, 'allow-nan']"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'y': {'not': {'type': 'string'}}}},
                      {'type': 'object', 'properties': {'y': {'not': {'enum': ['no_validation']}}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                                              {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                                        {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind != 'c'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=numeric).fit)'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).fit)"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}},
                                                                                                                                                          {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(numeric, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(numeric, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=numeric), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=numeric).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     \'force_all_finite should be a bool or "allow-nan". Got {!r} instead\'.     format(force_all_finite)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'XXX TODO XXX': "(not self._get_tags().get('allow_nan', True)) in [True, False, 'allow-nan']"}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in numeric'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in numeric'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(numeric, np.dtype) for numeric in list(X.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim < 3'}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True)) >= 1"}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(numeric, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=numeric)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}},
                                                                  {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                        {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                        {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=np.float64, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(X, 'dtype', None) not in numeric"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', None, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in numeric"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=dtype[0], False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'isinstance(numeric, [list, tuple])'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse='csc', dtype=numeric, False, force_all_finite=not self._get_tags().get('allow_nan', True), True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(numeric).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(numeric, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(numeric).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'numeric': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'numeric': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'numeric': {'type': 'string'}}}, {'type': 'object', 'properties': {'numeric': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=numeric).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=numeric).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(y.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'y.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(y.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "y.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(y, 'dtype')"}, {'XXX TODO XXX': 'y.dtype is None'}, {'XXX TODO XXX': "not hasattr(y.dtype, 'kind')"}, {'XXX TODO XXX': "y.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(y.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for None in list(y.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((False for None in list(y.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(y.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for None in list(y.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((False for None in list(y.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(y, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(y, None, None).dtype.kind != 'c'"}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(y.sparse.to_coo(), None, None).fit)'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(y, None, None).fit)'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(y.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(y.sparse.to_coo(), None, None).fit)'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': "not hasattr(np.asarray(y, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(y, None, None).fit)'}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]},
                                 {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': "y.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in y.dtypes])) <= 1'}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).ndim < 3'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': 'np.asarray(y, None, None).ndim < 3'}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).ndim < 3'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': 'np.asarray(y, None, None).ndim < 3'}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': '_num_samples(np.asarray(y.sparse.to_coo(), None, None)) >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': '_num_samples(np.asarray(y, None, None)) >= 1'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': '_num_samples(np.asarray(y.sparse.to_coo(), None, None)) >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': '_num_samples(np.asarray(y, None, None)) >= 1'}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}},
                      {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': 'np.asarray(y, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(y, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(y, 'dtypes')"}, {'XXX TODO XXX': "hasattr(y.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(y.sparse.to_coo(), accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(y.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(y, 'sparse')"}, {'XXX TODO XXX': 'y.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(y, accept_sparse='csr', None, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(y)'}, {'XXX TODO XXX': 'np.asarray(y, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'XXX TODO XXX': "not hasattr(X, 'fit')"}, {'XXX TODO XXX': 'not callable(X.fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': "hasattr(X, '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ", 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ', 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
           {'description': "From /utils/validation.py:None:check_consistent_length, Exception: raise ValueError(     'Found input variables with inconsistent numbers of samples: %r' % [int     (l) for l in lengths]) ", 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'XXX TODO XXX': 'len(np.unique([_num_samples(X) for X in arrays if X is not None])) <= 1'}]}]}]},
           {'description': "From /utils/validation.py:None:check_X_y, Exception: raise ValueError('y cannot be None') ", 'anyOf': [{'type': 'object', 'properties': {'y': {'enum': [None]}}}, {'allOf': [{'type': 'object', 'properties': {'y': {'type': 'string'}}}, {'type': 'object', 'properties': {'y': {'enum': ['no_validation']}}}]}, {'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}]},
           {'description': "From /base.py:BaseEstimator:_validate_data, Exception: raise ValueError(     f'This {self.__class__.__name__} estimator requires y to be passed, but the target y is None.'     ) ", 'anyOf': [{'type': 'object', 'properties': {'y': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not self._get_tags()['requires_y']"}]},
           {'description': "From /base.py:None:clone, Exception: raise TypeError('Cannot clone object. ' +     'You should provide an instance of ' +     'scikit-learn estimator instead of a class.') ", 'anyOf': [{'XXX TODO XXX': 'type(self.estimator) in [list, tuple, set, frozenset]'}, {'allOf': [{'XXX TODO XXX': "hasattr(self.estimator, 'get_params')"}, {'XXX TODO XXX': 'isinstance(self.estimator, type)'}]}, {'XXX TODO XXX': 'isinstance(self.estimator, type)'}]},
           {'description': 'From /base.py:None:clone, Exception: raise TypeError(     "Cannot clone object \'%s\' (type %s): it does not seem to be a scikit-learn estimator as it does not implement a \'get_params\' method."      % (repr(estimator), type(estimator))) ', 'anyOf': [{'XXX TODO XXX': 'type(self.estimator) in [list, tuple, set, frozenset]'}, {'allOf': [{'XXX TODO XXX': "hasattr(self.estimator, 'get_params')"}, {'XXX TODO XXX': 'isinstance(self.estimator, type)'}]}, {'XXX TODO XXX': 'isinstance(self.estimator, type)'}]},
           {'description': "From /base.py:None:clone, Exception: raise RuntimeError(     'Cannot clone object %s, as the constructor either does not set or modifies parameter %s'      % (estimator, name)) ", 'anyOf': [{'XXX TODO XXX': 'name not in self.estimator.get_params(False)'}, {'XXX TODO XXX': 'new_object_params[name] is params_set[name]'}]},
           {'description': "From /base.py:None:clone, Exception: raise TypeError('Cannot clone object. ' +     'You should provide an instance of ' +     'scikit-learn estimator instead of a class.') ", 'anyOf': [{'XXX TODO XXX': 'type(self.estimator) in [list, tuple, set, frozenset]'}, {'allOf': [{'XXX TODO XXX': "hasattr(self.estimator, 'get_params')"}, {'XXX TODO XXX': 'isinstance(self.estimator, type)'}]}, {'XXX TODO XXX': 'isinstance(self.estimator, type)'}]},
           {'description': 'From /base.py:None:clone, Exception: raise TypeError(     "Cannot clone object \'%s\' (type %s): it does not seem to be a scikit-learn estimator as it does not implement a \'get_params\' method."      % (repr(estimator), type(estimator))) ', 'anyOf': [{'XXX TODO XXX': 'type(self.estimator) in [list, tuple, set, frozenset]'}, {'allOf': [{'XXX TODO XXX': "hasattr(self.estimator, 'get_params')"}, {'XXX TODO XXX': 'isinstance(self.estimator, type)'}]}, {'XXX TODO XXX': 'isinstance(self.estimator, type)'}]},
           {'description': "From /base.py:None:clone, Exception: raise RuntimeError(     'Cannot clone object %s, as the constructor either does not set or modifies parameter %s'      % (estimator, name)) ", 'anyOf': [{'XXX TODO XXX': 'name not in self.estimator.get_params(False)'}, {'XXX TODO XXX': 'new_object_params[name] is params_set[name]'}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim != 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).sparse.to_coo().dtype is None"}, {'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'dtype')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).dtype is None"}, {'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator).dtype, 'kind')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim != 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).sparse.to_coo().dtype is None"}, {'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'dtype')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).dtype is None"}, {'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator).dtype, 'kind')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "self.importance_getter(estimator).sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtype')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).dtype is None'}, {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtype, 'kind')"}, {'XXX TODO XXX': "self.importance_getter(estimator).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim != 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "attrgetter(self.importance_getter)(estimator).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'dtype')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).dtype is None'}, {'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator).dtype, 'kind')"}, {'XXX TODO XXX': "attrgetter(self.importance_getter)(estimator).dtype.kind != 'c'"}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "self.importance_getter(estimator).sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtype')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).dtype is None'}, {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtype, 'kind')"}, {'XXX TODO XXX': "self.importance_getter(estimator).dtype.kind != 'c'"}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim != 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'dtypes')"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter('coef_')(estimator).dtypes)))"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter('coef_')(estimator).dtypes)))"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'dtypes')"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter('coef_')(estimator).dtypes)))"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter('coef_')(estimator).dtypes)))"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim != 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter('feature_importances_')(estimator).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter('feature_importances_')(estimator).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter('feature_importances_')(estimator).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter('feature_importances_')(estimator).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim != 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"},
                                                                                                   {'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter(self.importance_getter)(estimator).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter(self.importance_getter)(estimator).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"},
                                                                                                   {'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter(self.importance_getter)(estimator).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter(self.importance_getter)(estimator).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim != 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter('coef_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter('coef_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter('coef_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter('coef_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter('coef_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter('coef_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter('coef_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter('coef_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).fit)"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim != 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter('feature_importances_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter('feature_importances_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter('feature_importances_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter('feature_importances_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter('feature_importances_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter('feature_importances_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter('feature_importances_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter('feature_importances_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).fit)"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim != 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"},
                                                                             {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"},
                                                                             {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(self.importance_getter(estimator), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim != 1"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim != 1"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim != 1'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim != 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'dtypes')"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter('coef_')(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter('coef_')(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'dtypes')"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter('coef_')(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter('coef_')(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim != 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter('feature_importances_')(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter('feature_importances_')(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter('feature_importances_')(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter('feature_importances_')(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim != 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"},
                                                                                                   {'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter(self.importance_getter)(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter(self.importance_getter)(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"},
                                                                                                   {'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(attrgetter(self.importance_getter)(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(attrgetter(self.importance_getter)(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(self.importance_getter(estimator).dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(self.importance_getter(estimator).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim != 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).ndim < 3"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim != 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).ndim < 3"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim != 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).ndim < 3'}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(self.importance_getter(estimator), None, dtype=np.float64).ndim < 3'}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim != 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter('coef_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter('coef_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('coef_')(estimator), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim <= 1"}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter('coef_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('coef_')(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('coef_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim > 1"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter('coef_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('coef_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('coef_')(estimator), None, dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim != 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter('feature_importances_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter('feature_importances_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter('feature_importances_')(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim <= 1"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter('feature_importances_')(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('feature_importances_')(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter('feature_importances_')(estimator), 'sparse')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim > 1"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter('feature_importances_')(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(attrgetter('feature_importances_')(estimator))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(attrgetter('feature_importances_')(estimator), None, dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim != 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(attrgetter(self.importance_getter)(estimator), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(attrgetter(self.importance_getter)(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(attrgetter(self.importance_getter)(estimator), 'sparse')"}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(attrgetter(self.importance_getter)(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(attrgetter(self.importance_getter)(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(attrgetter(self.importance_getter)(estimator), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim != 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(self.importance_getter(estimator), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'dtypes')"}, {'XXX TODO XXX': "hasattr(self.importance_getter(estimator).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.importance_getter(estimator).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(self.importance_getter(estimator), 'sparse')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(self.importance_getter(estimator), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(self.importance_getter(estimator))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(self.importance_getter(estimator), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(self.importance_getter(estimator), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim == 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo().dtype is None"}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtype is None"}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim == 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo().dtype is None"}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtype is None"}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).dtype is None'}, {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(self.importance_getter(estimator)).sum(0).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim == 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo().dtype.kind != 'c'"}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtype is None'}, {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtype.kind != 'c'"}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo().dtype.kind != 'c'"}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).dtype is None'}, {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtype, 'kind')"}, {'XXX TODO XXX': "safe_sqr(self.importance_getter(estimator)).sum(0).dtype.kind != 'c'"}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim == 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim == 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim == 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"},
                                                                                                   {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"},
                                                                                                   {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim == 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).fit)"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim == 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).fit)"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim == 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"},
                                                                             {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"},
                                                                             {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).fit)'}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"}, {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim == 1"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"}, {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim == 1"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}}, {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim == 1'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}}, {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim == 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"},
                                                                                                                         {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim == 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes)))"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"},
                                                                                                                                               {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim == 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"},
                                                                                                   {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"},
                                                                                                   {'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes)))"},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"},
                                                                             {'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "all((False for 'numeric' in list(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes)))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim == 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).ndim < 3"}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim == 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]}, {'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).ndim < 3"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim == 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).ndim < 3'}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).ndim < 3'}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'coef_')"},
                                                                             {'XXX TODO XXX': "attrgetter('coef_')(estimator).ndim == 1"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                   {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"},
                                                                                                                         {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim <= 1"},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('coef_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('coef_')(estimator)).sum(0).ndim > 1"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter('coef_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('coef_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('coef_')(estimator)).sum(0), None, dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'coef_')"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': "attrgetter('feature_importances_')(estimator).ndim == 1"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim <= 1"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]},
                                                                                                                                                          {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo())"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': "safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0).ndim > 1"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "sp.issparse(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0))"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(safe_sqr(attrgetter('feature_importances_')(estimator)).sum(0), None, dtype=np.float64)) >= 1"}]}]}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"},
                                                                                                   {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                                                                         {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'enum': ['auto']}}},
                                                       {'XXX TODO XXX': 'attrgetter(self.importance_getter)(estimator).ndim == 1'},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                                             {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).dtypes, '__array__')"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0).ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(attrgetter(self.importance_getter)(estimator)).sum(0), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}},
                                 {'XXX TODO XXX': 'self.importance_getter(estimator).ndim == 1'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"},
                                                                             {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'dtypes')"}, {'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"},
                                                                             {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0).sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(safe_sqr(self.importance_getter(estimator)).sum(0), 'sparse')"}, {'XXX TODO XXX': 'safe_sqr(self.importance_getter(estimator)).sum(0).ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(safe_sqr(self.importance_getter(estimator)).sum(0), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(safe_sqr(self.importance_getter(estimator)).sum(0))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': "np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64).dtype.kind in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(safe_sqr(self.importance_getter(estimator)).sum(0), None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /feature_selection/_base.py:None:_get_feature_importances, Exception: raise ValueError(     f"when `importance_getter==\'auto\'`, the underlying estimator {estimator.__class__.__name__} should have `coef_` or `feature_importances_` attribute. Either pass a fitted estimator to feature selector or call fit before calling transform."     ) ', 'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'importance_getter': {'not': {'enum': ['auto']}}}}, {'XXX TODO XXX': "hasattr(estimator, 'coef_')"}, {'XXX TODO XXX': "hasattr(estimator, 'feature_importances_')"}]},
           {'description': "From /feature_selection/_base.py:None:_get_feature_importances, Exception: raise ValueError('`importance_getter` has to be a string or `callable`') ", 'anyOf': [{'type': 'object', 'properties': {'importance_getter': {'type': 'string'}}}, {'XXX TODO XXX': 'callable(self.importance_getter)'}]},
           {'description': 'From /feature_selection/_rfe.py:RFE:_fit, Exception: raise ValueError(error_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_features_to_select': {'enum': [None]}}}, {'type': 'object', 'properties': {'n_features_to_select': {'type': 'number', 'minimum': 0}}}]},
           {'description': 'From /feature_selection/_rfe.py:RFE:_fit, Exception: raise ValueError(error_msg) ', 'anyOf': [{'type': 'object', 'properties': {'n_features_to_select': {'enum': [None]}}}, {'type': 'object', 'properties': {'n_features_to_select': {'type': 'number', 'maximum': 0, 'exclusiveMaximum': True}}}, {'type': 'object', 'properties': {'n_features_to_select': {'type': 'integer'}}}, {'type': 'object', 'properties': {'n_features_to_select': {'type': 'number', 'maximum': 1.0}}}]},
           {'description': "From /feature_selection/_rfe.py:RFE:_fit, Exception: raise ValueError('Step must be >0') ", 'allOf': [{'anyOf': [{'type': 'object', 'properties': {'step': {'type': 'number', 'maximum': 0.0}}}, {'type': 'object', 'properties': {'step': {'type': 'number', 'minimum': 1.0}}}, {'XXX TODO XXX': 'int(max(1, self.step * X.shape[1])) > 0'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'step': {'type': 'number', 'minimum': 0.0, 'exclusiveMinimum': True}}}, {'type': 'object', 'properties': {'step': {'type': 'number', 'maximum': 1.0, 'exclusiveMaximum': True}}}]}, {'XXX TODO XXX': 'int(self.step) > 0'}]}]}]}
