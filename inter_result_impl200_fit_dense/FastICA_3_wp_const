{'allOf': [{'type': 'object',
            'required': ['n_components', 'algorithm', 'whiten', 'fun', 'fun_args', 'max_iter', 'tol', 'w_init', 'random_state'],
            'relevantToOptimizer': ['algorithm', 'whiten', 'fun', 'tol'],
            'additionalProperties': False,
            'properties': {'n_components': {'anyOf': [{'type': 'integer', 'minimumForOptimizer': 2, 'maximumForOptimizer': 256, 'distribution': 'uniform'}, {'enum': [None]}], 'default': None, 'description': 'Number of components to use'},
                           'algorithm': {'enum': ['parallel', 'deflation'], 'default': 'parallel', 'description': 'Apply parallel or deflational algorithm for FastICA.'},
                           'whiten': {'type': 'boolean', 'default': True, 'description': 'If whiten is false, the data is already considered to be whitened, and no whitening is performed.'},
                           'fun': {'XXX TODO XXX': "string or function, optional. Default: 'logcosh'", 'description': 'The functional form of the G function used in the approximation to neg-entropy', 'enum': ['cube', 'exp', 'logcosh'], 'default': 'logcosh'},
                           'fun_args': {'XXX TODO XXX': 'dictionary, optional', 'description': 'Arguments to send to the functional form', 'enum': [None], 'default': None},
                           'max_iter': {'type': 'integer', 'minimumForOptimizer': 10, 'maximumForOptimizer': 1000, 'distribution': 'uniform', 'default': 200, 'description': 'Maximum number of iterations during fit.'},
                           'tol': {'type': 'number', 'minimumForOptimizer': 1e-08, 'maximumForOptimizer': 0.01, 'distribution': 'loguniform', 'default': 0.0001, 'description': 'Tolerance on update at each iteration.'},
                           'w_init': {'XXX TODO XXX': 'None of an (n_components, n_components) ndarray', 'description': 'The mixing matrix to be used to initialize the algorithm.', 'enum': [None], 'default': None},
                           'random_state': {'anyOf': [{'type': 'integer'}, {'laleType': 'numpy.random.RandomState'}, {'enum': [None]}], 'default': None, 'description': 'If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by `np.random`.'}}},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in FLOAT_DTYPES'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in FLOAT_DTYPES'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in FLOAT_DTYPES'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in FLOAT_DTYPES'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ", 'type': 'object', 'laleNot': 'X/isSparse'},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, copy=self.whiten, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=np.float64, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=np.float64, copy=self.whiten, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], copy=self.whiten, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=dtype[0], copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=dtype[0], copy=self.whiten, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=FLOAT_DTYPES).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, copy=self.whiten, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=np.float64, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=np.float64, copy=self.whiten, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, None, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, None, copy=self.whiten, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, None, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, None, copy=self.whiten, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], copy=self.whiten, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=dtype[0], copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=dtype[0], copy=self.whiten, True, True).fit)'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(X, False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=FLOAT_DTYPES).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in FLOAT_DTYPES'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in FLOAT_DTYPES'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in FLOAT_DTYPES'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in FLOAT_DTYPES'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, copy=self.whiten, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 2'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=np.float64, copy=self.whiten, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 2'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], copy=self.whiten, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=dtype[0], copy=self.whiten, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 2'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES)) >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=FLOAT_DTYPES)) >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, copy=self.whiten, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 2'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=np.float64, copy=self.whiten, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 2'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, None, copy=self.whiten, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 2'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, None, copy=self.whiten, True, True)) >= 2'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], copy=self.whiten, True, True)) >= 2'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 2'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=dtype[0], copy=self.whiten, True, True)) >= 2'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 2'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X.sparse.to_coo(), False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES)) >= 2'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(X, False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True)) >= 2'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64)) >= 2"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False)) >= 2"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64)) >= 2'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=FLOAT_DTYPES)) >= 2'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=np.float64, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=dtype[0], copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=np.float64, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=np.float64, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, None, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, None, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=dtype[0], copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=dtype[0], copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X.sparse.to_coo(), False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_ensure_sparse_format(X, False, dtype=FLOAT_DTYPES, copy=self.whiten, True, True).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_random_state, Exception: raise ValueError(     '%r cannot be used to seed a numpy.random.RandomState instance' % seed) ", 'anyOf': [{'type': 'object', 'properties': {'random_state': {'enum': [None]}}}, {'XXX TODO XXX': 'self.random_state is np.random'}, {'XXX TODO XXX': 'isinstance(self.random_state, np.random.RandomState)'}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'anyOf': [{'type': 'object', 'properties': {'whiten': {'enum': [True]}}}, {'allOf': [{'XXX TODO XXX': 'isinstance(X, np.matrix)'}, {'anyOf': [{'XXX TODO XXX': 'isinstance(X, np.ndarray)'}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'whiten': {'enum': [True]}}},
                      {'allOf': [{'XXX TODO XXX': 'isinstance(X, np.matrix)'}, {'anyOf': [{'XXX TODO XXX': 'isinstance(X, np.ndarray)'}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for np.float64 in list(X.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((False for np.float64 in list(X.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((False for np.float64 in list(X.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((False for np.float64 in list(X.dtypes)))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'whiten': {'enum': [True]}}},
                      {'allOf': [{'XXX TODO XXX': 'isinstance(X, np.matrix)'}, {'anyOf': [{'XXX TODO XXX': 'isinstance(X, np.ndarray)'}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).fit)"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'whiten': {'enum': [True]}}}, {'allOf': [{'XXX TODO XXX': 'isinstance(X, np.matrix)'}, {'anyOf': [{'XXX TODO XXX': 'isinstance(X, np.ndarray)'}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'whiten': {'enum': [True]}}},
                      {'allOf': [{'XXX TODO XXX': 'isinstance(X, np.matrix)'}, {'anyOf': [{'XXX TODO XXX': 'isinstance(X, np.ndarray)'}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'whiten': {'enum': [True]}}},
                      {'allOf': [{'XXX TODO XXX': 'isinstance(X, np.matrix)'}, {'anyOf': [{'XXX TODO XXX': 'isinstance(X, np.ndarray)'}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'whiten': {'enum': [True]}}},
                      {'allOf': [{'XXX TODO XXX': 'isinstance(X, np.matrix)'}, {'anyOf': [{'XXX TODO XXX': 'isinstance(X, np.ndarray)'}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                            {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc', 'coo'], dtype=np.float64, False, True, True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
           {'description': "From /decomposition/_fastica.py:FastICA:_fit, Exception: raise ValueError('alpha must be in [1,2]') ", 'allOf': [{'XXX TODO XXX': "1 <= ({} if self.fun_args is None else self.fun_args).get('alpha', 1.0)"}, {'XXX TODO XXX': "({} if self.fun_args is None else self.fun_args).get('alpha', 1.0) <= 2"}]},
           {'description': 'From /decomposition/_fastica.py:FastICA:_fit, Exception: raise exc(     "Unknown function %r; should be one of \'logcosh\', \'exp\', \'cube\' or callable"      % self.fun) ', 'anyOf': [{'type': 'object', 'properties': {'fun': {'enum': ['logcosh']}}}, {'type': 'object', 'properties': {'fun': {'enum': ['exp']}}}, {'type': 'object', 'properties': {'fun': {'enum': ['cube']}}}, {'XXX TODO XXX': 'callable(self.fun)'}]},
           {'description': "From /decomposition/_fastica.py:FastICA:_fit, Exception: raise ValueError('w_init has invalid shape -- should be %(shape)s' % {     'shape': (n_components, n_components)}) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'whiten': {'enum': [True]}}}, {'type': 'object', 'properties': {'n_components': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'allOf': [{'XXX TODO XXX': 'min(X.shape[0], X.shape[1]) <= X.shape[0]'}, {'XXX TODO XXX': 'min(X.shape[0], X.shape[1]) <= X.shape[1]'}]}, {'type': 'object', 'properties': {'w_init': {'enum': [None]}}}, {'XXX TODO XXX': 'np.asarray(self.w_init).shape == [min(X.shape[0], X.shape[1]), min(X.shape[0], X.shape[1])]'}]}, {'anyOf': [{'XXX TODO XXX': 'min(X.shape[0], X.shape[1]) > X.shape[0]'}, {'XXX TODO XXX': 'min(X.shape[0], X.shape[1]) > X.shape[1]'}, {'type': 'object', 'properties': {'w_init': {'enum': [None]}}}, {'XXX TODO XXX': 'np.asarray(self.w_init).shape == [min(X.shape[0], X.shape[1]), min(X.shape[0], X.shape[1])]'}]}]}]},
                      {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'whiten': {'enum': [False]}}}, {'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'n_components': {'not': {'enum': [None]}}}}, {'allOf': [{'anyOf': [{'allOf': [{'XXX TODO XXX': 'min(X.shape[0], X.shape[1]) <= X.shape[0]'}, {'XXX TODO XXX': 'min(X.shape[0], X.shape[1]) <= X.shape[1]'}]}, {'type': 'object', 'properties': {'w_init': {'enum': [None]}}}, {'XXX TODO XXX': 'np.asarray(self.w_init).shape == [min(X.shape[0], X.shape[1]), min(X.shape[0], X.shape[1])]'}]}, {'anyOf': [{'XXX TODO XXX': 'min(X.shape[0], X.shape[1]) > X.shape[0]'}, {'XXX TODO XXX': 'min(X.shape[0], X.shape[1]) > X.shape[1]'}, {'type': 'object', 'properties': {'w_init': {'enum': [None]}}}, {'XXX TODO XXX': 'np.asarray(self.w_init).shape == [min(X.shape[0], X.shape[1]), min(X.shape[0], X.shape[1])]'}]}]}]},
                                            {'anyOf': [{'type': 'object', 'properties': {'n_components': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'allOf': [{'type': 'object', 'properties': {'n_components': {'laleMaximum': 'X/maxItems'}}}, {'type': 'object', 'properties': {'n_components': {'laleMaximum': 'X/items/maxItems'}}}]}, {'type': 'object', 'properties': {'w_init': {'enum': [None]}}}, {'XXX TODO XXX': 'np.asarray(self.w_init).shape == [min(X.shape[0], X.shape[1]), min(X.shape[0], X.shape[1])]'}]}, {'anyOf': [{'type': 'object', 'properties': {'n_components': {'laleMinimum': 'X/maxItems'}}}, {'type': 'object', 'properties': {'n_components': {'laleMinimum': 'X/items/maxItems'}}}, {'type': 'object', 'properties': {'w_init': {'enum': [None]}}}, {'XXX TODO XXX': 'np.asarray(self.w_init).shape == [self.n_components, self.n_components]'}]}]}]}]}]}]},
           {'description': "From /decomposition/_fastica.py:FastICA:_fit, Exception: raise ValueError('Invalid algorithm: must be either `parallel` or `deflation`.'     ) ", 'anyOf': [{'type': 'object', 'properties': {'algorithm': {'enum': ['parallel']}}}, {'type': 'object', 'properties': {'algorithm': {'enum': ['deflation']}}}]}]}
