{'allOf': [{'type': 'object', 'required': ['copy', 'with_mean', 'with_std'], 'relevantToOptimizer': ['copy', 'with_mean', 'with_std'], 'additionalProperties': False, 'properties': {'copy': {'type': 'boolean', 'default': True, 'description': 'If False, try to avoid a copy and do inplace scaling instead.'}, 'with_mean': {'type': 'boolean', 'default': True, 'description': 'If True, center the data before scaling.'}, 'with_std': {'type': 'boolean', 'default': True, 'description': 'If True, scale the data to unit variance (or equivalently, unit standard deviation).'}}},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=FLOAT_DTYPES).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).fit)'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=np.float64).fit)'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, None).fit)'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, None).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                     {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=dtype[0]).fit)'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).fit)'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True), 'fit')"}, {'XXX TODO XXX': "not callable(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True).fit)"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).fit)'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'fit')"}, {'XXX TODO XXX': 'not callable(np.asarray(X, None, dtype=FLOAT_DTYPES).fit)'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'X.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(X.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "X.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(X, 'dtype')"}, {'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "not hasattr(X.dtype, 'kind')"}, {'XXX TODO XXX': "X.dtype.kind != 'c'"}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in FLOAT_DTYPES'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in FLOAT_DTYPES'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in FLOAT_DTYPES'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in FLOAT_DTYPES'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                                                   {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                                                     {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                                                {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                                                     {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                                                     {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                                             {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=np.float64).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind != 'c'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, None).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, None).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                                               {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                                               {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=dtype[0]).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind != 'c'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False), 'dtype')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype is None"}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind != 'c'"}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES), 'dtype')"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).dtype is None'}, {'XXX TODO XXX': "not hasattr(np.asarray(X, None, dtype=FLOAT_DTYPES).dtype, 'kind')"}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind != 'c'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind != 'O'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None).kind == 'O'"}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'type': 'string'}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'type': 'string'}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}, {'anyOf': [{'type': 'object', 'properties': {'self': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': "X.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in X.dtypes])) <= 1'}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in FLOAT_DTYPES'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in FLOAT_DTYPES'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'dtypes')"},
                                                       {'XXX TODO XXX': "not hasattr(X.dtypes, '__array__')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) not in FLOAT_DTYPES'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(X.dtypes)) in FLOAT_DTYPES'}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'all((isinstance(FLOAT_DTYPES, np.dtype) for FLOAT_DTYPES in list(X.dtypes)))'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim < 3'}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim < 3'}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim < 3'}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim < 3'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).ndim < 3'}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).ndim < 3'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).ndim < 3'}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=FLOAT_DTYPES)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=np.float64)) >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=np.float64)) >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, force_all_finite='allow-nan', True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, None)) >= 1'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, force_all_finite='allow-nan', True)) >= 1"}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, None)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True)) >= 1"}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0]).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=dtype[0])) >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES)) >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_num_samples(_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True)) >= 1"}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64)) >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': '_num_samples(np.asarray(X, None, dtype=FLOAT_DTYPES)) >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d feature(s) (shape=%s) while a minimum of %d is required%s.'      % (n_features, array.shape, ensure_min_features, context)) ",
            'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(X, 'dtype', None), 'kind')"},
                                 {'allOf': [{'XXX TODO XXX': "hasattr(X, 'dtypes')"}, {'XXX TODO XXX': "hasattr(X.dtypes, '__array__')"}]},
                                 {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}},
                                                       {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                             {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=np.float64, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                            {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is None"},
                                                                                                   {'XXX TODO XXX': "getattr(X, 'dtype', None) not in FLOAT_DTYPES"},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], None, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], None, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, None).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, None).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(X, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(X, 'dtype', None) in FLOAT_DTYPES"}]},
                                                                                                   {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                                         {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                                              {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=dtype[0], False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                                                    {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                                               {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(dtype[0], casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                                          {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=dtype[0]).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]},
                                                                  {'anyOf': [{'XXX TODO XXX': 'isinstance(FLOAT_DTYPES, [list, tuple])'},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'X.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X.sparse.to_coo(), accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X.sparse.to_coo())'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}},
                                                                                                                                               {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"},
                                                                                                                                               {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X.sparse.to_coo(), None, dtype=FLOAT_DTYPES).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(X, 'sparse')"}, {'XXX TODO XXX': 'X.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "_ensure_sparse_format(X, accept_sparse=['csr', 'csc'], dtype=FLOAT_DTYPES, False, force_all_finite='allow-nan', True).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(X)'},
                                                                                                                         {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': [None]}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).astype(np.float64).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(X, None).astype(FLOAT_DTYPES, casting='unsafe', False).ndim != 2"}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]},
                                                                                                                                    {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': [None]}}}}, {'XXX TODO XXX': "np.dtype(FLOAT_DTYPES).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'type': 'string'}}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'not': {'enum': ['numeric']}}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).astype(np.float64).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}, {'anyOf': [{'allOf': [{'type': 'object', 'properties': {'FLOAT_DTYPES': {'type': 'string'}}}, {'type': 'object', 'properties': {'FLOAT_DTYPES': {'enum': ['numeric']}}}, {'XXX TODO XXX': "np.asarray(X, None, dtype=FLOAT_DTYPES).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': 'np.asarray(X, None, dtype=FLOAT_DTYPES).ndim != 2'}, {'XXX TODO XXX': 'array.shape[1] >= 1'}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /base.py:BaseEstimator:_check_n_features, Exception: raise ValueError(     f'X has {n_features} features, but {self.__class__.__name__} is expecting {self.n_features_in_} features as input.'     ) ", 'anyOf': [{'XXX TODO XXX': "not hasattr(self, 'n_samples_seen_')"}, {'XXX TODO XXX': "not hasattr(self, 'n_features_in_')"}, {'XXX TODO XXX': 'X.shape[1] == self.n_features_in_'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                            {'XXX TODO XXX': 'X.dtype in [np.float32, np.float64]'},
                                            {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                            {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': 'X.dtype not in [np.float32, np.float64]'}]},
                                            {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                            {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is not None'},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                              {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                              {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', None).fit)"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, None, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', None).fit)"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'},
                                                                                                              {'XXX TODO XXX': "X.dtype != 'numeric'"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                      {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                      {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=X.dtype, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=X.dtype, False, True, True).fit)'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                                                                                                                                                                                      {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).fit)"}]}]}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=X.dtype, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=X.dtype, False, True, True).fit)'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                                                                                                                                                                                      {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=X.dtype).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=X.dtype).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=X.dtype), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=X.dtype).fit)"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'},
                                                                                                              {'XXX TODO XXX': "X.dtype != 'numeric'"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).fit)"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True).fit)'}]},
                                                                                                                                               {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=np.float64).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=np.float64).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=np.float64).fit)"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"},
                                                                                                                                                          {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in X.dtype"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True).fit)'}]},
                                                                                                                                                                                           {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', None).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', None).fit)"}]}]}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, None, False, True, True).fit)'}]},
                                                                                                                                                                                           {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', None).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', None).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', None).fit)"}]}]}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in X.dtype"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                                                                           {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                                            {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]},
                                                                                                                                                                                                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                                                                                                           {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'},
                                                                                                                                                                                                                            {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"},
                                                                                                                                                                                                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=X.dtype, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=X.dtype, False, True, True).fit)'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                                                                                                                                                                                      {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64).fit)"}]},
                                                                                                                                                                                                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).fit)"}]}]}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=X.dtype, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=X.dtype, False, True, True).fit)'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                                                                                                                                                                                      {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).fit)"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=X.dtype).astype(np.float64), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=X.dtype).astype(np.float64).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=X.dtype), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=X.dtype).fit)"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'sample_weight.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(sample_weight, 'dtype')"}, {'XXX TODO XXX': 'sample_weight.dtype is None'}, {'XXX TODO XXX': "not hasattr(sample_weight.dtype, 'kind')"}, {'XXX TODO XXX': "sample_weight.dtype.kind != 'c'"}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ", 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'type': 'object', 'laleNot': 'X/isSparse'}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Pandas DataFrame with mixed sparse extension arrays generated a sparse matrix with object dtype which can not be converted to a scipy sparse matrix.Sparse extension arrays should all have the same numeric type.'     ) ",
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                            {'XXX TODO XXX': 'X.dtype in [np.float32, np.float64]'},
                                            {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                            {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': 'X.dtype not in [np.float32, np.float64]'}]},
                                            {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                            {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is not None'},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]},
                                                                             {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None).kind != 'O'"}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None).kind == 'O'"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in X.dtype"}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in X.dtype"}]}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'}, {'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype != np.dtype('object')"}, {'XXX TODO XXX': 'len(set([dt.subtype.name for dt in sample_weight.dtypes])) <= 1'}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ', 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}]}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError(     "Unable to convert array of bytes/strings into decimal numbers with dtype=\'numeric\'"     ) from e ',
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': 'X.dtype not in [np.float32, np.float64]'}]},
                      {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                      {'XXX TODO XXX': 'X.dtype is None'},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(sample_weight.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(X.dtype, np.dtype) for X.dtype in list(sample_weight.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(sample_weight.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(sample_weight.dtypes)) not in X.dtype'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(sample_weight.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(sample_weight.dtypes)) in X.dtype'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(X.dtype, np.dtype) for X.dtype in list(sample_weight.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                 {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'dtypes')"},
                                                                  {'XXX TODO XXX': "not hasattr(sample_weight.dtypes, '__array__')"},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'not all((isinstance(X.dtype, np.dtype) for X.dtype in list(sample_weight.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.result_type(*list(sample_weight.dtypes)) is None'}, {'XXX TODO XXX': 'np.result_type(*list(sample_weight.dtypes)) not in X.dtype'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': 'np.result_type(*list(sample_weight.dtypes)) is not None'}, {'XXX TODO XXX': 'np.result_type(*list(sample_weight.dtypes)) in X.dtype'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': 'all((isinstance(X.dtype, np.dtype) for X.dtype in list(sample_weight.dtypes)))'},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in X.dtype"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in X.dtype"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}]}]}]},
                                                                             {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in X.dtype"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in X.dtype"}]},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                            {'XXX TODO XXX': 'X.dtype in [np.float32, np.float64]'},
                                            {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                            {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"}, {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': 'X.dtype not in [np.float32, np.float64]'}]},
                                            {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                            {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is not None'},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).ndim < 3"}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'},
                                                                                                              {'XXX TODO XXX': "X.dtype != 'numeric'"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).ndim < 3"}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).ndim < 3"}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'},
                                                                                                              {'XXX TODO XXX': "X.dtype != 'numeric'"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).ndim < 3"}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).ndim < 3"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"},
                                                                                                                                                          {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in X.dtype"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).ndim < 3"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).ndim < 3"}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in X.dtype"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                                                {'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).ndim < 3"}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).ndim < 3"}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).astype(np.float64).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).ndim < 3"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                            {'XXX TODO XXX': 'X.dtype in [np.float32, np.float64]'},
                                            {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                            {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                  {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': 'X.dtype not in [np.float32, np.float64]'}]},
                                            {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                            {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                            {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is not None'},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"},
                                                                                                              {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', None)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', None)) >= 1"}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]}]}]},
                                                       {'anyOf': [{'XXX TODO XXX': 'X.dtype is None'},
                                                                  {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'},
                                                                                                              {'XXX TODO XXX': "X.dtype != 'numeric'"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True)) >= 1'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=X.dtype, False, True, True)) >= 1'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype)) >= 1"}]}]}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=X.dtype, False, True, True)) >= 1'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=X.dtype).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=X.dtype)) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]}]},
                                                                             {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                                                        {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                                                        {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'},
                                                                                                              {'XXX TODO XXX': "X.dtype != 'numeric'"},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                    {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                    {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=np.float64)) >= 1"}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=np.float64, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=np.float64).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=np.float64).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=np.float64)) >= 1"}]}]}]}]}]}]}]},
                                                                                                   {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}]},
                                                                                                              {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"},
                                                                                                                                                          {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in X.dtype"},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', None).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', None)) >= 1"}]}]}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', None).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', None)) >= 1"}]}]}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in X.dtype"}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                                                {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]},
                                                                                                                                                                                           {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                                                                                                                                                     {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True)) >= 1'}]},
                                                                                                                                                                                           {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                                      {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                                                 {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0]).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]}]}]},
                                                                                                                         {'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, [list, tuple])'},
                                                                                                                                    {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                                                                          {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=X.dtype, False, True, True)) >= 1'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(X.dtype, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=X.dtype)) >= 1"}]}]}]}]}]}]}]},
                                                                                                                                               {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                                                                          {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=X.dtype, False, True, True)) >= 1'}]},
                                                                                                                                                                     {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'},
                                                                                                                                                                                {'allOf': [{'anyOf': [{'XXX TODO XXX': 'X.dtype is None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind not in 'iu'"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(X.dtype, casting='unsafe', False)) >= 1"}]}]}]},
                                                                                                                                                                                           {'anyOf': [{'allOf': [{'XXX TODO XXX': 'X.dtype is not None'}, {'XXX TODO XXX': "np.dtype(X.dtype).kind in 'iu'"}]}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype != 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind not in 'OUSV'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=X.dtype).astype(np.float64)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'isinstance(X.dtype, str)'}, {'XXX TODO XXX': "X.dtype == 'numeric'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=X.dtype).dtype.kind in 'OUSV'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=X.dtype)) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'XXX TODO XXX': "not hasattr(X, 'fit')"}, {'XXX TODO XXX': 'not callable(X.fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': "hasattr(X, '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ", 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ', 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('Sample weights must be 1D array or scalar') ", 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'XXX TODO XXX': "check_array(sample_weight, False, False, dtype=[np.float64, np.float32], order='C', False).ndim == 1"}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('sample_weight.shape == {}, expected {}!'.format(     sample_weight.shape, (n_samples,))) ", 'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'XXX TODO XXX': "check_array(sample_weight, False, False, dtype=[np.float64, np.float32], order='C', False).shape == [_num_samples(X)]"}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [True]}}},
                                 {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'},
                                 {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtypes')"}, {'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"},
                                                                             {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtypes')"}, {'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) is None"},
                                                                             {'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) not in [np.float64, np.float32]"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, None, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', None).fit)"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, None, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', None).fit)"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) in [np.float64, np.float32]"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"},
                                                                                                   {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [True]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                             {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                        {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                             {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"},
                                                                             {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', None).fit)"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, None, False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, None, False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', None), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', None).fit)"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"},
                                                                                                   {'XXX TODO XXX': 'sample_weight.ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True).fit)'}]},
                                                                                                              {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).fit)"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True), 'fit')"}, {'XXX TODO XXX': 'not callable(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True).fit)'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).fit)"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "not hasattr(np.asarray(sample_weight, order='C', dtype=dtype[0]), 'fit')"}, {'XXX TODO XXX': "not callable(np.asarray(sample_weight, order='C', dtype=dtype[0]).fit)"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [True]}}},
                                 {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'},
                                 {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo().dtype.kind != 'c'"}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).dtype is None'}, {'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).dtype, 'kind')"}, {'XXX TODO XXX': "_check_sample_weight(sample_weight, X, dtype=X.dtype).dtype.kind != 'c'"}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [True]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'sample_weight.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(sample_weight, 'dtype')"}, {'XXX TODO XXX': 'sample_weight.dtype is None'}, {'XXX TODO XXX': "not hasattr(sample_weight.dtype, 'kind')"}, {'XXX TODO XXX': "sample_weight.dtype.kind != 'c'"}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ", 'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError('Found array with dim %d. %s expected <= 2.' % (array.ndim,     estimator_name)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [True]}}},
                                 {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'},
                                 {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtypes')"}, {'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtypes')"}, {'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) not in [np.float64, np.float32]"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', None).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', None).ndim < 3"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) in [np.float64, np.float32]"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [True]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', None).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', None).ndim < 3"}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0]).ndim < 3"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False).ndim < 3"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "np.asarray(sample_weight, order='C', dtype=dtype[0]).ndim < 3"}]}]}]}]}]}]}]}]}]}]},
           {'description': "From /utils/validation.py:None:check_array, Exception: raise ValueError(     'Found array with %d sample(s) (shape=%s) while a minimum of %d is required%s.'      % (n_samples, array.shape, ensure_min_samples, context)) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [True]}}},
                                 {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'},
                                 {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtypes')"}, {'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtypes')"}, {'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) is None"},
                                                                             {'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) not in [np.float64, np.float32]"},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', None)) >= 1"}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', None)) >= 1"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype', None) in [np.float64, np.float32]"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"},
                                                                                                   {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'},
                                                                                                   {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(_check_sample_weight(sample_weight, X, dtype=X.dtype), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [True]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': "not hasattr(getattr(sample_weight, 'dtype', None), 'kind')"},
                                                       {'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'dtypes')"}, {'XXX TODO XXX': "hasattr(sample_weight.dtypes, '__array__')"}]},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) not in [np.float64, np.float32]"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', None)) >= 1"}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, None, False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', None)) >= 1"}]}]}]}]}]},
                                                                  {'anyOf': [{'allOf': [{'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) is not None"}, {'XXX TODO XXX': "getattr(sample_weight, 'dtype', None) in [np.float64, np.float32]"}]},
                                                                             {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight.sparse.to_coo(), False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight.sparse.to_coo(), order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]},
                                                                                        {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'allOf': [{'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': '_num_samples(_ensure_sparse_format(sample_weight, False, dtype=dtype[0], False, True, True)) >= 1'}]}, {'anyOf': [{'XXX TODO XXX': 'sp.issparse(sample_weight)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'dtype[0] is None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind not in 'iu'"}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C').astype(dtype[0], casting='unsafe', False)) >= 1"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': 'dtype[0] is not None'}, {'XXX TODO XXX': "np.dtype(dtype[0]).kind in 'iu'"}]}, {'XXX TODO XXX': "_num_samples(np.asarray(sample_weight, order='C', dtype=dtype[0])) >= 1"}]}]}]}]}]}]}]}]}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'XXX TODO XXX': "not hasattr(X, 'fit')"}, {'XXX TODO XXX': 'not callable(X.fit)'}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': "hasattr(X, '__array__')"}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ", 'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ', 'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('Sample weights must be 1D array or scalar') ", 'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'}, {'XXX TODO XXX': "check_array(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, False, dtype=[np.float64, np.float32], order='C', False).ndim == 1"}]}, {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'XXX TODO XXX': "check_array(sample_weight, False, False, dtype=[np.float64, np.float32], order='C', False).ndim == 1"}]}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('sample_weight.shape == {}, expected {}!'.format(     sample_weight.shape, (n_samples,))) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'}, {'XXX TODO XXX': "check_array(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, False, dtype=[np.float64, np.float32], order='C', False).shape == [_num_samples(X)]"}]}, {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [True]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'XXX TODO XXX': "check_array(sample_weight, False, False, dtype=[np.float64, np.float32], order='C', False).shape == [_num_samples(X)]"}]}]},
           {'description': 'From /utils/sparsefuncs.py:None:_raise_typeerror, Exception: raise TypeError(err) ', 'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "hasattr(self, 'scale_')"}, {'XXX TODO XXX': 'isinstance(X, sp.csr_matrix)'}, {'XXX TODO XXX': 'isinstance(X, sp.csc_matrix)'}]},
           {'description': 'From /utils/validation.py:None:_ensure_no_complex_data, Exception: raise ValueError("""Complex data not supported {} """.format(array)) ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [False]}}},
                                 {'XXX TODO XXX': "not hasattr(self, 'scale_')"},
                                 {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'},
                                 {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'},
                                 {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo().dtype.kind != 'c'"}]},
                                            {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'dtype')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).dtype is None'}, {'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype).dtype, 'kind')"}, {'XXX TODO XXX': "_check_sample_weight(sample_weight, X, dtype=X.dtype).dtype.kind != 'c'"}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}},
                                 {'type': 'object', 'laleNot': 'X/isSparse'},
                                 {'type': 'object', 'properties': {'with_std': {'enum': [False]}}},
                                 {'XXX TODO XXX': "not hasattr(self, 'scale_')"},
                                 {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo(), 'dtype')"}, {'XXX TODO XXX': 'sample_weight.sparse.to_coo().dtype is None'}, {'XXX TODO XXX': "not hasattr(sample_weight.sparse.to_coo().dtype, 'kind')"}, {'XXX TODO XXX': "sample_weight.sparse.to_coo().dtype.kind != 'c'"}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'XXX TODO XXX': "not hasattr(sample_weight, 'dtype')"}, {'XXX TODO XXX': 'sample_weight.dtype is None'}, {'XXX TODO XXX': "not hasattr(sample_weight.dtype, 'kind')"}, {'XXX TODO XXX': "sample_weight.dtype.kind != 'c'"}]}]}]}]},
           {'description': "From /utils/validation.py:None:_ensure_sparse_format, Exception: raise TypeError(     'A sparse matrix was passed, but dense data is required. Use X.toarray() to convert to a dense numpy array.'     ) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'}, {'type': 'object', 'laleNot': 'X/isSparse'}]}, {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'type': 'object', 'laleNot': 'X/isSparse'}]}]},
           {'description': 'From /utils/validation.py:None:check_array, Exception: raise ValueError("""Complex data not supported {} """.format(array)     ) from complex_warning ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype).sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(_check_sample_weight(sample_weight, X, dtype=X.dtype), 'sparse')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype).ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(_check_sample_weight(sample_weight, X, dtype=X.dtype))'}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim <= 1'}, {'XXX TODO XXX': 'sp.issparse(sample_weight.sparse.to_coo())'}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "hasattr(sample_weight, 'sparse')"}, {'XXX TODO XXX': 'sample_weight.ndim > 1'}]}, {'XXX TODO XXX': 'sp.issparse(sample_weight)'}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': "not hasattr(X, 'fit')"}, {'XXX TODO XXX': 'not callable(X.fit)'}]}, {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'XXX TODO XXX': "not hasattr(X, 'fit')"}, {'XXX TODO XXX': 'not callable(X.fit)'}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) ', 'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': "hasattr(X, '__array__')"}]}, {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': "hasattr(X, '__array__')"}]}]},
           {'description': "From /utils/validation.py:None:_num_samples, Exception: raise TypeError(     'Singleton array %r cannot be considered a valid collection.' % x) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is None'}, {'XXX TODO XXX': 'len(np.asarray(X).shape) != 0'}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is None'}, {'XXX TODO XXX': 'len(X.shape) != 0'}]}]}]}]},
           {'description': 'From /utils/validation.py:None:_num_samples, Exception: raise TypeError(message) from type_error ',
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "hasattr(X, '__len__')"}, {'XXX TODO XXX': "hasattr(X, 'shape')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': "not hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(np.asarray(X), 'shape')"}, {'XXX TODO XXX': 'np.asarray(X).shape is not None'}]}]}, {'anyOf': [{'XXX TODO XXX': "hasattr(X, '__array__')"}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}]}]}, {'anyOf': [{'allOf': [{'XXX TODO XXX': "not hasattr(X, '__len__')"}, {'XXX TODO XXX': "not hasattr(X, 'shape')"}]}, {'allOf': [{'XXX TODO XXX': "hasattr(X, 'shape')"}, {'XXX TODO XXX': 'X.shape is not None'}]}]}, {'XXX TODO XXX': 'isinstance(x.shape[0], numbers.Integral)'}]}]}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('Sample weights must be 1D array or scalar') ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'}, {'XXX TODO XXX': "check_array(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, False, dtype=[np.float64, np.float32], order='C', False).ndim == 1"}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'XXX TODO XXX': "check_array(sample_weight, False, False, dtype=[np.float64, np.float32], order='C', False).ndim == 1"}]}]},
           {'description': "From /utils/validation.py:None:_check_sample_weight, Exception: raise ValueError('sample_weight.shape == {}, expected {}!'.format(     sample_weight.shape, (n_samples,))) ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': '_check_sample_weight(sample_weight, X, dtype=X.dtype) is None'}, {'XXX TODO XXX': 'isinstance(_check_sample_weight(sample_weight, X, dtype=X.dtype), numbers.Number)'}, {'XXX TODO XXX': "check_array(_check_sample_weight(sample_weight, X, dtype=X.dtype), False, False, dtype=[np.float64, np.float32], order='C', False).shape == [_num_samples(X)]"}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}}, {'type': 'object', 'properties': {'sample_weight': {'type': 'number'}}}, {'XXX TODO XXX': "check_array(sample_weight, False, False, dtype=[np.float64, np.float32], order='C', False).shape == [_num_samples(X)]"}]}]},
           {'description': 'From /utils/sparsefuncs.py:None:_raise_typeerror, Exception: raise TypeError(err) ', 'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': 'isinstance(X, [sp.csr_matrix, sp.csc_matrix])'}]},
           {'description': "From /utils/sparsefuncs.py:None:incr_mean_variance_axis, Exception: raise ValueError('last_mean, last_var, last_n do not have the same shapes.') ",
            'allOf': [{'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'enum': [None]}}},
                                 {'XXX TODO XXX': "not hasattr(self, 'n_samples_seen_')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.size(self.n_samples_seen_) != 1'},
                                                       {'type': 'object', 'laleNot': 'X/isSparse'},
                                                       {'type': 'object', 'properties': {'with_std': {'enum': [False]}}},
                                                       {'XXX TODO XXX': "not hasattr(self, 'scale_')"},
                                                       {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.size(np.repeat(self.n_samples_seen_, X.shape[1]).astype(np.int64 if _check_sample_weight(sample_weight, X, dtype=X.dtype) is None else X.dtype, False)) != 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(np.full(self.mean_.shape, np.repeat(self.n_samples_seen_, X.shape[1]).astype(np.int64 if _check_sample_weight(sample_weight, X, dtype=X.dtype) is None else X.dtype, False), dtype=self.mean_.dtype))'}]}]}, {'anyOf': [{'XXX TODO XXX': 'np.size(np.repeat(self.n_samples_seen_, X.shape[1]).astype(np.int64 if _check_sample_weight(sample_weight, X, dtype=X.dtype) is None else X.dtype, False)) == 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(np.repeat(self.n_samples_seen_, X.shape[1]).astype(np.int64 if _check_sample_weight(sample_weight, X, dtype=X.dtype) is None else X.dtype, False))'}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'np.size(self.n_samples_seen_) == 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.size(self.n_samples_seen_) != 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(np.full(self.mean_.shape, self.n_samples_seen_, dtype=self.mean_.dtype))'}]}]}, {'anyOf': [{'XXX TODO XXX': 'np.size(self.n_samples_seen_) == 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(self.n_samples_seen_)'}]}]}]}]}]}]},
                      {'anyOf': [{'type': 'object', 'properties': {'sample_weight': {'not': {'enum': [None]}}}},
                                 {'XXX TODO XXX': "not hasattr(self, 'n_samples_seen_')"},
                                 {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.size(self.n_samples_seen_) != 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.size(np.repeat(self.n_samples_seen_, X.shape[1]).astype(np.int64 if sample_weight is None else X.dtype, False)) != 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(np.full(self.mean_.shape, np.repeat(self.n_samples_seen_, X.shape[1]).astype(np.int64 if sample_weight is None else X.dtype, False), dtype=self.mean_.dtype))'}]}]}, {'anyOf': [{'XXX TODO XXX': 'np.size(np.repeat(self.n_samples_seen_, X.shape[1]).astype(np.int64 if sample_weight is None else X.dtype, False)) == 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(np.repeat(self.n_samples_seen_, X.shape[1]).astype(np.int64 if sample_weight is None else X.dtype, False))'}]}]}]}]},
                                            {'anyOf': [{'XXX TODO XXX': 'np.size(self.n_samples_seen_) == 1'}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.size(self.n_samples_seen_) != 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(np.full(self.mean_.shape, self.n_samples_seen_, dtype=self.mean_.dtype))'}]}]}, {'anyOf': [{'XXX TODO XXX': 'np.size(self.n_samples_seen_) == 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(self.n_samples_seen_)'}]}]}]}]}]}]},
                      {'anyOf': [{'XXX TODO XXX': "hasattr(self, 'n_samples_seen_')"}, {'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'allOf': [{'anyOf': [{'XXX TODO XXX': 'np.size(np.zeros(X.shape[1], dtype=np.int64 if _check_sample_weight(sample_weight, X, dtype=X.dtype) is None else X.dtype)) != 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(np.full(self.mean_.shape, np.zeros(X.shape[1], dtype=np.int64 if _check_sample_weight(sample_weight, X, dtype=X.dtype) is None else X.dtype), dtype=self.mean_.dtype))'}]}]}, {'anyOf': [{'XXX TODO XXX': 'np.size(np.zeros(X.shape[1], dtype=np.int64 if _check_sample_weight(sample_weight, X, dtype=X.dtype) is None else X.dtype)) == 1'}, {'allOf': [{'XXX TODO XXX': 'np.size(self.mean_) == np.size(self.var_)'}, {'XXX TODO XXX': 'np.size(self.var_) == np.size(np.zeros(X.shape[1], dtype=np.int64 if _check_sample_weight(sample_weight, X, dtype=X.dtype) is None else X.dtype))'}]}]}]}]}]},
           {'description': "From /utils/sparsefuncs.py:None:incr_mean_variance_axis, Exception: raise ValueError(     f'If axis=0, then last_mean, last_n, last_var should be of size n_features {X.shape[1]} (Got {np.size(last_mean)}).'     ) ", 'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_std': {'enum': [False]}}}, {'XXX TODO XXX': "not hasattr(self, 'scale_')"}, {'XXX TODO XXX': 'np.size(self.mean_) == X.shape[1]'}]},
           {'description': "From /preprocessing/_data.py:StandardScaler:partial_fit, Exception: raise ValueError(     'Cannot center sparse matrices: pass `with_mean=False` instead. See docstring for motivation and alternatives.'     ) ", 'anyOf': [{'type': 'object', 'laleNot': 'X/isSparse'}, {'type': 'object', 'properties': {'with_mean': {'enum': [False]}}}]}]}
