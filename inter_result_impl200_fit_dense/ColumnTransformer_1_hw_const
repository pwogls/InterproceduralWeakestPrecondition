{'allOf': [{'description': 'This first sub-object lists all constructor arguments with their types, one at a time, '
                           'omitting cross-argument constraints, if any.',
            'type': 'object',
            'additionalProperties': False,
            'required': ['transformers'],
            'relevantToOptimizer': [],
            'properties': {'transformers': {'description': 'Operators or pipelines to be applied to subsets of the '
                                                           'data.',
                                            'type': 'array',
                                            'items': {'description': 'Tuple of (name, transformer, column(s)).',
                                                      'type': 'array',
                                                      'laleType': 'tuple',
                                                      'minItems': 3,
                                                      'maxItems': 3,
                                                      'items': [{'description': 'Name.', 'type': 'string'},
                                                                {'description': 'Transformer.',
                                                                 'anyOf': [{'description': 'Transformer supporting fit '
                                                                                           'and transform.',
                                                                            'laleType': 'operator'},
                                                                           {'enum': ['passthrough', 'drop']}]},
                                                                {'description': 'Column(s).',
                                                                 'anyOf': [{'type': 'integer',
                                                                            'description': 'One column by index.'},
                                                                           {'type': 'array',
                                                                            'items': {'type': 'integer'},
                                                                            'description': 'Multiple columns by '
                                                                                           'index.'},
                                                                           {'type': 'string',
                                                                            'description': 'One Dataframe column by '
                                                                                           'name.'},
                                                                           {'type': 'array',
                                                                            'items': {'type': 'string'},
                                                                            'description': 'Multiple Dataframe columns '
                                                                                           'by names.'},
                                                                           {'type': 'array',
                                                                            'items': {'type': 'boolean'},
                                                                            'description': 'Boolean mask.'},
                                                                           {'laleType': 'callable',
                                                                            'not': {'type': ['integer',
                                                                                             'array',
                                                                                             'string']},
                                                                            'description': 'Callable that is passed '
                                                                                           'the input data X and can '
                                                                                           'return any of the '
                                                                                           'above.'}]}]}},
                           'remainder': {'description': 'Transformation for columns that were not specified in '
                                                        'transformers.',
                                         'anyOf': [{'description': 'Transformer supporting fit and transform.',
                                                    'laleType': 'operator'},
                                                   {'enum': ['passthrough', 'drop']}],
                                         'default': 'drop'},
                           'sparse_threshold': {'description': 'If the output of the different transfromers contains '
                                                               'sparse matrices,\n'
                                                               'these will be stacked as a sparse matrix if the '
                                                               'overall density is\n'
                                                               'lower than this value. Use sparse_threshold=0 to '
                                                               'always return dense.',
                                                'type': 'number',
                                                'minimum': 0.0,
                                                'maximum': 1.0,
                                                'default': 0.3},
                           'n_jobs': {'description': 'Number of jobs to run in parallel',
                                      'anyOf': [{'description': '1 unless in joblib.parallel_backend context.',
                                                 'enum': [None]},
                                                {'description': 'Use all processors.', 'enum': [-1]},
                                                {'description': 'Number of CPU cores.',
                                                 'type': 'integer',
                                                 'minimum': 1}],
                                      'default': None},
                           'transformer_weights': {'description': 'Multiplicative weights for features per '
                                                                  'transformer.\n'
                                                                  'The output of the transformer is multiplied by '
                                                                  'these weights.',
                                                   'anyOf': [{'description': 'Keys are transformer names, values the '
                                                                             'weights.',
                                                              'type': 'object'},
                                                             {'enum': [None]}],
                                                   'default': None},
                           'verbose': {'description': 'If True, the time elapsed while fitting each transformer will '
                                                      'be printed as it is completed.',
                                       'type': 'boolean',
                                       'default': False}}}]}
