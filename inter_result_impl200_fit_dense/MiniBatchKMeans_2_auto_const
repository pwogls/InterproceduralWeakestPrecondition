{'allOf': [{'type': 'object',
            'required': ['n_clusters',
                         'init',
                         'max_iter',
                         'batch_size',
                         'verbose',
                         'compute_labels',
                         'random_state',
                         'tol',
                         'max_no_improvement',
                         'init_size',
                         'n_init',
                         'reassignment_ratio'],
            'relevantToOptimizer': ['n_clusters',
                                    'init',
                                    'max_iter',
                                    'batch_size',
                                    'compute_labels',
                                    'tol',
                                    'max_no_improvement',
                                    'n_init'],
            'additionalProperties': False,
            'properties': {'n_clusters': {'type': 'integer',
                                          'minimumForOptimizer': 2,
                                          'maximumForOptimizer': 8,
                                          'distribution': 'uniform',
                                          'default': 8,
                                          'description': 'The number of clusters to form as well as the number of '
                                                         'centroids to generate.'},
                           'init': {'anyOf': [{'enum': ['k-means++', 'random']},
                                              {'laleType': 'callable', 'forOptimizer': False}],
                                    'default': 'k-means++',
                                    'description': "Method for initialization, defaults to 'k-means++':  'k-means++' : "
                                                   'selects initial cluster centers for k-mean clustering in a smart '
                                                   'way to speed up convergence'},
                           'max_iter': {'type': 'integer',
                                        'minimumForOptimizer': 10,
                                        'maximumForOptimizer': 1000,
                                        'distribution': 'uniform',
                                        'default': 100,
                                        'description': 'Maximum number of iterations over the complete dataset before '
                                                       'stopping independently of any early stopping criterion '
                                                       'heuristics.'},
                           'batch_size': {'type': 'integer',
                                          'minimumForOptimizer': 3,
                                          'maximumForOptimizer': 128,
                                          'distribution': 'uniform',
                                          'default': 100,
                                          'description': 'Size of the mini batches.'},
                           'verbose': {'anyOf': [{'type': 'boolean'}, {'type': 'integer'}],
                                       'default': 0,
                                       'description': 'Verbosity mode.'},
                           'compute_labels': {'type': 'boolean',
                                              'default': True,
                                              'description': 'Compute label assignment and inertia for the complete '
                                                             'dataset once the minibatch optimization has converged in '
                                                             'fit.'},
                           'random_state': {'anyOf': [{'type': 'integer'},
                                                      {'laleType': 'numpy.random.RandomState'},
                                                      {'enum': [None]}],
                                            'default': None,
                                            'description': 'Determines random number generation for centroid '
                                                           'initialization and random reassignment'},
                           'tol': {'type': 'number',
                                   'minimumForOptimizer': 1e-08,
                                   'maximumForOptimizer': 0.01,
                                   'distribution': 'loguniform',
                                   'default': 0.0,
                                   'description': 'Control early stopping based on the relative center changes as '
                                                  'measured by a smoothed, variance-normalized of the mean center '
                                                  'squared position changes'},
                           'max_no_improvement': {'type': 'integer',
                                                  'minimumForOptimizer': 10,
                                                  'maximumForOptimizer': 11,
                                                  'distribution': 'uniform',
                                                  'default': 10,
                                                  'description': 'Control early stopping based on the consecutive '
                                                                 'number of mini batches that does not yield an '
                                                                 'improvement on the smoothed inertia'},
                           'init_size': {'XXX TODO XXX': 'int, optional, default: 3 * batch_size',
                                         'description': 'Number of samples to randomly sample for speeding up the '
                                                        'initialization (sometimes at the expense of accuracy): the '
                                                        'only algorithm is initialized by running a batch KMeans on a '
                                                        'random subset of the data',
                                         'enum': [None],
                                         'default': None},
                           'n_init': {'type': 'integer',
                                      'minimumForOptimizer': 3,
                                      'maximumForOptimizer': 10,
                                      'distribution': 'uniform',
                                      'default': 3,
                                      'description': 'Number of random initializations that are tried'},
                           'reassignment_ratio': {'type': 'number',
                                                  'default': 0.01,
                                                  'description': 'Control the fraction of the maximum number of counts '
                                                                 'for a center to be reassigned'}}},
           {'XXX TODO XXX': 'Parameter: init_size > only algorithm is initialized by running a batch kmeans on a '
                            'random subset of the data'},
           {'XXX TODO XXX': 'Parameter: n_init > only run once, using the best of the n_init initializations as '
                            'measured by inertia'}]}
